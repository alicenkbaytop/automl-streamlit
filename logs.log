2023-01-08 20:02:02,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 20:02:02,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 20:02:02,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 20:02:02,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 20:02:03,239:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-08 20:02:11,734:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\multimethod\__init__.py:315: FutureWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`
  return func(*args, **kwargs)

2023-01-08 20:06:38,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 20:06:38,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 20:06:38,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 20:06:38,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 20:06:39,227:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-08 20:06:54,321:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\multimethod\__init__.py:315: FutureWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`
  return func(*args, **kwargs)

2023-01-08 21:41:11,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 21:41:11,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 21:41:11,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 21:41:11,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 21:41:12,604:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-08 21:41:41,650:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\multimethod\__init__.py:315: FutureWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`
  return func(*args, **kwargs)

2023-01-08 21:42:42,029:INFO:PyCaret ClassificationExperiment
2023-01-08 21:42:42,029:INFO:Logging name: clf-default-name
2023-01-08 21:42:42,029:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 21:42:42,029:INFO:version 3.0.0.rc6
2023-01-08 21:42:42,029:INFO:Initializing setup()
2023-01-08 21:42:42,029:INFO:self.USI: fee6
2023-01-08 21:42:42,029:INFO:self._variable_keys: {'X_train', 'fold_shuffle_param', 'y', 'fix_imbalance', 'logging_param', 'gpu_n_jobs_param', 'target_param', 'seed', 'exp_id', 'log_plots_param', 'y_train', 'idx', 'X_test', 'fold_generator', 'exp_name_log', 'is_multiclass', 'html_param', 'n_jobs_param', 'y_test', 'gpu_param', 'memory', 'USI', 'data', '_available_plots', 'X', '_ml_usecase', 'pipeline', 'fold_groups_param'}
2023-01-08 21:42:42,029:INFO:Checking environment
2023-01-08 21:42:42,029:INFO:python_version: 3.9.15
2023-01-08 21:42:42,029:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 21:42:42,029:INFO:machine: AMD64
2023-01-08 21:42:42,097:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 21:42:42,097:INFO:Memory: svmem(total=17010110464, available=4122443776, percent=75.8, used=12887666688, free=4122443776)
2023-01-08 21:42:42,097:INFO:Physical Core: 6
2023-01-08 21:42:42,101:INFO:Logical Core: 12
2023-01-08 21:42:42,101:INFO:Checking libraries
2023-01-08 21:42:42,101:INFO:System:
2023-01-08 21:42:42,101:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 21:42:42,101:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 21:42:42,101:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 21:42:42,101:INFO:PyCaret required dependencies:
2023-01-08 21:42:42,101:INFO:                 pip: 22.3.1
2023-01-08 21:42:42,101:INFO:          setuptools: 65.6.3
2023-01-08 21:42:42,101:INFO:             pycaret: 3.0.0rc6
2023-01-08 21:42:42,101:INFO:             IPython: 8.8.0
2023-01-08 21:42:42,101:INFO:          ipywidgets: 8.0.4
2023-01-08 21:42:42,101:INFO:                tqdm: 4.64.1
2023-01-08 21:42:42,105:INFO:               numpy: 1.22.4
2023-01-08 21:42:42,105:INFO:              pandas: 1.5.2
2023-01-08 21:42:42,105:INFO:              jinja2: 3.1.2
2023-01-08 21:42:42,105:INFO:               scipy: 1.9.3
2023-01-08 21:42:42,105:INFO:              joblib: 1.2.0
2023-01-08 21:42:42,105:INFO:             sklearn: 1.1.3
2023-01-08 21:42:42,105:INFO:                pyod: 1.0.7
2023-01-08 21:42:42,105:INFO:            imblearn: 0.10.1
2023-01-08 21:42:42,105:INFO:   category_encoders: 2.5.1.post0
2023-01-08 21:42:42,105:INFO:            lightgbm: 3.3.4
2023-01-08 21:42:42,105:INFO:               numba: 0.56.4
2023-01-08 21:42:42,109:INFO:            requests: 2.28.1
2023-01-08 21:42:42,109:INFO:          matplotlib: 3.6.2
2023-01-08 21:42:42,109:INFO:          scikitplot: 0.3.7
2023-01-08 21:42:42,109:INFO:         yellowbrick: 1.5
2023-01-08 21:42:42,109:INFO:              plotly: 5.11.0
2023-01-08 21:42:42,109:INFO:             kaleido: 0.2.1
2023-01-08 21:42:42,109:INFO:         statsmodels: 0.13.5
2023-01-08 21:42:42,109:INFO:              sktime: 0.14.1
2023-01-08 21:42:42,109:INFO:               tbats: 1.1.2
2023-01-08 21:42:42,109:INFO:            pmdarima: 2.0.2
2023-01-08 21:42:42,109:INFO:              psutil: 5.9.0
2023-01-08 21:42:42,109:INFO:PyCaret optional dependencies:
2023-01-08 21:42:42,188:INFO:                shap: Not installed
2023-01-08 21:42:42,188:INFO:           interpret: Not installed
2023-01-08 21:42:42,188:INFO:                umap: Not installed
2023-01-08 21:42:42,188:INFO:    pandas_profiling: 3.6.2
2023-01-08 21:42:42,188:INFO:  explainerdashboard: Not installed
2023-01-08 21:42:42,188:INFO:             autoviz: Not installed
2023-01-08 21:42:42,188:INFO:           fairlearn: Not installed
2023-01-08 21:42:42,188:INFO:             xgboost: Not installed
2023-01-08 21:42:42,188:INFO:            catboost: Not installed
2023-01-08 21:42:42,188:INFO:              kmodes: Not installed
2023-01-08 21:42:42,188:INFO:             mlxtend: Not installed
2023-01-08 21:42:42,188:INFO:       statsforecast: Not installed
2023-01-08 21:42:42,188:INFO:        tune_sklearn: Not installed
2023-01-08 21:42:42,188:INFO:                 ray: Not installed
2023-01-08 21:42:42,188:INFO:            hyperopt: Not installed
2023-01-08 21:42:42,188:INFO:              optuna: Not installed
2023-01-08 21:42:42,188:INFO:               skopt: Not installed
2023-01-08 21:42:42,188:INFO:              mlflow: Not installed
2023-01-08 21:42:42,188:INFO:              gradio: Not installed
2023-01-08 21:42:42,188:INFO:             fastapi: Not installed
2023-01-08 21:42:42,188:INFO:             uvicorn: Not installed
2023-01-08 21:42:42,188:INFO:              m2cgen: Not installed
2023-01-08 21:42:42,188:INFO:           evidently: Not installed
2023-01-08 21:42:42,188:INFO:                nltk: Not installed
2023-01-08 21:42:42,188:INFO:            pyLDAvis: Not installed
2023-01-08 21:42:42,188:INFO:              gensim: Not installed
2023-01-08 21:42:42,188:INFO:               spacy: Not installed
2023-01-08 21:42:42,188:INFO:           wordcloud: Not installed
2023-01-08 21:42:42,188:INFO:            textblob: Not installed
2023-01-08 21:42:42,188:INFO:               fugue: Not installed
2023-01-08 21:42:42,188:INFO:           streamlit: 1.16.0
2023-01-08 21:42:42,188:INFO:             prophet: Not installed
2023-01-08 21:42:42,188:INFO:None
2023-01-08 21:42:42,188:INFO:Set up data.
2023-01-08 21:42:42,196:INFO:Set up train/test split.
2023-01-08 21:42:42,204:INFO:Set up index.
2023-01-08 21:42:42,204:INFO:Set up folding strategy.
2023-01-08 21:42:42,208:INFO:Assigning column types.
2023-01-08 21:42:42,212:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 21:42:42,289:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:42:42,293:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:42:42,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,445:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:42:42,449:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:42:42,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,489:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 21:42:42,545:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:42:42,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,628:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:42:42,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,657:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 21:42:42,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,824:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:42,824:INFO:Preparing preprocessing pipeline...
2023-01-08 21:42:42,828:INFO:Set up label encoding.
2023-01-08 21:42:42,828:INFO:Set up simple imputation.
2023-01-08 21:42:42,904:INFO:Finished creating preprocessing pipeline.
2023-01-08 21:42:42,916:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 21:42:42,916:INFO:Creating final display dataframe.
2023-01-08 21:42:43,212:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5842
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               fee6
2023-01-08 21:42:43,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:43,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:43,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:43,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:42:43,421:INFO:setup() successfully completed in 1.4s...............
2023-01-08 21:42:43,425:INFO:Initializing compare_models()
2023-01-08 21:42:43,425:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 21:42:43,425:INFO:Checking exceptions
2023-01-08 21:42:43,429:INFO:Preparing display monitor
2023-01-08 21:42:43,436:INFO:Initializing Logistic Regression
2023-01-08 21:42:43,436:INFO:Total runtime is 0.0 minutes
2023-01-08 21:42:43,436:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:43,436:INFO:Initializing create_model()
2023-01-08 21:42:43,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:43,436:INFO:Checking exceptions
2023-01-08 21:42:43,436:INFO:Importing libraries
2023-01-08 21:42:43,436:INFO:Copying training dataset
2023-01-08 21:42:43,440:INFO:Defining folds
2023-01-08 21:42:43,440:INFO:Declaring metric variables
2023-01-08 21:42:43,440:INFO:Importing untrained model
2023-01-08 21:42:43,440:INFO:Logistic Regression Imported successfully
2023-01-08 21:42:43,440:INFO:Starting cross validation
2023-01-08 21:42:43,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:49,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,354:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,354:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,358:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,370:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,374:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,374:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,374:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,374:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,374:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,378:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,378:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,378:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,394:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,402:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,406:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,438:INFO:Calculating mean and std
2023-01-08 21:42:49,438:INFO:Creating metrics dataframe
2023-01-08 21:42:49,446:INFO:Uploading results into container
2023-01-08 21:42:49,446:INFO:Uploading model into container now
2023-01-08 21:42:49,446:INFO:_master_model_container: 1
2023-01-08 21:42:49,446:INFO:_display_container: 2
2023-01-08 21:42:49,446:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5842, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 21:42:49,446:INFO:create_model() successfully completed......................................
2023-01-08 21:42:49,586:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:49,586:INFO:Creating metrics dataframe
2023-01-08 21:42:49,592:INFO:Initializing K Neighbors Classifier
2023-01-08 21:42:49,592:INFO:Total runtime is 0.10259489218393962 minutes
2023-01-08 21:42:49,592:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:49,592:INFO:Initializing create_model()
2023-01-08 21:42:49,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:49,592:INFO:Checking exceptions
2023-01-08 21:42:49,592:INFO:Importing libraries
2023-01-08 21:42:49,592:INFO:Copying training dataset
2023-01-08 21:42:49,596:INFO:Defining folds
2023-01-08 21:42:49,596:INFO:Declaring metric variables
2023-01-08 21:42:49,596:INFO:Importing untrained model
2023-01-08 21:42:49,596:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:42:49,596:INFO:Starting cross validation
2023-01-08 21:42:49,600:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:49,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:49,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,270:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,274:INFO:Calculating mean and std
2023-01-08 21:42:52,274:INFO:Creating metrics dataframe
2023-01-08 21:42:52,282:INFO:Uploading results into container
2023-01-08 21:42:52,286:INFO:Uploading model into container now
2023-01-08 21:42:52,286:INFO:_master_model_container: 2
2023-01-08 21:42:52,286:INFO:_display_container: 2
2023-01-08 21:42:52,286:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:42:52,286:INFO:create_model() successfully completed......................................
2023-01-08 21:42:52,422:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:52,422:INFO:Creating metrics dataframe
2023-01-08 21:42:52,430:INFO:Initializing Naive Bayes
2023-01-08 21:42:52,430:INFO:Total runtime is 0.14989713430404664 minutes
2023-01-08 21:42:52,430:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:52,430:INFO:Initializing create_model()
2023-01-08 21:42:52,430:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:52,430:INFO:Checking exceptions
2023-01-08 21:42:52,430:INFO:Importing libraries
2023-01-08 21:42:52,430:INFO:Copying training dataset
2023-01-08 21:42:52,434:INFO:Defining folds
2023-01-08 21:42:52,434:INFO:Declaring metric variables
2023-01-08 21:42:52,434:INFO:Importing untrained model
2023-01-08 21:42:52,434:INFO:Naive Bayes Imported successfully
2023-01-08 21:42:52,434:INFO:Starting cross validation
2023-01-08 21:42:52,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:52,514:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,518:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,518:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,518:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,518:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,522:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,550:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,550:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,550:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,550:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,554:INFO:Calculating mean and std
2023-01-08 21:42:52,554:INFO:Creating metrics dataframe
2023-01-08 21:42:52,558:INFO:Uploading results into container
2023-01-08 21:42:52,558:INFO:Uploading model into container now
2023-01-08 21:42:52,562:INFO:_master_model_container: 3
2023-01-08 21:42:52,562:INFO:_display_container: 2
2023-01-08 21:42:52,562:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 21:42:52,562:INFO:create_model() successfully completed......................................
2023-01-08 21:42:52,674:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:52,674:INFO:Creating metrics dataframe
2023-01-08 21:42:52,682:INFO:Initializing Decision Tree Classifier
2023-01-08 21:42:52,682:INFO:Total runtime is 0.15409314235051474 minutes
2023-01-08 21:42:52,682:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:52,682:INFO:Initializing create_model()
2023-01-08 21:42:52,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:52,682:INFO:Checking exceptions
2023-01-08 21:42:52,682:INFO:Importing libraries
2023-01-08 21:42:52,682:INFO:Copying training dataset
2023-01-08 21:42:52,686:INFO:Defining folds
2023-01-08 21:42:52,686:INFO:Declaring metric variables
2023-01-08 21:42:52,686:INFO:Importing untrained model
2023-01-08 21:42:52,686:INFO:Decision Tree Classifier Imported successfully
2023-01-08 21:42:52,686:INFO:Starting cross validation
2023-01-08 21:42:52,690:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:52,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:52,802:INFO:Calculating mean and std
2023-01-08 21:42:52,802:INFO:Creating metrics dataframe
2023-01-08 21:42:52,806:INFO:Uploading results into container
2023-01-08 21:42:52,806:INFO:Uploading model into container now
2023-01-08 21:42:52,806:INFO:_master_model_container: 4
2023-01-08 21:42:52,806:INFO:_display_container: 2
2023-01-08 21:42:52,810:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5842, splitter='best')
2023-01-08 21:42:52,810:INFO:create_model() successfully completed......................................
2023-01-08 21:42:52,930:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:52,930:INFO:Creating metrics dataframe
2023-01-08 21:42:52,938:INFO:Initializing SVM - Linear Kernel
2023-01-08 21:42:52,938:INFO:Total runtime is 0.1583604137102763 minutes
2023-01-08 21:42:52,938:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:52,938:INFO:Initializing create_model()
2023-01-08 21:42:52,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:52,938:INFO:Checking exceptions
2023-01-08 21:42:52,938:INFO:Importing libraries
2023-01-08 21:42:52,938:INFO:Copying training dataset
2023-01-08 21:42:52,942:INFO:Defining folds
2023-01-08 21:42:52,942:INFO:Declaring metric variables
2023-01-08 21:42:52,942:INFO:Importing untrained model
2023-01-08 21:42:52,942:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 21:42:52,942:INFO:Starting cross validation
2023-01-08 21:42:52,946:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:53,018:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,018:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,022:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,022:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:53,022:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,022:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,022:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,026:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,026:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,026:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:53,026:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,030:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,030:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,030:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,030:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,034:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,034:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:53,034:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,038:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,038:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,038:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,038:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,038:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,038:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,042:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,050:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,050:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,054:INFO:Calculating mean and std
2023-01-08 21:42:53,054:INFO:Creating metrics dataframe
2023-01-08 21:42:53,058:INFO:Uploading results into container
2023-01-08 21:42:53,058:INFO:Uploading model into container now
2023-01-08 21:42:53,058:INFO:_master_model_container: 5
2023-01-08 21:42:53,058:INFO:_display_container: 2
2023-01-08 21:42:53,062:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5842, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 21:42:53,062:INFO:create_model() successfully completed......................................
2023-01-08 21:42:53,178:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:53,178:INFO:Creating metrics dataframe
2023-01-08 21:42:53,182:INFO:Initializing Ridge Classifier
2023-01-08 21:42:53,182:INFO:Total runtime is 0.16242227951685587 minutes
2023-01-08 21:42:53,182:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:53,182:INFO:Initializing create_model()
2023-01-08 21:42:53,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:53,182:INFO:Checking exceptions
2023-01-08 21:42:53,182:INFO:Importing libraries
2023-01-08 21:42:53,182:INFO:Copying training dataset
2023-01-08 21:42:53,186:INFO:Defining folds
2023-01-08 21:42:53,186:INFO:Declaring metric variables
2023-01-08 21:42:53,186:INFO:Importing untrained model
2023-01-08 21:42:53,186:INFO:Ridge Classifier Imported successfully
2023-01-08 21:42:53,186:INFO:Starting cross validation
2023-01-08 21:42:53,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:53,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,270:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,270:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,274:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,274:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,278:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,278:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,278:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,278:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,286:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,286:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,294:INFO:Calculating mean and std
2023-01-08 21:42:53,298:INFO:Creating metrics dataframe
2023-01-08 21:42:53,302:INFO:Uploading results into container
2023-01-08 21:42:53,306:INFO:Uploading model into container now
2023-01-08 21:42:53,306:INFO:_master_model_container: 6
2023-01-08 21:42:53,306:INFO:_display_container: 2
2023-01-08 21:42:53,306:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=5842, solver='auto', tol=0.001)
2023-01-08 21:42:53,306:INFO:create_model() successfully completed......................................
2023-01-08 21:42:53,438:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:53,438:INFO:Creating metrics dataframe
2023-01-08 21:42:53,450:INFO:Initializing Random Forest Classifier
2023-01-08 21:42:53,450:INFO:Total runtime is 0.16689030726750692 minutes
2023-01-08 21:42:53,450:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:53,450:INFO:Initializing create_model()
2023-01-08 21:42:53,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:53,450:INFO:Checking exceptions
2023-01-08 21:42:53,450:INFO:Importing libraries
2023-01-08 21:42:53,450:INFO:Copying training dataset
2023-01-08 21:42:53,450:INFO:Defining folds
2023-01-08 21:42:53,454:INFO:Declaring metric variables
2023-01-08 21:42:53,454:INFO:Importing untrained model
2023-01-08 21:42:53,454:INFO:Random Forest Classifier Imported successfully
2023-01-08 21:42:53,454:INFO:Starting cross validation
2023-01-08 21:42:53,454:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:53,830:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,834:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,834:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,838:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,842:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,842:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,842:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,842:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,846:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,846:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,846:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,850:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,850:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,854:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,866:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,866:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,866:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,866:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,870:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:53,870:INFO:Calculating mean and std
2023-01-08 21:42:53,874:INFO:Creating metrics dataframe
2023-01-08 21:42:53,878:INFO:Uploading results into container
2023-01-08 21:42:53,878:INFO:Uploading model into container now
2023-01-08 21:42:53,878:INFO:_master_model_container: 7
2023-01-08 21:42:53,878:INFO:_display_container: 2
2023-01-08 21:42:53,878:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5842, verbose=0, warm_start=False)
2023-01-08 21:42:53,878:INFO:create_model() successfully completed......................................
2023-01-08 21:42:54,002:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:54,002:INFO:Creating metrics dataframe
2023-01-08 21:42:54,006:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 21:42:54,006:INFO:Total runtime is 0.17615721623102823 minutes
2023-01-08 21:42:54,006:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:54,006:INFO:Initializing create_model()
2023-01-08 21:42:54,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:54,006:INFO:Checking exceptions
2023-01-08 21:42:54,006:INFO:Importing libraries
2023-01-08 21:42:54,006:INFO:Copying training dataset
2023-01-08 21:42:54,010:INFO:Defining folds
2023-01-08 21:42:54,010:INFO:Declaring metric variables
2023-01-08 21:42:54,010:INFO:Importing untrained model
2023-01-08 21:42:54,010:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 21:42:54,010:INFO:Starting cross validation
2023-01-08 21:42:54,010:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:54,090:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,102:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,102:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,102:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,102:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,102:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,118:INFO:Calculating mean and std
2023-01-08 21:42:54,118:INFO:Creating metrics dataframe
2023-01-08 21:42:54,122:INFO:Uploading results into container
2023-01-08 21:42:54,122:INFO:Uploading model into container now
2023-01-08 21:42:54,122:INFO:_master_model_container: 8
2023-01-08 21:42:54,122:INFO:_display_container: 2
2023-01-08 21:42:54,122:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 21:42:54,122:INFO:create_model() successfully completed......................................
2023-01-08 21:42:54,232:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:54,232:INFO:Creating metrics dataframe
2023-01-08 21:42:54,236:INFO:Initializing Ada Boost Classifier
2023-01-08 21:42:54,236:INFO:Total runtime is 0.179989484945933 minutes
2023-01-08 21:42:54,236:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:54,236:INFO:Initializing create_model()
2023-01-08 21:42:54,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:54,236:INFO:Checking exceptions
2023-01-08 21:42:54,236:INFO:Importing libraries
2023-01-08 21:42:54,236:INFO:Copying training dataset
2023-01-08 21:42:54,240:INFO:Defining folds
2023-01-08 21:42:54,240:INFO:Declaring metric variables
2023-01-08 21:42:54,240:INFO:Importing untrained model
2023-01-08 21:42:54,240:INFO:Ada Boost Classifier Imported successfully
2023-01-08 21:42:54,240:INFO:Starting cross validation
2023-01-08 21:42:54,242:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:54,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,461:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,465:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,469:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,469:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,473:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,485:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,489:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,489:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,489:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,489:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,489:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,493:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,501:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,501:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,501:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:54,505:INFO:Calculating mean and std
2023-01-08 21:42:54,505:INFO:Creating metrics dataframe
2023-01-08 21:42:54,509:INFO:Uploading results into container
2023-01-08 21:42:54,513:INFO:Uploading model into container now
2023-01-08 21:42:54,513:INFO:_master_model_container: 9
2023-01-08 21:42:54,513:INFO:_display_container: 2
2023-01-08 21:42:54,513:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5842)
2023-01-08 21:42:54,513:INFO:create_model() successfully completed......................................
2023-01-08 21:42:54,624:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:54,624:INFO:Creating metrics dataframe
2023-01-08 21:42:54,628:INFO:Initializing Gradient Boosting Classifier
2023-01-08 21:42:54,628:INFO:Total runtime is 0.18653302987416584 minutes
2023-01-08 21:42:54,628:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:54,628:INFO:Initializing create_model()
2023-01-08 21:42:54,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:54,628:INFO:Checking exceptions
2023-01-08 21:42:54,628:INFO:Importing libraries
2023-01-08 21:42:54,628:INFO:Copying training dataset
2023-01-08 21:42:54,632:INFO:Defining folds
2023-01-08 21:42:54,632:INFO:Declaring metric variables
2023-01-08 21:42:54,632:INFO:Importing untrained model
2023-01-08 21:42:54,632:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 21:42:54,632:INFO:Starting cross validation
2023-01-08 21:42:54,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:55,004:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,004:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,012:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,028:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,028:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,070:INFO:Calculating mean and std
2023-01-08 21:42:55,070:INFO:Creating metrics dataframe
2023-01-08 21:42:55,072:INFO:Uploading results into container
2023-01-08 21:42:55,076:INFO:Uploading model into container now
2023-01-08 21:42:55,076:INFO:_master_model_container: 10
2023-01-08 21:42:55,076:INFO:_display_container: 2
2023-01-08 21:42:55,076:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5842, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 21:42:55,076:INFO:create_model() successfully completed......................................
2023-01-08 21:42:55,188:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:55,188:INFO:Creating metrics dataframe
2023-01-08 21:42:55,194:INFO:Initializing Linear Discriminant Analysis
2023-01-08 21:42:55,198:INFO:Total runtime is 0.19595497051874794 minutes
2023-01-08 21:42:55,198:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:55,198:INFO:Initializing create_model()
2023-01-08 21:42:55,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:55,198:INFO:Checking exceptions
2023-01-08 21:42:55,198:INFO:Importing libraries
2023-01-08 21:42:55,198:INFO:Copying training dataset
2023-01-08 21:42:55,198:INFO:Defining folds
2023-01-08 21:42:55,198:INFO:Declaring metric variables
2023-01-08 21:42:55,198:INFO:Importing untrained model
2023-01-08 21:42:55,202:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:42:55,202:INFO:Starting cross validation
2023-01-08 21:42:55,202:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:55,278:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,278:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,286:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,286:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,304:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,304:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,304:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,304:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,304:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,304:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,304:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,308:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,308:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,308:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,308:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,312:INFO:Calculating mean and std
2023-01-08 21:42:55,312:INFO:Creating metrics dataframe
2023-01-08 21:42:55,316:INFO:Uploading results into container
2023-01-08 21:42:55,320:INFO:Uploading model into container now
2023-01-08 21:42:55,320:INFO:_master_model_container: 11
2023-01-08 21:42:55,320:INFO:_display_container: 2
2023-01-08 21:42:55,320:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:42:55,320:INFO:create_model() successfully completed......................................
2023-01-08 21:42:55,442:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:55,442:INFO:Creating metrics dataframe
2023-01-08 21:42:55,446:INFO:Initializing Extra Trees Classifier
2023-01-08 21:42:55,446:INFO:Total runtime is 0.20015061299006143 minutes
2023-01-08 21:42:55,446:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:55,446:INFO:Initializing create_model()
2023-01-08 21:42:55,446:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:55,446:INFO:Checking exceptions
2023-01-08 21:42:55,446:INFO:Importing libraries
2023-01-08 21:42:55,446:INFO:Copying training dataset
2023-01-08 21:42:55,446:INFO:Defining folds
2023-01-08 21:42:55,450:INFO:Declaring metric variables
2023-01-08 21:42:55,450:INFO:Importing untrained model
2023-01-08 21:42:55,450:INFO:Extra Trees Classifier Imported successfully
2023-01-08 21:42:55,450:INFO:Starting cross validation
2023-01-08 21:42:55,450:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:55,766:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:55,809:INFO:Calculating mean and std
2023-01-08 21:42:55,809:INFO:Creating metrics dataframe
2023-01-08 21:42:55,813:INFO:Uploading results into container
2023-01-08 21:42:55,817:INFO:Uploading model into container now
2023-01-08 21:42:55,817:INFO:_master_model_container: 12
2023-01-08 21:42:55,817:INFO:_display_container: 2
2023-01-08 21:42:55,817:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5842, verbose=0, warm_start=False)
2023-01-08 21:42:55,817:INFO:create_model() successfully completed......................................
2023-01-08 21:42:55,934:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:55,934:INFO:Creating metrics dataframe
2023-01-08 21:42:55,938:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 21:42:55,938:INFO:Total runtime is 0.2083566387494405 minutes
2023-01-08 21:42:55,938:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:55,938:INFO:Initializing create_model()
2023-01-08 21:42:55,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:55,938:INFO:Checking exceptions
2023-01-08 21:42:55,938:INFO:Importing libraries
2023-01-08 21:42:55,938:INFO:Copying training dataset
2023-01-08 21:42:55,942:INFO:Defining folds
2023-01-08 21:42:55,942:INFO:Declaring metric variables
2023-01-08 21:42:55,942:INFO:Importing untrained model
2023-01-08 21:42:55,944:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 21:42:55,944:INFO:Starting cross validation
2023-01-08 21:42:55,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:56,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,108:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,116:INFO:Calculating mean and std
2023-01-08 21:42:56,116:INFO:Creating metrics dataframe
2023-01-08 21:42:56,120:INFO:Uploading results into container
2023-01-08 21:42:56,120:INFO:Uploading model into container now
2023-01-08 21:42:56,120:INFO:_master_model_container: 13
2023-01-08 21:42:56,120:INFO:_display_container: 2
2023-01-08 21:42:56,120:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5842, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 21:42:56,120:INFO:create_model() successfully completed......................................
2023-01-08 21:42:56,230:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:56,230:INFO:Creating metrics dataframe
2023-01-08 21:42:56,238:INFO:Initializing Dummy Classifier
2023-01-08 21:42:56,238:INFO:Total runtime is 0.2133573810259501 minutes
2023-01-08 21:42:56,238:INFO:SubProcess create_model() called ==================================
2023-01-08 21:42:56,238:INFO:Initializing create_model()
2023-01-08 21:42:56,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DE65B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:56,238:INFO:Checking exceptions
2023-01-08 21:42:56,238:INFO:Importing libraries
2023-01-08 21:42:56,238:INFO:Copying training dataset
2023-01-08 21:42:56,242:INFO:Defining folds
2023-01-08 21:42:56,242:INFO:Declaring metric variables
2023-01-08 21:42:56,242:INFO:Importing untrained model
2023-01-08 21:42:56,242:INFO:Dummy Classifier Imported successfully
2023-01-08 21:42:56,242:INFO:Starting cross validation
2023-01-08 21:42:56,242:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:42:56,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:56,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:56,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:56,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:56,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:56,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:56,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:42:56,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:42:56,338:INFO:Calculating mean and std
2023-01-08 21:42:56,338:INFO:Creating metrics dataframe
2023-01-08 21:42:56,342:INFO:Uploading results into container
2023-01-08 21:42:56,342:INFO:Uploading model into container now
2023-01-08 21:42:56,346:INFO:_master_model_container: 14
2023-01-08 21:42:56,346:INFO:_display_container: 2
2023-01-08 21:42:56,346:INFO:DummyClassifier(constant=None, random_state=5842, strategy='prior')
2023-01-08 21:42:56,346:INFO:create_model() successfully completed......................................
2023-01-08 21:42:56,450:INFO:SubProcess create_model() end ==================================
2023-01-08 21:42:56,450:INFO:Creating metrics dataframe
2023-01-08 21:42:56,458:INFO:Initializing create_model()
2023-01-08 21:42:56,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002564F4B3460>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:42:56,458:INFO:Checking exceptions
2023-01-08 21:42:56,458:INFO:Importing libraries
2023-01-08 21:42:56,458:INFO:Copying training dataset
2023-01-08 21:42:56,458:INFO:Defining folds
2023-01-08 21:42:56,458:INFO:Declaring metric variables
2023-01-08 21:42:56,462:INFO:Importing untrained model
2023-01-08 21:42:56,462:INFO:Declaring custom model
2023-01-08 21:42:56,462:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:42:56,462:INFO:Cross validation set to False
2023-01-08 21:42:56,462:INFO:Fitting Model
2023-01-08 21:42:56,504:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:42:56,504:INFO:create_model() successfully completed......................................
2023-01-08 21:42:56,628:INFO:_master_model_container: 14
2023-01-08 21:42:56,628:INFO:_display_container: 2
2023-01-08 21:42:56,628:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:42:56,628:INFO:compare_models() successfully completed......................................
2023-01-08 21:43:38,009:INFO:PyCaret ClassificationExperiment
2023-01-08 21:43:38,009:INFO:Logging name: clf-default-name
2023-01-08 21:43:38,013:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 21:43:38,013:INFO:version 3.0.0.rc6
2023-01-08 21:43:38,013:INFO:Initializing setup()
2023-01-08 21:43:38,013:INFO:self.USI: 9976
2023-01-08 21:43:38,013:INFO:self._variable_keys: {'X_train', 'fold_shuffle_param', 'y', 'fix_imbalance', 'logging_param', 'gpu_n_jobs_param', 'target_param', 'seed', 'exp_id', 'log_plots_param', 'y_train', 'idx', 'X_test', 'fold_generator', 'exp_name_log', 'is_multiclass', 'html_param', 'n_jobs_param', 'y_test', 'gpu_param', 'memory', 'USI', 'data', '_available_plots', 'X', '_ml_usecase', 'pipeline', 'fold_groups_param'}
2023-01-08 21:43:38,013:INFO:Checking environment
2023-01-08 21:43:38,013:INFO:python_version: 3.9.15
2023-01-08 21:43:38,013:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 21:43:38,013:INFO:machine: AMD64
2023-01-08 21:43:38,017:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 21:43:38,017:INFO:Memory: svmem(total=17010110464, available=2690600960, percent=84.2, used=14319509504, free=2690600960)
2023-01-08 21:43:38,017:INFO:Physical Core: 6
2023-01-08 21:43:38,017:INFO:Logical Core: 12
2023-01-08 21:43:38,017:INFO:Checking libraries
2023-01-08 21:43:38,017:INFO:System:
2023-01-08 21:43:38,017:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 21:43:38,017:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 21:43:38,017:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 21:43:38,017:INFO:PyCaret required dependencies:
2023-01-08 21:43:38,021:INFO:                 pip: 22.3.1
2023-01-08 21:43:38,021:INFO:          setuptools: 65.6.3
2023-01-08 21:43:38,021:INFO:             pycaret: 3.0.0rc6
2023-01-08 21:43:38,021:INFO:             IPython: 8.8.0
2023-01-08 21:43:38,021:INFO:          ipywidgets: 8.0.4
2023-01-08 21:43:38,021:INFO:                tqdm: 4.64.1
2023-01-08 21:43:38,021:INFO:               numpy: 1.22.4
2023-01-08 21:43:38,021:INFO:              pandas: 1.5.2
2023-01-08 21:43:38,021:INFO:              jinja2: 3.1.2
2023-01-08 21:43:38,021:INFO:               scipy: 1.9.3
2023-01-08 21:43:38,021:INFO:              joblib: 1.2.0
2023-01-08 21:43:38,021:INFO:             sklearn: 1.1.3
2023-01-08 21:43:38,021:INFO:                pyod: 1.0.7
2023-01-08 21:43:38,021:INFO:            imblearn: 0.10.1
2023-01-08 21:43:38,021:INFO:   category_encoders: 2.5.1.post0
2023-01-08 21:43:38,021:INFO:            lightgbm: 3.3.4
2023-01-08 21:43:38,021:INFO:               numba: 0.56.4
2023-01-08 21:43:38,021:INFO:            requests: 2.28.1
2023-01-08 21:43:38,025:INFO:          matplotlib: 3.6.2
2023-01-08 21:43:38,025:INFO:          scikitplot: 0.3.7
2023-01-08 21:43:38,025:INFO:         yellowbrick: 1.5
2023-01-08 21:43:38,025:INFO:              plotly: 5.11.0
2023-01-08 21:43:38,025:INFO:             kaleido: 0.2.1
2023-01-08 21:43:38,025:INFO:         statsmodels: 0.13.5
2023-01-08 21:43:38,025:INFO:              sktime: 0.14.1
2023-01-08 21:43:38,025:INFO:               tbats: 1.1.2
2023-01-08 21:43:38,025:INFO:            pmdarima: 2.0.2
2023-01-08 21:43:38,025:INFO:              psutil: 5.9.0
2023-01-08 21:43:38,025:INFO:PyCaret optional dependencies:
2023-01-08 21:43:38,025:INFO:                shap: Not installed
2023-01-08 21:43:38,025:INFO:           interpret: Not installed
2023-01-08 21:43:38,025:INFO:                umap: Not installed
2023-01-08 21:43:38,025:INFO:    pandas_profiling: 3.6.2
2023-01-08 21:43:38,025:INFO:  explainerdashboard: Not installed
2023-01-08 21:43:38,025:INFO:             autoviz: Not installed
2023-01-08 21:43:38,029:INFO:           fairlearn: Not installed
2023-01-08 21:43:38,029:INFO:             xgboost: Not installed
2023-01-08 21:43:38,029:INFO:            catboost: Not installed
2023-01-08 21:43:38,029:INFO:              kmodes: Not installed
2023-01-08 21:43:38,029:INFO:             mlxtend: Not installed
2023-01-08 21:43:38,029:INFO:       statsforecast: Not installed
2023-01-08 21:43:38,029:INFO:        tune_sklearn: Not installed
2023-01-08 21:43:38,029:INFO:                 ray: Not installed
2023-01-08 21:43:38,029:INFO:            hyperopt: Not installed
2023-01-08 21:43:38,029:INFO:              optuna: Not installed
2023-01-08 21:43:38,029:INFO:               skopt: Not installed
2023-01-08 21:43:38,029:INFO:              mlflow: Not installed
2023-01-08 21:43:38,029:INFO:              gradio: Not installed
2023-01-08 21:43:38,029:INFO:             fastapi: Not installed
2023-01-08 21:43:38,029:INFO:             uvicorn: Not installed
2023-01-08 21:43:38,029:INFO:              m2cgen: Not installed
2023-01-08 21:43:38,033:INFO:           evidently: Not installed
2023-01-08 21:43:38,033:INFO:                nltk: Not installed
2023-01-08 21:43:38,033:INFO:            pyLDAvis: Not installed
2023-01-08 21:43:38,033:INFO:              gensim: Not installed
2023-01-08 21:43:38,033:INFO:               spacy: Not installed
2023-01-08 21:43:38,033:INFO:           wordcloud: Not installed
2023-01-08 21:43:38,033:INFO:            textblob: Not installed
2023-01-08 21:43:38,033:INFO:               fugue: Not installed
2023-01-08 21:43:38,033:INFO:           streamlit: 1.16.0
2023-01-08 21:43:38,033:INFO:             prophet: Not installed
2023-01-08 21:43:38,033:INFO:None
2023-01-08 21:43:38,033:INFO:Set up data.
2023-01-08 21:43:38,048:INFO:Set up train/test split.
2023-01-08 21:43:38,064:INFO:Set up index.
2023-01-08 21:43:38,064:INFO:Set up folding strategy.
2023-01-08 21:43:38,064:INFO:Assigning column types.
2023-01-08 21:43:38,076:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 21:43:38,156:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:43:38,156:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:43:38,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,252:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:43:38,256:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:43:38,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,288:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 21:43:38,340:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:43:38,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,420:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:43:38,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,452:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 21:43:38,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:38,628:INFO:Preparing preprocessing pipeline...
2023-01-08 21:43:38,628:INFO:Set up label encoding.
2023-01-08 21:43:38,628:INFO:Set up simple imputation.
2023-01-08 21:43:38,696:INFO:Finished creating preprocessing pipeline.
2023-01-08 21:43:38,704:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 21:43:38,704:INFO:Creating final display dataframe.
2023-01-08 21:43:39,036:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               1485
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               9976
2023-01-08 21:43:39,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:39,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:39,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:39,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:43:39,276:INFO:setup() successfully completed in 1.27s...............
2023-01-08 21:43:39,276:INFO:Initializing compare_models()
2023-01-08 21:43:39,276:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 21:43:39,276:INFO:Checking exceptions
2023-01-08 21:43:39,280:INFO:Preparing display monitor
2023-01-08 21:43:39,284:INFO:Initializing Logistic Regression
2023-01-08 21:43:39,284:INFO:Total runtime is 0.0 minutes
2023-01-08 21:43:39,284:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:39,288:INFO:Initializing create_model()
2023-01-08 21:43:39,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:39,288:INFO:Checking exceptions
2023-01-08 21:43:39,288:INFO:Importing libraries
2023-01-08 21:43:39,288:INFO:Copying training dataset
2023-01-08 21:43:39,288:INFO:Defining folds
2023-01-08 21:43:39,288:INFO:Declaring metric variables
2023-01-08 21:43:39,288:INFO:Importing untrained model
2023-01-08 21:43:39,292:INFO:Logistic Regression Imported successfully
2023-01-08 21:43:39,292:INFO:Starting cross validation
2023-01-08 21:43:39,292:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:39,575:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,583:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,599:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,619:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,627:INFO:Calculating mean and std
2023-01-08 21:43:39,627:INFO:Creating metrics dataframe
2023-01-08 21:43:39,631:INFO:Uploading results into container
2023-01-08 21:43:39,631:INFO:Uploading model into container now
2023-01-08 21:43:39,635:INFO:_master_model_container: 1
2023-01-08 21:43:39,635:INFO:_display_container: 2
2023-01-08 21:43:39,635:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 21:43:39,635:INFO:create_model() successfully completed......................................
2023-01-08 21:43:39,779:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:39,779:INFO:Creating metrics dataframe
2023-01-08 21:43:39,783:INFO:Initializing K Neighbors Classifier
2023-01-08 21:43:39,783:INFO:Total runtime is 0.008325461546579998 minutes
2023-01-08 21:43:39,787:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:39,787:INFO:Initializing create_model()
2023-01-08 21:43:39,787:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:39,787:INFO:Checking exceptions
2023-01-08 21:43:39,787:INFO:Importing libraries
2023-01-08 21:43:39,787:INFO:Copying training dataset
2023-01-08 21:43:39,787:INFO:Defining folds
2023-01-08 21:43:39,791:INFO:Declaring metric variables
2023-01-08 21:43:39,791:INFO:Importing untrained model
2023-01-08 21:43:39,791:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:43:39,791:INFO:Starting cross validation
2023-01-08 21:43:39,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:39,916:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,920:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,920:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,924:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,924:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,928:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,932:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,936:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,936:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,952:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:39,968:INFO:Calculating mean and std
2023-01-08 21:43:39,968:INFO:Creating metrics dataframe
2023-01-08 21:43:39,972:INFO:Uploading results into container
2023-01-08 21:43:39,972:INFO:Uploading model into container now
2023-01-08 21:43:39,972:INFO:_master_model_container: 2
2023-01-08 21:43:39,972:INFO:_display_container: 2
2023-01-08 21:43:39,976:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:43:39,976:INFO:create_model() successfully completed......................................
2023-01-08 21:43:40,087:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:40,087:INFO:Creating metrics dataframe
2023-01-08 21:43:40,095:INFO:Initializing Naive Bayes
2023-01-08 21:43:40,095:INFO:Total runtime is 0.013528025150299074 minutes
2023-01-08 21:43:40,095:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:40,095:INFO:Initializing create_model()
2023-01-08 21:43:40,095:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:40,095:INFO:Checking exceptions
2023-01-08 21:43:40,095:INFO:Importing libraries
2023-01-08 21:43:40,095:INFO:Copying training dataset
2023-01-08 21:43:40,099:INFO:Defining folds
2023-01-08 21:43:40,099:INFO:Declaring metric variables
2023-01-08 21:43:40,099:INFO:Importing untrained model
2023-01-08 21:43:40,099:INFO:Naive Bayes Imported successfully
2023-01-08 21:43:40,099:INFO:Starting cross validation
2023-01-08 21:43:40,099:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:40,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,175:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,175:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,183:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,187:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,187:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,187:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,191:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,191:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,195:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,207:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,211:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,219:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,219:INFO:Calculating mean and std
2023-01-08 21:43:40,223:INFO:Creating metrics dataframe
2023-01-08 21:43:40,227:INFO:Uploading results into container
2023-01-08 21:43:40,227:INFO:Uploading model into container now
2023-01-08 21:43:40,227:INFO:_master_model_container: 3
2023-01-08 21:43:40,227:INFO:_display_container: 2
2023-01-08 21:43:40,227:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 21:43:40,227:INFO:create_model() successfully completed......................................
2023-01-08 21:43:40,332:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:40,332:INFO:Creating metrics dataframe
2023-01-08 21:43:40,336:INFO:Initializing Decision Tree Classifier
2023-01-08 21:43:40,336:INFO:Total runtime is 0.01752941211064657 minutes
2023-01-08 21:43:40,336:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:40,336:INFO:Initializing create_model()
2023-01-08 21:43:40,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:40,336:INFO:Checking exceptions
2023-01-08 21:43:40,336:INFO:Importing libraries
2023-01-08 21:43:40,336:INFO:Copying training dataset
2023-01-08 21:43:40,340:INFO:Defining folds
2023-01-08 21:43:40,340:INFO:Declaring metric variables
2023-01-08 21:43:40,340:INFO:Importing untrained model
2023-01-08 21:43:40,340:INFO:Decision Tree Classifier Imported successfully
2023-01-08 21:43:40,340:INFO:Starting cross validation
2023-01-08 21:43:40,340:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:40,403:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,403:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,431:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,431:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,435:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,435:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,451:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,451:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,455:INFO:Calculating mean and std
2023-01-08 21:43:40,455:INFO:Creating metrics dataframe
2023-01-08 21:43:40,463:INFO:Uploading results into container
2023-01-08 21:43:40,463:INFO:Uploading model into container now
2023-01-08 21:43:40,463:INFO:_master_model_container: 4
2023-01-08 21:43:40,463:INFO:_display_container: 2
2023-01-08 21:43:40,463:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1485, splitter='best')
2023-01-08 21:43:40,463:INFO:create_model() successfully completed......................................
2023-01-08 21:43:40,587:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:40,587:INFO:Creating metrics dataframe
2023-01-08 21:43:40,591:INFO:Initializing SVM - Linear Kernel
2023-01-08 21:43:40,591:INFO:Total runtime is 0.02179210980733236 minutes
2023-01-08 21:43:40,591:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:40,595:INFO:Initializing create_model()
2023-01-08 21:43:40,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:40,595:INFO:Checking exceptions
2023-01-08 21:43:40,595:INFO:Importing libraries
2023-01-08 21:43:40,595:INFO:Copying training dataset
2023-01-08 21:43:40,595:INFO:Defining folds
2023-01-08 21:43:40,595:INFO:Declaring metric variables
2023-01-08 21:43:40,599:INFO:Importing untrained model
2023-01-08 21:43:40,599:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 21:43:40,599:INFO:Starting cross validation
2023-01-08 21:43:40,599:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:40,672:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,672:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:40,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,680:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:40,680:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,684:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:40,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,708:INFO:Calculating mean and std
2023-01-08 21:43:40,712:INFO:Creating metrics dataframe
2023-01-08 21:43:40,716:INFO:Uploading results into container
2023-01-08 21:43:40,716:INFO:Uploading model into container now
2023-01-08 21:43:40,716:INFO:_master_model_container: 5
2023-01-08 21:43:40,716:INFO:_display_container: 2
2023-01-08 21:43:40,716:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1485, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 21:43:40,720:INFO:create_model() successfully completed......................................
2023-01-08 21:43:40,840:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:40,840:INFO:Creating metrics dataframe
2023-01-08 21:43:40,848:INFO:Initializing Ridge Classifier
2023-01-08 21:43:40,848:INFO:Total runtime is 0.026063064734141037 minutes
2023-01-08 21:43:40,848:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:40,848:INFO:Initializing create_model()
2023-01-08 21:43:40,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:40,848:INFO:Checking exceptions
2023-01-08 21:43:40,848:INFO:Importing libraries
2023-01-08 21:43:40,848:INFO:Copying training dataset
2023-01-08 21:43:40,852:INFO:Defining folds
2023-01-08 21:43:40,852:INFO:Declaring metric variables
2023-01-08 21:43:40,852:INFO:Importing untrained model
2023-01-08 21:43:40,852:INFO:Ridge Classifier Imported successfully
2023-01-08 21:43:40,852:INFO:Starting cross validation
2023-01-08 21:43:40,852:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:40,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,911:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,911:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,919:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,919:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,919:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,931:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,935:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,935:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,935:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,935:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,947:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,947:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:40,951:INFO:Calculating mean and std
2023-01-08 21:43:40,951:INFO:Creating metrics dataframe
2023-01-08 21:43:40,955:INFO:Uploading results into container
2023-01-08 21:43:40,955:INFO:Uploading model into container now
2023-01-08 21:43:40,955:INFO:_master_model_container: 6
2023-01-08 21:43:40,955:INFO:_display_container: 2
2023-01-08 21:43:40,955:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=1485, solver='auto', tol=0.001)
2023-01-08 21:43:40,955:INFO:create_model() successfully completed......................................
2023-01-08 21:43:41,075:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:41,075:INFO:Creating metrics dataframe
2023-01-08 21:43:41,079:INFO:Initializing Random Forest Classifier
2023-01-08 21:43:41,079:INFO:Total runtime is 0.02992473443349203 minutes
2023-01-08 21:43:41,079:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:41,079:INFO:Initializing create_model()
2023-01-08 21:43:41,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:41,079:INFO:Checking exceptions
2023-01-08 21:43:41,079:INFO:Importing libraries
2023-01-08 21:43:41,079:INFO:Copying training dataset
2023-01-08 21:43:41,083:INFO:Defining folds
2023-01-08 21:43:41,083:INFO:Declaring metric variables
2023-01-08 21:43:41,083:INFO:Importing untrained model
2023-01-08 21:43:41,083:INFO:Random Forest Classifier Imported successfully
2023-01-08 21:43:41,083:INFO:Starting cross validation
2023-01-08 21:43:41,083:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:41,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,451:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,451:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,455:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,455:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,459:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,471:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,471:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,479:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,491:INFO:Calculating mean and std
2023-01-08 21:43:41,491:INFO:Creating metrics dataframe
2023-01-08 21:43:41,499:INFO:Uploading results into container
2023-01-08 21:43:41,499:INFO:Uploading model into container now
2023-01-08 21:43:41,503:INFO:_master_model_container: 7
2023-01-08 21:43:41,503:INFO:_display_container: 2
2023-01-08 21:43:41,503:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1485, verbose=0, warm_start=False)
2023-01-08 21:43:41,503:INFO:create_model() successfully completed......................................
2023-01-08 21:43:41,631:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:41,631:INFO:Creating metrics dataframe
2023-01-08 21:43:41,634:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 21:43:41,634:INFO:Total runtime is 0.03917840719223023 minutes
2023-01-08 21:43:41,634:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:41,634:INFO:Initializing create_model()
2023-01-08 21:43:41,634:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:41,634:INFO:Checking exceptions
2023-01-08 21:43:41,639:INFO:Importing libraries
2023-01-08 21:43:41,639:INFO:Copying training dataset
2023-01-08 21:43:41,641:INFO:Defining folds
2023-01-08 21:43:41,641:INFO:Declaring metric variables
2023-01-08 21:43:41,641:INFO:Importing untrained model
2023-01-08 21:43:41,641:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 21:43:41,641:INFO:Starting cross validation
2023-01-08 21:43:41,645:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:41,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,729:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,729:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,729:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,733:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,733:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,733:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,737:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,737:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:41,753:INFO:Calculating mean and std
2023-01-08 21:43:41,753:INFO:Creating metrics dataframe
2023-01-08 21:43:41,757:INFO:Uploading results into container
2023-01-08 21:43:41,761:INFO:Uploading model into container now
2023-01-08 21:43:41,761:INFO:_master_model_container: 8
2023-01-08 21:43:41,761:INFO:_display_container: 2
2023-01-08 21:43:41,761:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 21:43:41,761:INFO:create_model() successfully completed......................................
2023-01-08 21:43:41,876:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:41,876:INFO:Creating metrics dataframe
2023-01-08 21:43:41,884:INFO:Initializing Ada Boost Classifier
2023-01-08 21:43:41,884:INFO:Total runtime is 0.04334478775660197 minutes
2023-01-08 21:43:41,884:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:41,884:INFO:Initializing create_model()
2023-01-08 21:43:41,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:41,884:INFO:Checking exceptions
2023-01-08 21:43:41,884:INFO:Importing libraries
2023-01-08 21:43:41,884:INFO:Copying training dataset
2023-01-08 21:43:41,888:INFO:Defining folds
2023-01-08 21:43:41,888:INFO:Declaring metric variables
2023-01-08 21:43:41,888:INFO:Importing untrained model
2023-01-08 21:43:41,888:INFO:Ada Boost Classifier Imported successfully
2023-01-08 21:43:41,888:INFO:Starting cross validation
2023-01-08 21:43:41,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:42,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,126:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,126:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,126:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,126:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,126:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,126:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,126:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,130:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,130:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,132:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,132:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,136:INFO:Calculating mean and std
2023-01-08 21:43:42,140:INFO:Creating metrics dataframe
2023-01-08 21:43:42,144:INFO:Uploading results into container
2023-01-08 21:43:42,144:INFO:Uploading model into container now
2023-01-08 21:43:42,144:INFO:_master_model_container: 9
2023-01-08 21:43:42,144:INFO:_display_container: 2
2023-01-08 21:43:42,144:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1485)
2023-01-08 21:43:42,144:INFO:create_model() successfully completed......................................
2023-01-08 21:43:42,254:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:42,254:INFO:Creating metrics dataframe
2023-01-08 21:43:42,262:INFO:Initializing Gradient Boosting Classifier
2023-01-08 21:43:42,262:INFO:Total runtime is 0.049642701943715416 minutes
2023-01-08 21:43:42,262:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:42,262:INFO:Initializing create_model()
2023-01-08 21:43:42,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:42,262:INFO:Checking exceptions
2023-01-08 21:43:42,262:INFO:Importing libraries
2023-01-08 21:43:42,262:INFO:Copying training dataset
2023-01-08 21:43:42,266:INFO:Defining folds
2023-01-08 21:43:42,266:INFO:Declaring metric variables
2023-01-08 21:43:42,266:INFO:Importing untrained model
2023-01-08 21:43:42,266:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 21:43:42,266:INFO:Starting cross validation
2023-01-08 21:43:42,266:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:42,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,678:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,678:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,714:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,714:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,722:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,722:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,722:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,722:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,731:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,733:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,737:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,737:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,759:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,759:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,759:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,763:INFO:Calculating mean and std
2023-01-08 21:43:42,763:INFO:Creating metrics dataframe
2023-01-08 21:43:42,771:INFO:Uploading results into container
2023-01-08 21:43:42,771:INFO:Uploading model into container now
2023-01-08 21:43:42,771:INFO:_master_model_container: 10
2023-01-08 21:43:42,771:INFO:_display_container: 2
2023-01-08 21:43:42,771:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1485, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 21:43:42,771:INFO:create_model() successfully completed......................................
2023-01-08 21:43:42,895:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:42,895:INFO:Creating metrics dataframe
2023-01-08 21:43:42,903:INFO:Initializing Linear Discriminant Analysis
2023-01-08 21:43:42,903:INFO:Total runtime is 0.060314921538035075 minutes
2023-01-08 21:43:42,903:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:42,903:INFO:Initializing create_model()
2023-01-08 21:43:42,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:42,903:INFO:Checking exceptions
2023-01-08 21:43:42,903:INFO:Importing libraries
2023-01-08 21:43:42,903:INFO:Copying training dataset
2023-01-08 21:43:42,907:INFO:Defining folds
2023-01-08 21:43:42,907:INFO:Declaring metric variables
2023-01-08 21:43:42,907:INFO:Importing untrained model
2023-01-08 21:43:42,907:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:43:42,907:INFO:Starting cross validation
2023-01-08 21:43:42,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:42,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,991:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,991:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,995:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,995:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,995:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,999:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,999:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:42,999:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,007:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,007:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,015:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,015:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,015:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,015:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,015:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,023:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,023:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,027:INFO:Calculating mean and std
2023-01-08 21:43:43,027:INFO:Creating metrics dataframe
2023-01-08 21:43:43,031:INFO:Uploading results into container
2023-01-08 21:43:43,031:INFO:Uploading model into container now
2023-01-08 21:43:43,035:INFO:_master_model_container: 11
2023-01-08 21:43:43,035:INFO:_display_container: 2
2023-01-08 21:43:43,035:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:43:43,035:INFO:create_model() successfully completed......................................
2023-01-08 21:43:43,167:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:43,167:INFO:Creating metrics dataframe
2023-01-08 21:43:43,171:INFO:Initializing Extra Trees Classifier
2023-01-08 21:43:43,171:INFO:Total runtime is 0.06478893359502157 minutes
2023-01-08 21:43:43,171:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:43,171:INFO:Initializing create_model()
2023-01-08 21:43:43,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:43,171:INFO:Checking exceptions
2023-01-08 21:43:43,171:INFO:Importing libraries
2023-01-08 21:43:43,171:INFO:Copying training dataset
2023-01-08 21:43:43,175:INFO:Defining folds
2023-01-08 21:43:43,175:INFO:Declaring metric variables
2023-01-08 21:43:43,175:INFO:Importing untrained model
2023-01-08 21:43:43,175:INFO:Extra Trees Classifier Imported successfully
2023-01-08 21:43:43,175:INFO:Starting cross validation
2023-01-08 21:43:43,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:43,515:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,519:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,523:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,527:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,527:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,539:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,539:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,539:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,547:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,547:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,547:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,559:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,563:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,563:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,563:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,563:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,567:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,567:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,571:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,571:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,587:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,595:INFO:Calculating mean and std
2023-01-08 21:43:43,595:INFO:Creating metrics dataframe
2023-01-08 21:43:43,603:INFO:Uploading results into container
2023-01-08 21:43:43,603:INFO:Uploading model into container now
2023-01-08 21:43:43,607:INFO:_master_model_container: 12
2023-01-08 21:43:43,607:INFO:_display_container: 2
2023-01-08 21:43:43,607:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1485, verbose=0, warm_start=False)
2023-01-08 21:43:43,607:INFO:create_model() successfully completed......................................
2023-01-08 21:43:43,752:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:43,752:INFO:Creating metrics dataframe
2023-01-08 21:43:43,764:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 21:43:43,764:INFO:Total runtime is 0.0746654748916626 minutes
2023-01-08 21:43:43,764:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:43,764:INFO:Initializing create_model()
2023-01-08 21:43:43,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:43,764:INFO:Checking exceptions
2023-01-08 21:43:43,764:INFO:Importing libraries
2023-01-08 21:43:43,764:INFO:Copying training dataset
2023-01-08 21:43:43,768:INFO:Defining folds
2023-01-08 21:43:43,768:INFO:Declaring metric variables
2023-01-08 21:43:43,768:INFO:Importing untrained model
2023-01-08 21:43:43,772:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 21:43:43,772:INFO:Starting cross validation
2023-01-08 21:43:43,772:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:43,882:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,886:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,886:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,890:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,890:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,894:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,922:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,922:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:43,938:INFO:Calculating mean and std
2023-01-08 21:43:43,938:INFO:Creating metrics dataframe
2023-01-08 21:43:43,942:INFO:Uploading results into container
2023-01-08 21:43:43,942:INFO:Uploading model into container now
2023-01-08 21:43:43,942:INFO:_master_model_container: 13
2023-01-08 21:43:43,946:INFO:_display_container: 2
2023-01-08 21:43:43,946:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1485, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 21:43:43,946:INFO:create_model() successfully completed......................................
2023-01-08 21:43:44,067:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:44,067:INFO:Creating metrics dataframe
2023-01-08 21:43:44,071:INFO:Initializing Dummy Classifier
2023-01-08 21:43:44,071:INFO:Total runtime is 0.07979344129562378 minutes
2023-01-08 21:43:44,071:INFO:SubProcess create_model() called ==================================
2023-01-08 21:43:44,071:INFO:Initializing create_model()
2023-01-08 21:43:44,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B1CF1F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:44,071:INFO:Checking exceptions
2023-01-08 21:43:44,071:INFO:Importing libraries
2023-01-08 21:43:44,071:INFO:Copying training dataset
2023-01-08 21:43:44,075:INFO:Defining folds
2023-01-08 21:43:44,075:INFO:Declaring metric variables
2023-01-08 21:43:44,075:INFO:Importing untrained model
2023-01-08 21:43:44,075:INFO:Dummy Classifier Imported successfully
2023-01-08 21:43:44,079:INFO:Starting cross validation
2023-01-08 21:43:44,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:43:44,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,158:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,158:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:44,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:44,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,170:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,170:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:44,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:44,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:44,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,178:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:44,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,186:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:44,186:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,186:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,190:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,190:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:44,190:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:44,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:43:44,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:43:44,202:INFO:Calculating mean and std
2023-01-08 21:43:44,202:INFO:Creating metrics dataframe
2023-01-08 21:43:44,210:INFO:Uploading results into container
2023-01-08 21:43:44,210:INFO:Uploading model into container now
2023-01-08 21:43:44,210:INFO:_master_model_container: 14
2023-01-08 21:43:44,210:INFO:_display_container: 2
2023-01-08 21:43:44,210:INFO:DummyClassifier(constant=None, random_state=1485, strategy='prior')
2023-01-08 21:43:44,210:INFO:create_model() successfully completed......................................
2023-01-08 21:43:44,355:INFO:SubProcess create_model() end ==================================
2023-01-08 21:43:44,355:INFO:Creating metrics dataframe
2023-01-08 21:43:44,367:INFO:Initializing create_model()
2023-01-08 21:43:44,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DEB0D0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:43:44,367:INFO:Checking exceptions
2023-01-08 21:43:44,371:INFO:Importing libraries
2023-01-08 21:43:44,371:INFO:Copying training dataset
2023-01-08 21:43:44,375:INFO:Defining folds
2023-01-08 21:43:44,375:INFO:Declaring metric variables
2023-01-08 21:43:44,375:INFO:Importing untrained model
2023-01-08 21:43:44,375:INFO:Declaring custom model
2023-01-08 21:43:44,379:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:43:44,379:INFO:Cross validation set to False
2023-01-08 21:43:44,379:INFO:Fitting Model
2023-01-08 21:43:44,427:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:43:44,431:INFO:create_model() successfully completed......................................
2023-01-08 21:43:44,635:INFO:_master_model_container: 14
2023-01-08 21:43:44,635:INFO:_display_container: 2
2023-01-08 21:43:44,635:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:43:44,635:INFO:compare_models() successfully completed......................................
2023-01-08 21:44:30,422:INFO:PyCaret ClassificationExperiment
2023-01-08 21:44:30,422:INFO:Logging name: clf-default-name
2023-01-08 21:44:30,422:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 21:44:30,422:INFO:version 3.0.0.rc6
2023-01-08 21:44:30,422:INFO:Initializing setup()
2023-01-08 21:44:30,422:INFO:self.USI: daf6
2023-01-08 21:44:30,422:INFO:self._variable_keys: {'X_train', 'fold_shuffle_param', 'y', 'fix_imbalance', 'logging_param', 'gpu_n_jobs_param', 'target_param', 'seed', 'exp_id', 'log_plots_param', 'y_train', 'idx', 'X_test', 'fold_generator', 'exp_name_log', 'is_multiclass', 'html_param', 'n_jobs_param', 'y_test', 'gpu_param', 'memory', 'USI', 'data', '_available_plots', 'X', '_ml_usecase', 'pipeline', 'fold_groups_param'}
2023-01-08 21:44:30,426:INFO:Checking environment
2023-01-08 21:44:30,426:INFO:python_version: 3.9.15
2023-01-08 21:44:30,426:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 21:44:30,426:INFO:machine: AMD64
2023-01-08 21:44:30,426:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 21:44:30,426:INFO:Memory: svmem(total=17010110464, available=2552856576, percent=85.0, used=14457253888, free=2552856576)
2023-01-08 21:44:30,426:INFO:Physical Core: 6
2023-01-08 21:44:30,426:INFO:Logical Core: 12
2023-01-08 21:44:30,426:INFO:Checking libraries
2023-01-08 21:44:30,426:INFO:System:
2023-01-08 21:44:30,426:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 21:44:30,426:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 21:44:30,426:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 21:44:30,426:INFO:PyCaret required dependencies:
2023-01-08 21:44:30,426:INFO:                 pip: 22.3.1
2023-01-08 21:44:30,426:INFO:          setuptools: 65.6.3
2023-01-08 21:44:30,426:INFO:             pycaret: 3.0.0rc6
2023-01-08 21:44:30,426:INFO:             IPython: 8.8.0
2023-01-08 21:44:30,426:INFO:          ipywidgets: 8.0.4
2023-01-08 21:44:30,426:INFO:                tqdm: 4.64.1
2023-01-08 21:44:30,426:INFO:               numpy: 1.22.4
2023-01-08 21:44:30,426:INFO:              pandas: 1.5.2
2023-01-08 21:44:30,426:INFO:              jinja2: 3.1.2
2023-01-08 21:44:30,430:INFO:               scipy: 1.9.3
2023-01-08 21:44:30,430:INFO:              joblib: 1.2.0
2023-01-08 21:44:30,430:INFO:             sklearn: 1.1.3
2023-01-08 21:44:30,430:INFO:                pyod: 1.0.7
2023-01-08 21:44:30,430:INFO:            imblearn: 0.10.1
2023-01-08 21:44:30,430:INFO:   category_encoders: 2.5.1.post0
2023-01-08 21:44:30,430:INFO:            lightgbm: 3.3.4
2023-01-08 21:44:30,430:INFO:               numba: 0.56.4
2023-01-08 21:44:30,430:INFO:            requests: 2.28.1
2023-01-08 21:44:30,430:INFO:          matplotlib: 3.6.2
2023-01-08 21:44:30,430:INFO:          scikitplot: 0.3.7
2023-01-08 21:44:30,430:INFO:         yellowbrick: 1.5
2023-01-08 21:44:30,430:INFO:              plotly: 5.11.0
2023-01-08 21:44:30,430:INFO:             kaleido: 0.2.1
2023-01-08 21:44:30,430:INFO:         statsmodels: 0.13.5
2023-01-08 21:44:30,430:INFO:              sktime: 0.14.1
2023-01-08 21:44:30,430:INFO:               tbats: 1.1.2
2023-01-08 21:44:30,430:INFO:            pmdarima: 2.0.2
2023-01-08 21:44:30,430:INFO:              psutil: 5.9.0
2023-01-08 21:44:30,430:INFO:PyCaret optional dependencies:
2023-01-08 21:44:30,430:INFO:                shap: Not installed
2023-01-08 21:44:30,430:INFO:           interpret: Not installed
2023-01-08 21:44:30,430:INFO:                umap: Not installed
2023-01-08 21:44:30,434:INFO:    pandas_profiling: 3.6.2
2023-01-08 21:44:30,434:INFO:  explainerdashboard: Not installed
2023-01-08 21:44:30,434:INFO:             autoviz: Not installed
2023-01-08 21:44:30,434:INFO:           fairlearn: Not installed
2023-01-08 21:44:30,434:INFO:             xgboost: Not installed
2023-01-08 21:44:30,434:INFO:            catboost: Not installed
2023-01-08 21:44:30,434:INFO:              kmodes: Not installed
2023-01-08 21:44:30,434:INFO:             mlxtend: Not installed
2023-01-08 21:44:30,434:INFO:       statsforecast: Not installed
2023-01-08 21:44:30,434:INFO:        tune_sklearn: Not installed
2023-01-08 21:44:30,434:INFO:                 ray: Not installed
2023-01-08 21:44:30,434:INFO:            hyperopt: Not installed
2023-01-08 21:44:30,434:INFO:              optuna: Not installed
2023-01-08 21:44:30,434:INFO:               skopt: Not installed
2023-01-08 21:44:30,434:INFO:              mlflow: Not installed
2023-01-08 21:44:30,434:INFO:              gradio: Not installed
2023-01-08 21:44:30,434:INFO:             fastapi: Not installed
2023-01-08 21:44:30,434:INFO:             uvicorn: Not installed
2023-01-08 21:44:30,434:INFO:              m2cgen: Not installed
2023-01-08 21:44:30,434:INFO:           evidently: Not installed
2023-01-08 21:44:30,434:INFO:                nltk: Not installed
2023-01-08 21:44:30,434:INFO:            pyLDAvis: Not installed
2023-01-08 21:44:30,434:INFO:              gensim: Not installed
2023-01-08 21:44:30,434:INFO:               spacy: Not installed
2023-01-08 21:44:30,434:INFO:           wordcloud: Not installed
2023-01-08 21:44:30,438:INFO:            textblob: Not installed
2023-01-08 21:44:30,438:INFO:               fugue: Not installed
2023-01-08 21:44:30,438:INFO:           streamlit: 1.16.0
2023-01-08 21:44:30,438:INFO:             prophet: Not installed
2023-01-08 21:44:30,438:INFO:None
2023-01-08 21:44:30,438:INFO:Set up data.
2023-01-08 21:44:30,450:INFO:Set up train/test split.
2023-01-08 21:44:30,462:INFO:Set up index.
2023-01-08 21:44:30,462:INFO:Set up folding strategy.
2023-01-08 21:44:30,462:INFO:Assigning column types.
2023-01-08 21:44:30,474:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 21:44:30,562:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:44:30,562:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:44:30,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,638:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:44:30,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:44:30,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,666:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 21:44:30,716:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:44:30,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,793:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:44:30,830:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,830:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 21:44:30,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:30,973:INFO:Preparing preprocessing pipeline...
2023-01-08 21:44:30,973:INFO:Set up label encoding.
2023-01-08 21:44:30,973:INFO:Set up simple imputation.
2023-01-08 21:44:31,020:INFO:Finished creating preprocessing pipeline.
2023-01-08 21:44:31,027:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 21:44:31,027:INFO:Creating final display dataframe.
2023-01-08 21:44:31,278:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               2495
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               daf6
2023-01-08 21:44:31,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:31,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:31,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:31,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:31,481:INFO:setup() successfully completed in 1.06s...............
2023-01-08 21:44:31,485:INFO:Initializing compare_models()
2023-01-08 21:44:31,485:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 21:44:31,485:INFO:Checking exceptions
2023-01-08 21:44:31,489:INFO:Preparing display monitor
2023-01-08 21:44:31,493:INFO:Initializing Logistic Regression
2023-01-08 21:44:31,493:INFO:Total runtime is 0.0 minutes
2023-01-08 21:44:31,493:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:31,493:INFO:Initializing create_model()
2023-01-08 21:44:31,493:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:31,493:INFO:Checking exceptions
2023-01-08 21:44:31,493:INFO:Importing libraries
2023-01-08 21:44:31,493:INFO:Copying training dataset
2023-01-08 21:44:31,497:INFO:Defining folds
2023-01-08 21:44:31,497:INFO:Declaring metric variables
2023-01-08 21:44:31,497:INFO:Importing untrained model
2023-01-08 21:44:31,497:INFO:Logistic Regression Imported successfully
2023-01-08 21:44:31,497:INFO:Starting cross validation
2023-01-08 21:44:31,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:31,821:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,821:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,825:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,825:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,825:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,825:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,833:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,833:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,833:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,841:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,841:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,841:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,841:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,841:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,845:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,853:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:31,853:INFO:Calculating mean and std
2023-01-08 21:44:31,857:INFO:Creating metrics dataframe
2023-01-08 21:44:31,861:INFO:Uploading results into container
2023-01-08 21:44:31,861:INFO:Uploading model into container now
2023-01-08 21:44:31,861:INFO:_master_model_container: 1
2023-01-08 21:44:31,861:INFO:_display_container: 2
2023-01-08 21:44:31,861:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2495, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 21:44:31,861:INFO:create_model() successfully completed......................................
2023-01-08 21:44:31,981:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:31,981:INFO:Creating metrics dataframe
2023-01-08 21:44:31,985:INFO:Initializing K Neighbors Classifier
2023-01-08 21:44:31,985:INFO:Total runtime is 0.008190615971883138 minutes
2023-01-08 21:44:31,985:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:31,985:INFO:Initializing create_model()
2023-01-08 21:44:31,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:31,985:INFO:Checking exceptions
2023-01-08 21:44:31,985:INFO:Importing libraries
2023-01-08 21:44:31,985:INFO:Copying training dataset
2023-01-08 21:44:31,985:INFO:Defining folds
2023-01-08 21:44:31,985:INFO:Declaring metric variables
2023-01-08 21:44:31,985:INFO:Importing untrained model
2023-01-08 21:44:31,989:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:44:31,989:INFO:Starting cross validation
2023-01-08 21:44:31,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:32,129:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,133:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,141:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,145:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,145:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,145:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,149:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,149:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,161:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,161:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,165:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,165:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,165:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,165:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,169:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,169:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,173:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,173:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,185:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,185:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,189:INFO:Calculating mean and std
2023-01-08 21:44:32,189:INFO:Creating metrics dataframe
2023-01-08 21:44:32,193:INFO:Uploading results into container
2023-01-08 21:44:32,193:INFO:Uploading model into container now
2023-01-08 21:44:32,193:INFO:_master_model_container: 2
2023-01-08 21:44:32,193:INFO:_display_container: 2
2023-01-08 21:44:32,193:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:44:32,193:INFO:create_model() successfully completed......................................
2023-01-08 21:44:32,316:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:32,316:INFO:Creating metrics dataframe
2023-01-08 21:44:32,324:INFO:Initializing Naive Bayes
2023-01-08 21:44:32,324:INFO:Total runtime is 0.013850279649098714 minutes
2023-01-08 21:44:32,324:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:32,324:INFO:Initializing create_model()
2023-01-08 21:44:32,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:32,324:INFO:Checking exceptions
2023-01-08 21:44:32,324:INFO:Importing libraries
2023-01-08 21:44:32,324:INFO:Copying training dataset
2023-01-08 21:44:32,328:INFO:Defining folds
2023-01-08 21:44:32,328:INFO:Declaring metric variables
2023-01-08 21:44:32,328:INFO:Importing untrained model
2023-01-08 21:44:32,328:INFO:Naive Bayes Imported successfully
2023-01-08 21:44:32,328:INFO:Starting cross validation
2023-01-08 21:44:32,328:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:32,400:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,416:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,416:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,428:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,448:INFO:Calculating mean and std
2023-01-08 21:44:32,448:INFO:Creating metrics dataframe
2023-01-08 21:44:32,452:INFO:Uploading results into container
2023-01-08 21:44:32,456:INFO:Uploading model into container now
2023-01-08 21:44:32,456:INFO:_master_model_container: 3
2023-01-08 21:44:32,456:INFO:_display_container: 2
2023-01-08 21:44:32,456:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 21:44:32,456:INFO:create_model() successfully completed......................................
2023-01-08 21:44:32,596:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:32,596:INFO:Creating metrics dataframe
2023-01-08 21:44:32,608:INFO:Initializing Decision Tree Classifier
2023-01-08 21:44:32,608:INFO:Total runtime is 0.018578739960988362 minutes
2023-01-08 21:44:32,608:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:32,608:INFO:Initializing create_model()
2023-01-08 21:44:32,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:32,608:INFO:Checking exceptions
2023-01-08 21:44:32,608:INFO:Importing libraries
2023-01-08 21:44:32,608:INFO:Copying training dataset
2023-01-08 21:44:32,612:INFO:Defining folds
2023-01-08 21:44:32,612:INFO:Declaring metric variables
2023-01-08 21:44:32,612:INFO:Importing untrained model
2023-01-08 21:44:32,612:INFO:Decision Tree Classifier Imported successfully
2023-01-08 21:44:32,612:INFO:Starting cross validation
2023-01-08 21:44:32,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:32,684:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,684:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,716:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,716:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,716:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,720:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,720:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,728:INFO:Calculating mean and std
2023-01-08 21:44:32,728:INFO:Creating metrics dataframe
2023-01-08 21:44:32,732:INFO:Uploading results into container
2023-01-08 21:44:32,732:INFO:Uploading model into container now
2023-01-08 21:44:32,736:INFO:_master_model_container: 4
2023-01-08 21:44:32,736:INFO:_display_container: 2
2023-01-08 21:44:32,736:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2495, splitter='best')
2023-01-08 21:44:32,736:INFO:create_model() successfully completed......................................
2023-01-08 21:44:32,857:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:32,857:INFO:Creating metrics dataframe
2023-01-08 21:44:32,861:INFO:Initializing SVM - Linear Kernel
2023-01-08 21:44:32,861:INFO:Total runtime is 0.022793932755788168 minutes
2023-01-08 21:44:32,861:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:32,861:INFO:Initializing create_model()
2023-01-08 21:44:32,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:32,861:INFO:Checking exceptions
2023-01-08 21:44:32,861:INFO:Importing libraries
2023-01-08 21:44:32,861:INFO:Copying training dataset
2023-01-08 21:44:32,865:INFO:Defining folds
2023-01-08 21:44:32,865:INFO:Declaring metric variables
2023-01-08 21:44:32,865:INFO:Importing untrained model
2023-01-08 21:44:32,869:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 21:44:32,869:INFO:Starting cross validation
2023-01-08 21:44:32,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:32,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,941:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,941:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:32,941:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,949:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,949:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,949:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,953:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,953:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,957:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,957:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:32,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:32,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:32,965:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,965:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,965:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,969:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,969:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,969:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,969:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,973:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,973:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,973:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,973:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:32,981:INFO:Calculating mean and std
2023-01-08 21:44:32,981:INFO:Creating metrics dataframe
2023-01-08 21:44:32,985:INFO:Uploading results into container
2023-01-08 21:44:32,985:INFO:Uploading model into container now
2023-01-08 21:44:32,989:INFO:_master_model_container: 5
2023-01-08 21:44:32,989:INFO:_display_container: 2
2023-01-08 21:44:32,989:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2495, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 21:44:32,989:INFO:create_model() successfully completed......................................
2023-01-08 21:44:33,129:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:33,129:INFO:Creating metrics dataframe
2023-01-08 21:44:33,137:INFO:Initializing Ridge Classifier
2023-01-08 21:44:33,137:INFO:Total runtime is 0.02738776206970215 minutes
2023-01-08 21:44:33,137:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:33,137:INFO:Initializing create_model()
2023-01-08 21:44:33,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:33,137:INFO:Checking exceptions
2023-01-08 21:44:33,137:INFO:Importing libraries
2023-01-08 21:44:33,137:INFO:Copying training dataset
2023-01-08 21:44:33,141:INFO:Defining folds
2023-01-08 21:44:33,141:INFO:Declaring metric variables
2023-01-08 21:44:33,141:INFO:Importing untrained model
2023-01-08 21:44:33,141:INFO:Ridge Classifier Imported successfully
2023-01-08 21:44:33,141:INFO:Starting cross validation
2023-01-08 21:44:33,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:33,201:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,209:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:33,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,241:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,241:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,245:INFO:Calculating mean and std
2023-01-08 21:44:33,245:INFO:Creating metrics dataframe
2023-01-08 21:44:33,249:INFO:Uploading results into container
2023-01-08 21:44:33,253:INFO:Uploading model into container now
2023-01-08 21:44:33,253:INFO:_master_model_container: 6
2023-01-08 21:44:33,253:INFO:_display_container: 2
2023-01-08 21:44:33,253:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=2495, solver='auto', tol=0.001)
2023-01-08 21:44:33,253:INFO:create_model() successfully completed......................................
2023-01-08 21:44:33,361:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:33,361:INFO:Creating metrics dataframe
2023-01-08 21:44:33,365:INFO:Initializing Random Forest Classifier
2023-01-08 21:44:33,365:INFO:Total runtime is 0.03118824561436971 minutes
2023-01-08 21:44:33,365:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:33,369:INFO:Initializing create_model()
2023-01-08 21:44:33,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:33,369:INFO:Checking exceptions
2023-01-08 21:44:33,369:INFO:Importing libraries
2023-01-08 21:44:33,369:INFO:Copying training dataset
2023-01-08 21:44:33,373:INFO:Defining folds
2023-01-08 21:44:33,373:INFO:Declaring metric variables
2023-01-08 21:44:33,373:INFO:Importing untrained model
2023-01-08 21:44:33,373:INFO:Random Forest Classifier Imported successfully
2023-01-08 21:44:33,373:INFO:Starting cross validation
2023-01-08 21:44:33,373:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:33,753:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,753:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,753:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,757:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,757:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,757:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,773:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,773:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,773:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,789:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,789:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,789:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,789:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,793:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,793:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,801:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,801:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,809:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:33,813:INFO:Calculating mean and std
2023-01-08 21:44:33,813:INFO:Creating metrics dataframe
2023-01-08 21:44:33,817:INFO:Uploading results into container
2023-01-08 21:44:33,821:INFO:Uploading model into container now
2023-01-08 21:44:33,821:INFO:_master_model_container: 7
2023-01-08 21:44:33,821:INFO:_display_container: 2
2023-01-08 21:44:33,821:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2495, verbose=0, warm_start=False)
2023-01-08 21:44:33,821:INFO:create_model() successfully completed......................................
2023-01-08 21:44:33,949:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:33,949:INFO:Creating metrics dataframe
2023-01-08 21:44:33,957:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 21:44:33,957:INFO:Total runtime is 0.041058337688446044 minutes
2023-01-08 21:44:33,957:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:33,957:INFO:Initializing create_model()
2023-01-08 21:44:33,957:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:33,957:INFO:Checking exceptions
2023-01-08 21:44:33,957:INFO:Importing libraries
2023-01-08 21:44:33,957:INFO:Copying training dataset
2023-01-08 21:44:33,961:INFO:Defining folds
2023-01-08 21:44:33,961:INFO:Declaring metric variables
2023-01-08 21:44:33,961:INFO:Importing untrained model
2023-01-08 21:44:33,961:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 21:44:33,965:INFO:Starting cross validation
2023-01-08 21:44:33,965:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:34,041:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,041:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,045:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,045:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,049:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,061:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,061:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,081:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,081:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,081:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,089:INFO:Calculating mean and std
2023-01-08 21:44:34,093:INFO:Creating metrics dataframe
2023-01-08 21:44:34,097:INFO:Uploading results into container
2023-01-08 21:44:34,097:INFO:Uploading model into container now
2023-01-08 21:44:34,097:INFO:_master_model_container: 8
2023-01-08 21:44:34,097:INFO:_display_container: 2
2023-01-08 21:44:34,097:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 21:44:34,097:INFO:create_model() successfully completed......................................
2023-01-08 21:44:34,225:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:34,225:INFO:Creating metrics dataframe
2023-01-08 21:44:34,229:INFO:Initializing Ada Boost Classifier
2023-01-08 21:44:34,229:INFO:Total runtime is 0.045587464173634844 minutes
2023-01-08 21:44:34,229:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:34,233:INFO:Initializing create_model()
2023-01-08 21:44:34,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:34,233:INFO:Checking exceptions
2023-01-08 21:44:34,233:INFO:Importing libraries
2023-01-08 21:44:34,233:INFO:Copying training dataset
2023-01-08 21:44:34,233:INFO:Defining folds
2023-01-08 21:44:34,233:INFO:Declaring metric variables
2023-01-08 21:44:34,233:INFO:Importing untrained model
2023-01-08 21:44:34,237:INFO:Ada Boost Classifier Imported successfully
2023-01-08 21:44:34,237:INFO:Starting cross validation
2023-01-08 21:44:34,237:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:34,416:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,428:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,460:INFO:Calculating mean and std
2023-01-08 21:44:34,460:INFO:Creating metrics dataframe
2023-01-08 21:44:34,464:INFO:Uploading results into container
2023-01-08 21:44:34,468:INFO:Uploading model into container now
2023-01-08 21:44:34,468:INFO:_master_model_container: 9
2023-01-08 21:44:34,468:INFO:_display_container: 2
2023-01-08 21:44:34,468:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2495)
2023-01-08 21:44:34,468:INFO:create_model() successfully completed......................................
2023-01-08 21:44:34,580:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:34,580:INFO:Creating metrics dataframe
2023-01-08 21:44:34,584:INFO:Initializing Gradient Boosting Classifier
2023-01-08 21:44:34,584:INFO:Total runtime is 0.05151401758193969 minutes
2023-01-08 21:44:34,584:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:34,584:INFO:Initializing create_model()
2023-01-08 21:44:34,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:34,584:INFO:Checking exceptions
2023-01-08 21:44:34,584:INFO:Importing libraries
2023-01-08 21:44:34,584:INFO:Copying training dataset
2023-01-08 21:44:34,588:INFO:Defining folds
2023-01-08 21:44:34,588:INFO:Declaring metric variables
2023-01-08 21:44:34,588:INFO:Importing untrained model
2023-01-08 21:44:34,588:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 21:44:34,588:INFO:Starting cross validation
2023-01-08 21:44:34,592:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:34,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,978:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,982:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,995:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,997:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,997:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,998:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,998:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:34,998:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,002:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,006:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,006:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,006:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,006:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,006:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,014:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,018:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,028:INFO:Calculating mean and std
2023-01-08 21:44:35,031:INFO:Creating metrics dataframe
2023-01-08 21:44:35,035:INFO:Uploading results into container
2023-01-08 21:44:35,035:INFO:Uploading model into container now
2023-01-08 21:44:35,039:INFO:_master_model_container: 10
2023-01-08 21:44:35,039:INFO:_display_container: 2
2023-01-08 21:44:35,039:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2495, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 21:44:35,039:INFO:create_model() successfully completed......................................
2023-01-08 21:44:35,158:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:35,158:INFO:Creating metrics dataframe
2023-01-08 21:44:35,162:INFO:Initializing Linear Discriminant Analysis
2023-01-08 21:44:35,162:INFO:Total runtime is 0.06114900509516398 minutes
2023-01-08 21:44:35,162:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:35,162:INFO:Initializing create_model()
2023-01-08 21:44:35,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:35,162:INFO:Checking exceptions
2023-01-08 21:44:35,162:INFO:Importing libraries
2023-01-08 21:44:35,162:INFO:Copying training dataset
2023-01-08 21:44:35,164:INFO:Defining folds
2023-01-08 21:44:35,164:INFO:Declaring metric variables
2023-01-08 21:44:35,164:INFO:Importing untrained model
2023-01-08 21:44:35,164:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:44:35,164:INFO:Starting cross validation
2023-01-08 21:44:35,168:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:35,238:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,238:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,250:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,254:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,254:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,254:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,270:INFO:Calculating mean and std
2023-01-08 21:44:35,270:INFO:Creating metrics dataframe
2023-01-08 21:44:35,274:INFO:Uploading results into container
2023-01-08 21:44:35,274:INFO:Uploading model into container now
2023-01-08 21:44:35,274:INFO:_master_model_container: 11
2023-01-08 21:44:35,274:INFO:_display_container: 2
2023-01-08 21:44:35,274:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:44:35,274:INFO:create_model() successfully completed......................................
2023-01-08 21:44:35,391:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:35,391:INFO:Creating metrics dataframe
2023-01-08 21:44:35,399:INFO:Initializing Extra Trees Classifier
2023-01-08 21:44:35,399:INFO:Total runtime is 0.06509983142217 minutes
2023-01-08 21:44:35,399:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:35,399:INFO:Initializing create_model()
2023-01-08 21:44:35,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:35,399:INFO:Checking exceptions
2023-01-08 21:44:35,399:INFO:Importing libraries
2023-01-08 21:44:35,399:INFO:Copying training dataset
2023-01-08 21:44:35,405:INFO:Defining folds
2023-01-08 21:44:35,405:INFO:Declaring metric variables
2023-01-08 21:44:35,405:INFO:Importing untrained model
2023-01-08 21:44:35,405:INFO:Extra Trees Classifier Imported successfully
2023-01-08 21:44:35,405:INFO:Starting cross validation
2023-01-08 21:44:35,405:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:35,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,808:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,808:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,812:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,823:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,823:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,827:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,831:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,835:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,835:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,835:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,835:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,883:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,887:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,887:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:35,891:INFO:Calculating mean and std
2023-01-08 21:44:35,891:INFO:Creating metrics dataframe
2023-01-08 21:44:35,899:INFO:Uploading results into container
2023-01-08 21:44:35,899:INFO:Uploading model into container now
2023-01-08 21:44:35,899:INFO:_master_model_container: 12
2023-01-08 21:44:35,899:INFO:_display_container: 2
2023-01-08 21:44:35,899:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2495, verbose=0, warm_start=False)
2023-01-08 21:44:35,899:INFO:create_model() successfully completed......................................
2023-01-08 21:44:36,025:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:36,025:INFO:Creating metrics dataframe
2023-01-08 21:44:36,034:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 21:44:36,034:INFO:Total runtime is 0.07567435105641683 minutes
2023-01-08 21:44:36,034:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:36,034:INFO:Initializing create_model()
2023-01-08 21:44:36,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:36,034:INFO:Checking exceptions
2023-01-08 21:44:36,034:INFO:Importing libraries
2023-01-08 21:44:36,034:INFO:Copying training dataset
2023-01-08 21:44:36,037:INFO:Defining folds
2023-01-08 21:44:36,037:INFO:Declaring metric variables
2023-01-08 21:44:36,037:INFO:Importing untrained model
2023-01-08 21:44:36,037:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 21:44:36,041:INFO:Starting cross validation
2023-01-08 21:44:36,041:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:36,131:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,151:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,159:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,159:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,163:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,167:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,167:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,167:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,175:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,175:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,175:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,183:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,183:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,187:INFO:Calculating mean and std
2023-01-08 21:44:36,187:INFO:Creating metrics dataframe
2023-01-08 21:44:36,191:INFO:Uploading results into container
2023-01-08 21:44:36,191:INFO:Uploading model into container now
2023-01-08 21:44:36,191:INFO:_master_model_container: 13
2023-01-08 21:44:36,191:INFO:_display_container: 2
2023-01-08 21:44:36,191:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2495, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 21:44:36,191:INFO:create_model() successfully completed......................................
2023-01-08 21:44:36,315:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:36,315:INFO:Creating metrics dataframe
2023-01-08 21:44:36,323:INFO:Initializing Dummy Classifier
2023-01-08 21:44:36,323:INFO:Total runtime is 0.08048876126607259 minutes
2023-01-08 21:44:36,323:INFO:SubProcess create_model() called ==================================
2023-01-08 21:44:36,323:INFO:Initializing create_model()
2023-01-08 21:44:36,323:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652DEB2E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:36,323:INFO:Checking exceptions
2023-01-08 21:44:36,323:INFO:Importing libraries
2023-01-08 21:44:36,323:INFO:Copying training dataset
2023-01-08 21:44:36,323:INFO:Defining folds
2023-01-08 21:44:36,323:INFO:Declaring metric variables
2023-01-08 21:44:36,327:INFO:Importing untrained model
2023-01-08 21:44:36,327:INFO:Dummy Classifier Imported successfully
2023-01-08 21:44:36,327:INFO:Starting cross validation
2023-01-08 21:44:36,327:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:44:36,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:36,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:36,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:36,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:36,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:36,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,431:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:36,431:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,435:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,435:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:36,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:36,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:36,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:44:36,451:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:44:36,455:INFO:Calculating mean and std
2023-01-08 21:44:36,455:INFO:Creating metrics dataframe
2023-01-08 21:44:36,459:INFO:Uploading results into container
2023-01-08 21:44:36,459:INFO:Uploading model into container now
2023-01-08 21:44:36,459:INFO:_master_model_container: 14
2023-01-08 21:44:36,459:INFO:_display_container: 2
2023-01-08 21:44:36,459:INFO:DummyClassifier(constant=None, random_state=2495, strategy='prior')
2023-01-08 21:44:36,459:INFO:create_model() successfully completed......................................
2023-01-08 21:44:36,579:INFO:SubProcess create_model() end ==================================
2023-01-08 21:44:36,579:INFO:Creating metrics dataframe
2023-01-08 21:44:36,591:INFO:Initializing create_model()
2023-01-08 21:44:36,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652871580>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:44:36,591:INFO:Checking exceptions
2023-01-08 21:44:36,591:INFO:Importing libraries
2023-01-08 21:44:36,591:INFO:Copying training dataset
2023-01-08 21:44:36,595:INFO:Defining folds
2023-01-08 21:44:36,595:INFO:Declaring metric variables
2023-01-08 21:44:36,595:INFO:Importing untrained model
2023-01-08 21:44:36,595:INFO:Declaring custom model
2023-01-08 21:44:36,595:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:44:36,595:INFO:Cross validation set to False
2023-01-08 21:44:36,595:INFO:Fitting Model
2023-01-08 21:44:36,639:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:44:36,639:INFO:create_model() successfully completed......................................
2023-01-08 21:44:36,783:INFO:_master_model_container: 14
2023-01-08 21:44:36,783:INFO:_display_container: 2
2023-01-08 21:44:36,783:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:44:36,783:INFO:compare_models() successfully completed......................................
2023-01-08 21:44:59,230:INFO:PyCaret ClassificationExperiment
2023-01-08 21:44:59,230:INFO:Logging name: clf-default-name
2023-01-08 21:44:59,230:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 21:44:59,230:INFO:version 3.0.0.rc6
2023-01-08 21:44:59,230:INFO:Initializing setup()
2023-01-08 21:44:59,230:INFO:self.USI: 2da6
2023-01-08 21:44:59,230:INFO:self._variable_keys: {'X_train', 'fold_shuffle_param', 'y', 'fix_imbalance', 'logging_param', 'gpu_n_jobs_param', 'target_param', 'seed', 'exp_id', 'log_plots_param', 'y_train', 'idx', 'X_test', 'fold_generator', 'exp_name_log', 'is_multiclass', 'html_param', 'n_jobs_param', 'y_test', 'gpu_param', 'memory', 'USI', 'data', '_available_plots', 'X', '_ml_usecase', 'pipeline', 'fold_groups_param'}
2023-01-08 21:44:59,230:INFO:Checking environment
2023-01-08 21:44:59,230:INFO:python_version: 3.9.15
2023-01-08 21:44:59,230:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 21:44:59,230:INFO:machine: AMD64
2023-01-08 21:44:59,230:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 21:44:59,230:INFO:Memory: svmem(total=17010110464, available=2514882560, percent=85.2, used=14495227904, free=2514882560)
2023-01-08 21:44:59,230:INFO:Physical Core: 6
2023-01-08 21:44:59,230:INFO:Logical Core: 12
2023-01-08 21:44:59,230:INFO:Checking libraries
2023-01-08 21:44:59,230:INFO:System:
2023-01-08 21:44:59,230:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 21:44:59,230:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 21:44:59,230:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 21:44:59,230:INFO:PyCaret required dependencies:
2023-01-08 21:44:59,234:INFO:                 pip: 22.3.1
2023-01-08 21:44:59,234:INFO:          setuptools: 65.6.3
2023-01-08 21:44:59,234:INFO:             pycaret: 3.0.0rc6
2023-01-08 21:44:59,234:INFO:             IPython: 8.8.0
2023-01-08 21:44:59,234:INFO:          ipywidgets: 8.0.4
2023-01-08 21:44:59,234:INFO:                tqdm: 4.64.1
2023-01-08 21:44:59,234:INFO:               numpy: 1.22.4
2023-01-08 21:44:59,234:INFO:              pandas: 1.5.2
2023-01-08 21:44:59,234:INFO:              jinja2: 3.1.2
2023-01-08 21:44:59,234:INFO:               scipy: 1.9.3
2023-01-08 21:44:59,234:INFO:              joblib: 1.2.0
2023-01-08 21:44:59,234:INFO:             sklearn: 1.1.3
2023-01-08 21:44:59,234:INFO:                pyod: 1.0.7
2023-01-08 21:44:59,234:INFO:            imblearn: 0.10.1
2023-01-08 21:44:59,234:INFO:   category_encoders: 2.5.1.post0
2023-01-08 21:44:59,234:INFO:            lightgbm: 3.3.4
2023-01-08 21:44:59,234:INFO:               numba: 0.56.4
2023-01-08 21:44:59,234:INFO:            requests: 2.28.1
2023-01-08 21:44:59,234:INFO:          matplotlib: 3.6.2
2023-01-08 21:44:59,234:INFO:          scikitplot: 0.3.7
2023-01-08 21:44:59,234:INFO:         yellowbrick: 1.5
2023-01-08 21:44:59,234:INFO:              plotly: 5.11.0
2023-01-08 21:44:59,234:INFO:             kaleido: 0.2.1
2023-01-08 21:44:59,234:INFO:         statsmodels: 0.13.5
2023-01-08 21:44:59,234:INFO:              sktime: 0.14.1
2023-01-08 21:44:59,234:INFO:               tbats: 1.1.2
2023-01-08 21:44:59,234:INFO:            pmdarima: 2.0.2
2023-01-08 21:44:59,234:INFO:              psutil: 5.9.0
2023-01-08 21:44:59,234:INFO:PyCaret optional dependencies:
2023-01-08 21:44:59,234:INFO:                shap: Not installed
2023-01-08 21:44:59,234:INFO:           interpret: Not installed
2023-01-08 21:44:59,234:INFO:                umap: Not installed
2023-01-08 21:44:59,238:INFO:    pandas_profiling: 3.6.2
2023-01-08 21:44:59,238:INFO:  explainerdashboard: Not installed
2023-01-08 21:44:59,238:INFO:             autoviz: Not installed
2023-01-08 21:44:59,238:INFO:           fairlearn: Not installed
2023-01-08 21:44:59,238:INFO:             xgboost: Not installed
2023-01-08 21:44:59,238:INFO:            catboost: Not installed
2023-01-08 21:44:59,238:INFO:              kmodes: Not installed
2023-01-08 21:44:59,238:INFO:             mlxtend: Not installed
2023-01-08 21:44:59,238:INFO:       statsforecast: Not installed
2023-01-08 21:44:59,238:INFO:        tune_sklearn: Not installed
2023-01-08 21:44:59,238:INFO:                 ray: Not installed
2023-01-08 21:44:59,238:INFO:            hyperopt: Not installed
2023-01-08 21:44:59,238:INFO:              optuna: Not installed
2023-01-08 21:44:59,238:INFO:               skopt: Not installed
2023-01-08 21:44:59,238:INFO:              mlflow: Not installed
2023-01-08 21:44:59,238:INFO:              gradio: Not installed
2023-01-08 21:44:59,238:INFO:             fastapi: Not installed
2023-01-08 21:44:59,238:INFO:             uvicorn: Not installed
2023-01-08 21:44:59,238:INFO:              m2cgen: Not installed
2023-01-08 21:44:59,238:INFO:           evidently: Not installed
2023-01-08 21:44:59,238:INFO:                nltk: Not installed
2023-01-08 21:44:59,238:INFO:            pyLDAvis: Not installed
2023-01-08 21:44:59,238:INFO:              gensim: Not installed
2023-01-08 21:44:59,238:INFO:               spacy: Not installed
2023-01-08 21:44:59,238:INFO:           wordcloud: Not installed
2023-01-08 21:44:59,238:INFO:            textblob: Not installed
2023-01-08 21:44:59,238:INFO:               fugue: Not installed
2023-01-08 21:44:59,238:INFO:           streamlit: 1.16.0
2023-01-08 21:44:59,238:INFO:             prophet: Not installed
2023-01-08 21:44:59,238:INFO:None
2023-01-08 21:44:59,242:INFO:Set up data.
2023-01-08 21:44:59,254:INFO:Set up train/test split.
2023-01-08 21:44:59,262:INFO:Set up index.
2023-01-08 21:44:59,262:INFO:Set up folding strategy.
2023-01-08 21:44:59,266:INFO:Assigning column types.
2023-01-08 21:44:59,274:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 21:44:59,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:44:59,391:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:44:59,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,473:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:44:59,477:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:44:59,506:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,506:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,510:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 21:44:59,553:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:44:59,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,621:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:44:59,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,649:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 21:44:59,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:44:59,821:INFO:Preparing preprocessing pipeline...
2023-01-08 21:44:59,825:INFO:Set up label encoding.
2023-01-08 21:44:59,825:INFO:Set up simple imputation.
2023-01-08 21:44:59,885:INFO:Finished creating preprocessing pipeline.
2023-01-08 21:44:59,893:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 21:44:59,893:INFO:Creating final display dataframe.
2023-01-08 21:45:00,161:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                                902
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               2da6
2023-01-08 21:45:00,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:00,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:00,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:00,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:00,344:INFO:setup() successfully completed in 1.12s...............
2023-01-08 21:45:00,348:INFO:Initializing compare_models()
2023-01-08 21:45:00,348:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 21:45:00,348:INFO:Checking exceptions
2023-01-08 21:45:00,352:INFO:Preparing display monitor
2023-01-08 21:45:00,356:INFO:Initializing Logistic Regression
2023-01-08 21:45:00,356:INFO:Total runtime is 0.0 minutes
2023-01-08 21:45:00,356:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:00,356:INFO:Initializing create_model()
2023-01-08 21:45:00,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:00,356:INFO:Checking exceptions
2023-01-08 21:45:00,356:INFO:Importing libraries
2023-01-08 21:45:00,356:INFO:Copying training dataset
2023-01-08 21:45:00,358:INFO:Defining folds
2023-01-08 21:45:00,358:INFO:Declaring metric variables
2023-01-08 21:45:00,358:INFO:Importing untrained model
2023-01-08 21:45:00,358:INFO:Logistic Regression Imported successfully
2023-01-08 21:45:00,358:INFO:Starting cross validation
2023-01-08 21:45:00,362:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:00,669:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,673:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,673:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,677:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:00,709:INFO:Calculating mean and std
2023-01-08 21:45:00,713:INFO:Creating metrics dataframe
2023-01-08 21:45:00,717:INFO:Uploading results into container
2023-01-08 21:45:00,717:INFO:Uploading model into container now
2023-01-08 21:45:00,717:INFO:_master_model_container: 1
2023-01-08 21:45:00,717:INFO:_display_container: 2
2023-01-08 21:45:00,717:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=902, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 21:45:00,717:INFO:create_model() successfully completed......................................
2023-01-08 21:45:00,849:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:00,849:INFO:Creating metrics dataframe
2023-01-08 21:45:00,857:INFO:Initializing K Neighbors Classifier
2023-01-08 21:45:00,857:INFO:Total runtime is 0.008346645037333171 minutes
2023-01-08 21:45:00,857:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:00,857:INFO:Initializing create_model()
2023-01-08 21:45:00,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:00,857:INFO:Checking exceptions
2023-01-08 21:45:00,857:INFO:Importing libraries
2023-01-08 21:45:00,857:INFO:Copying training dataset
2023-01-08 21:45:00,861:INFO:Defining folds
2023-01-08 21:45:00,861:INFO:Declaring metric variables
2023-01-08 21:45:00,861:INFO:Importing untrained model
2023-01-08 21:45:00,861:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:45:00,861:INFO:Starting cross validation
2023-01-08 21:45:00,861:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:01,012:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,012:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,016:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,016:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,028:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,056:INFO:Calculating mean and std
2023-01-08 21:45:01,056:INFO:Creating metrics dataframe
2023-01-08 21:45:01,060:INFO:Uploading results into container
2023-01-08 21:45:01,064:INFO:Uploading model into container now
2023-01-08 21:45:01,064:INFO:_master_model_container: 2
2023-01-08 21:45:01,064:INFO:_display_container: 2
2023-01-08 21:45:01,064:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:45:01,064:INFO:create_model() successfully completed......................................
2023-01-08 21:45:01,181:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:01,181:INFO:Creating metrics dataframe
2023-01-08 21:45:01,191:INFO:Initializing Naive Bayes
2023-01-08 21:45:01,191:INFO:Total runtime is 0.013913245995839436 minutes
2023-01-08 21:45:01,191:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:01,191:INFO:Initializing create_model()
2023-01-08 21:45:01,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:01,191:INFO:Checking exceptions
2023-01-08 21:45:01,191:INFO:Importing libraries
2023-01-08 21:45:01,191:INFO:Copying training dataset
2023-01-08 21:45:01,195:INFO:Defining folds
2023-01-08 21:45:01,195:INFO:Declaring metric variables
2023-01-08 21:45:01,195:INFO:Importing untrained model
2023-01-08 21:45:01,195:INFO:Naive Bayes Imported successfully
2023-01-08 21:45:01,195:INFO:Starting cross validation
2023-01-08 21:45:01,199:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:01,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,307:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,307:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,315:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,315:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,315:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,315:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,315:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,323:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,323:INFO:Calculating mean and std
2023-01-08 21:45:01,327:INFO:Creating metrics dataframe
2023-01-08 21:45:01,331:INFO:Uploading results into container
2023-01-08 21:45:01,331:INFO:Uploading model into container now
2023-01-08 21:45:01,331:INFO:_master_model_container: 3
2023-01-08 21:45:01,331:INFO:_display_container: 2
2023-01-08 21:45:01,331:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 21:45:01,331:INFO:create_model() successfully completed......................................
2023-01-08 21:45:01,455:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:01,455:INFO:Creating metrics dataframe
2023-01-08 21:45:01,459:INFO:Initializing Decision Tree Classifier
2023-01-08 21:45:01,459:INFO:Total runtime is 0.0183786670366923 minutes
2023-01-08 21:45:01,459:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:01,459:INFO:Initializing create_model()
2023-01-08 21:45:01,459:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:01,459:INFO:Checking exceptions
2023-01-08 21:45:01,459:INFO:Importing libraries
2023-01-08 21:45:01,459:INFO:Copying training dataset
2023-01-08 21:45:01,463:INFO:Defining folds
2023-01-08 21:45:01,463:INFO:Declaring metric variables
2023-01-08 21:45:01,463:INFO:Importing untrained model
2023-01-08 21:45:01,463:INFO:Decision Tree Classifier Imported successfully
2023-01-08 21:45:01,463:INFO:Starting cross validation
2023-01-08 21:45:01,463:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:01,538:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,538:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,550:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,550:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,550:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,554:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,554:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,554:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,558:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,558:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,558:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,562:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,562:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,562:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,566:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,566:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,566:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,566:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,570:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,570:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,570:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,570:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,574:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,574:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,574:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,578:INFO:Calculating mean and std
2023-01-08 21:45:01,578:INFO:Creating metrics dataframe
2023-01-08 21:45:01,582:INFO:Uploading results into container
2023-01-08 21:45:01,586:INFO:Uploading model into container now
2023-01-08 21:45:01,586:INFO:_master_model_container: 4
2023-01-08 21:45:01,586:INFO:_display_container: 2
2023-01-08 21:45:01,586:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=902, splitter='best')
2023-01-08 21:45:01,586:INFO:create_model() successfully completed......................................
2023-01-08 21:45:01,706:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:01,706:INFO:Creating metrics dataframe
2023-01-08 21:45:01,710:INFO:Initializing SVM - Linear Kernel
2023-01-08 21:45:01,710:INFO:Total runtime is 0.022574524084726967 minutes
2023-01-08 21:45:01,710:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:01,714:INFO:Initializing create_model()
2023-01-08 21:45:01,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:01,714:INFO:Checking exceptions
2023-01-08 21:45:01,714:INFO:Importing libraries
2023-01-08 21:45:01,714:INFO:Copying training dataset
2023-01-08 21:45:01,714:INFO:Defining folds
2023-01-08 21:45:01,714:INFO:Declaring metric variables
2023-01-08 21:45:01,714:INFO:Importing untrained model
2023-01-08 21:45:01,714:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 21:45:01,718:INFO:Starting cross validation
2023-01-08 21:45:01,718:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:01,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

art, len(result))

2023-01-08 21:45:01,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,818:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,818:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:01,822:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,822:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,822:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,830:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,830:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,830:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,830:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,830:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:01,834:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:01,834:INFO:Calculating mean and std
2023-01-08 21:45:01,838:INFO:Creating metrics dataframe
2023-01-08 21:45:01,842:INFO:Uploading results into container
2023-01-08 21:45:01,842:INFO:Uploading model into container now
2023-01-08 21:45:01,842:INFO:_master_model_container: 5
2023-01-08 21:45:01,842:INFO:_display_container: 2
2023-01-08 21:45:01,842:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=902, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 21:45:01,842:INFO:create_model() successfully completed......................................
2023-01-08 21:45:01,970:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:01,970:INFO:Creating metrics dataframe
2023-01-08 21:45:01,974:INFO:Initializing Ridge Classifier
2023-01-08 21:45:01,974:INFO:Total runtime is 0.02697021961212158 minutes
2023-01-08 21:45:01,978:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:01,978:INFO:Initializing create_model()
2023-01-08 21:45:01,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:01,978:INFO:Checking exceptions
2023-01-08 21:45:01,978:INFO:Importing libraries
2023-01-08 21:45:01,978:INFO:Copying training dataset
2023-01-08 21:45:01,978:INFO:Defining folds
2023-01-08 21:45:01,978:INFO:Declaring metric variables
2023-01-08 21:45:01,982:INFO:Importing untrained model
2023-01-08 21:45:01,982:INFO:Ridge Classifier Imported successfully
2023-01-08 21:45:01,982:INFO:Starting cross validation
2023-01-08 21:45:01,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:02,042:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,050:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,054:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,054:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,054:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,070:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,070:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,070:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,078:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,078:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,078:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,078:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,082:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,082:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,090:INFO:Calculating mean and std
2023-01-08 21:45:02,094:INFO:Creating metrics dataframe
2023-01-08 21:45:02,098:INFO:Uploading results into container
2023-01-08 21:45:02,098:INFO:Uploading model into container now
2023-01-08 21:45:02,098:INFO:_master_model_container: 6
2023-01-08 21:45:02,098:INFO:_display_container: 2
2023-01-08 21:45:02,098:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=902, solver='auto', tol=0.001)
2023-01-08 21:45:02,098:INFO:create_model() successfully completed......................................
2023-01-08 21:45:02,230:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:02,230:INFO:Creating metrics dataframe
2023-01-08 21:45:02,234:INFO:Initializing Random Forest Classifier
2023-01-08 21:45:02,234:INFO:Total runtime is 0.03130198717117309 minutes
2023-01-08 21:45:02,234:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:02,234:INFO:Initializing create_model()
2023-01-08 21:45:02,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:02,238:INFO:Checking exceptions
2023-01-08 21:45:02,238:INFO:Importing libraries
2023-01-08 21:45:02,238:INFO:Copying training dataset
2023-01-08 21:45:02,238:INFO:Defining folds
2023-01-08 21:45:02,238:INFO:Declaring metric variables
2023-01-08 21:45:02,238:INFO:Importing untrained model
2023-01-08 21:45:02,238:INFO:Random Forest Classifier Imported successfully
2023-01-08 21:45:02,238:INFO:Starting cross validation
2023-01-08 21:45:02,242:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:02,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,614:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,630:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,634:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,634:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,642:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,642:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,642:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,646:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,646:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,646:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,650:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,650:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,650:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,650:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,654:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,658:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,658:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,658:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,666:INFO:Calculating mean and std
2023-01-08 21:45:02,670:INFO:Creating metrics dataframe
2023-01-08 21:45:02,674:INFO:Uploading results into container
2023-01-08 21:45:02,674:INFO:Uploading model into container now
2023-01-08 21:45:02,674:INFO:_master_model_container: 7
2023-01-08 21:45:02,674:INFO:_display_container: 2
2023-01-08 21:45:02,674:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=902, verbose=0, warm_start=False)
2023-01-08 21:45:02,674:INFO:create_model() successfully completed......................................
2023-01-08 21:45:02,818:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:02,818:INFO:Creating metrics dataframe
2023-01-08 21:45:02,826:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 21:45:02,826:INFO:Total runtime is 0.04116992553075154 minutes
2023-01-08 21:45:02,826:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:02,826:INFO:Initializing create_model()
2023-01-08 21:45:02,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:02,826:INFO:Checking exceptions
2023-01-08 21:45:02,826:INFO:Importing libraries
2023-01-08 21:45:02,826:INFO:Copying training dataset
2023-01-08 21:45:02,830:INFO:Defining folds
2023-01-08 21:45:02,830:INFO:Declaring metric variables
2023-01-08 21:45:02,830:INFO:Importing untrained model
2023-01-08 21:45:02,830:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 21:45:02,830:INFO:Starting cross validation
2023-01-08 21:45:02,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:02,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,906:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,906:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,938:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,938:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:02,942:INFO:Calculating mean and std
2023-01-08 21:45:02,946:INFO:Creating metrics dataframe
2023-01-08 21:45:02,950:INFO:Uploading results into container
2023-01-08 21:45:02,950:INFO:Uploading model into container now
2023-01-08 21:45:02,950:INFO:_master_model_container: 8
2023-01-08 21:45:02,950:INFO:_display_container: 2
2023-01-08 21:45:02,950:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 21:45:02,950:INFO:create_model() successfully completed......................................
2023-01-08 21:45:03,070:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:03,070:INFO:Creating metrics dataframe
2023-01-08 21:45:03,074:INFO:Initializing Ada Boost Classifier
2023-01-08 21:45:03,074:INFO:Total runtime is 0.04530376195907593 minutes
2023-01-08 21:45:03,074:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:03,078:INFO:Initializing create_model()
2023-01-08 21:45:03,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:03,078:INFO:Checking exceptions
2023-01-08 21:45:03,078:INFO:Importing libraries
2023-01-08 21:45:03,078:INFO:Copying training dataset
2023-01-08 21:45:03,078:INFO:Defining folds
2023-01-08 21:45:03,078:INFO:Declaring metric variables
2023-01-08 21:45:03,078:INFO:Importing untrained model
2023-01-08 21:45:03,082:INFO:Ada Boost Classifier Imported successfully
2023-01-08 21:45:03,082:INFO:Starting cross validation
2023-01-08 21:45:03,082:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:03,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,322:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,322:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,322:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,322:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,322:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,334:INFO:Calculating mean and std
2023-01-08 21:45:03,334:INFO:Creating metrics dataframe
2023-01-08 21:45:03,342:INFO:Uploading results into container
2023-01-08 21:45:03,342:INFO:Uploading model into container now
2023-01-08 21:45:03,342:INFO:_master_model_container: 9
2023-01-08 21:45:03,342:INFO:_display_container: 2
2023-01-08 21:45:03,342:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=902)
2023-01-08 21:45:03,342:INFO:create_model() successfully completed......................................
2023-01-08 21:45:03,466:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:03,466:INFO:Creating metrics dataframe
2023-01-08 21:45:03,474:INFO:Initializing Gradient Boosting Classifier
2023-01-08 21:45:03,474:INFO:Total runtime is 0.05196373065312704 minutes
2023-01-08 21:45:03,474:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:03,474:INFO:Initializing create_model()
2023-01-08 21:45:03,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:03,474:INFO:Checking exceptions
2023-01-08 21:45:03,474:INFO:Importing libraries
2023-01-08 21:45:03,474:INFO:Copying training dataset
2023-01-08 21:45:03,478:INFO:Defining folds
2023-01-08 21:45:03,478:INFO:Declaring metric variables
2023-01-08 21:45:03,478:INFO:Importing untrained model
2023-01-08 21:45:03,478:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 21:45:03,478:INFO:Starting cross validation
2023-01-08 21:45:03,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:03,919:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,919:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,927:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,931:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,935:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,935:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,941:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,946:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,946:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,949:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,949:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,950:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,951:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,951:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,952:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,953:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,953:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,958:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,959:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:03,963:INFO:Calculating mean and std
2023-01-08 21:45:03,964:INFO:Creating metrics dataframe
2023-01-08 21:45:03,969:INFO:Uploading results into container
2023-01-08 21:45:03,970:INFO:Uploading model into container now
2023-01-08 21:45:03,970:INFO:_master_model_container: 10
2023-01-08 21:45:03,970:INFO:_display_container: 2
2023-01-08 21:45:03,971:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=902, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 21:45:03,971:INFO:create_model() successfully completed......................................
2023-01-08 21:45:04,115:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:04,115:INFO:Creating metrics dataframe
2023-01-08 21:45:04,127:INFO:Initializing Linear Discriminant Analysis
2023-01-08 21:45:04,127:INFO:Total runtime is 0.06285608212153117 minutes
2023-01-08 21:45:04,127:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:04,131:INFO:Initializing create_model()
2023-01-08 21:45:04,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:04,131:INFO:Checking exceptions
2023-01-08 21:45:04,131:INFO:Importing libraries
2023-01-08 21:45:04,131:INFO:Copying training dataset
2023-01-08 21:45:04,135:INFO:Defining folds
2023-01-08 21:45:04,135:INFO:Declaring metric variables
2023-01-08 21:45:04,135:INFO:Importing untrained model
2023-01-08 21:45:04,135:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:45:04,135:INFO:Starting cross validation
2023-01-08 21:45:04,135:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:04,219:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,219:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,223:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,227:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,232:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,236:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,236:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,236:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,239:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,239:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,239:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,243:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,243:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,247:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,247:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,247:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,247:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,247:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,255:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,267:INFO:Calculating mean and std
2023-01-08 21:45:04,267:INFO:Creating metrics dataframe
2023-01-08 21:45:04,271:INFO:Uploading results into container
2023-01-08 21:45:04,271:INFO:Uploading model into container now
2023-01-08 21:45:04,271:INFO:_master_model_container: 11
2023-01-08 21:45:04,271:INFO:_display_container: 2
2023-01-08 21:45:04,275:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:45:04,275:INFO:create_model() successfully completed......................................
2023-01-08 21:45:04,399:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:04,399:INFO:Creating metrics dataframe
2023-01-08 21:45:04,403:INFO:Initializing Extra Trees Classifier
2023-01-08 21:45:04,403:INFO:Total runtime is 0.06745647589365641 minutes
2023-01-08 21:45:04,403:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:04,403:INFO:Initializing create_model()
2023-01-08 21:45:04,403:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:04,403:INFO:Checking exceptions
2023-01-08 21:45:04,403:INFO:Importing libraries
2023-01-08 21:45:04,403:INFO:Copying training dataset
2023-01-08 21:45:04,407:INFO:Defining folds
2023-01-08 21:45:04,407:INFO:Declaring metric variables
2023-01-08 21:45:04,407:INFO:Importing untrained model
2023-01-08 21:45:04,407:INFO:Extra Trees Classifier Imported successfully
2023-01-08 21:45:04,407:INFO:Starting cross validation
2023-01-08 21:45:04,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:04,723:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,727:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,727:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,731:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,735:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,735:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,739:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,747:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,747:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,747:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,751:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,751:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,755:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,755:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,759:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,759:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,759:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,763:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,775:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,775:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,779:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,783:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,783:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,787:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:04,791:INFO:Calculating mean and std
2023-01-08 21:45:04,791:INFO:Creating metrics dataframe
2023-01-08 21:45:04,795:INFO:Uploading results into container
2023-01-08 21:45:04,795:INFO:Uploading model into container now
2023-01-08 21:45:04,799:INFO:_master_model_container: 12
2023-01-08 21:45:04,799:INFO:_display_container: 2
2023-01-08 21:45:04,799:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=902, verbose=0, warm_start=False)
2023-01-08 21:45:04,799:INFO:create_model() successfully completed......................................
2023-01-08 21:45:04,923:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:04,923:INFO:Creating metrics dataframe
2023-01-08 21:45:04,931:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 21:45:04,931:INFO:Total runtime is 0.0762555718421936 minutes
2023-01-08 21:45:04,931:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:04,931:INFO:Initializing create_model()
2023-01-08 21:45:04,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:04,931:INFO:Checking exceptions
2023-01-08 21:45:04,931:INFO:Importing libraries
2023-01-08 21:45:04,931:INFO:Copying training dataset
2023-01-08 21:45:04,933:INFO:Defining folds
2023-01-08 21:45:04,933:INFO:Declaring metric variables
2023-01-08 21:45:04,933:INFO:Importing untrained model
2023-01-08 21:45:04,937:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 21:45:04,937:INFO:Starting cross validation
2023-01-08 21:45:04,937:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:05,035:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,035:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,039:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,047:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,051:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,051:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,051:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,055:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,055:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,070:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,078:INFO:Calculating mean and std
2023-01-08 21:45:05,078:INFO:Creating metrics dataframe
2023-01-08 21:45:05,082:INFO:Uploading results into container
2023-01-08 21:45:05,082:INFO:Uploading model into container now
2023-01-08 21:45:05,086:INFO:_master_model_container: 13
2023-01-08 21:45:05,086:INFO:_display_container: 2
2023-01-08 21:45:05,086:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=902, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 21:45:05,086:INFO:create_model() successfully completed......................................
2023-01-08 21:45:05,207:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:05,207:INFO:Creating metrics dataframe
2023-01-08 21:45:05,215:INFO:Initializing Dummy Classifier
2023-01-08 21:45:05,215:INFO:Total runtime is 0.08098783493041992 minutes
2023-01-08 21:45:05,215:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:05,215:INFO:Initializing create_model()
2023-01-08 21:45:05,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002564B17F430>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:05,215:INFO:Checking exceptions
2023-01-08 21:45:05,215:INFO:Importing libraries
2023-01-08 21:45:05,215:INFO:Copying training dataset
2023-01-08 21:45:05,219:INFO:Defining folds
2023-01-08 21:45:05,219:INFO:Declaring metric variables
2023-01-08 21:45:05,219:INFO:Importing untrained model
2023-01-08 21:45:05,219:INFO:Dummy Classifier Imported successfully
2023-01-08 21:45:05,219:INFO:Starting cross validation
2023-01-08 21:45:05,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:05,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:05,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:05,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:05,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:05,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:05,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:05,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:05,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,315:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:05,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:05,323:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,323:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,323:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,327:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:05,327:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:05,327:INFO:Calculating mean and std
2023-01-08 21:45:05,331:INFO:Creating metrics dataframe
2023-01-08 21:45:05,335:INFO:Uploading results into container
2023-01-08 21:45:05,335:INFO:Uploading model into container now
2023-01-08 21:45:05,335:INFO:_master_model_container: 14
2023-01-08 21:45:05,335:INFO:_display_container: 2
2023-01-08 21:45:05,335:INFO:DummyClassifier(constant=None, random_state=902, strategy='prior')
2023-01-08 21:45:05,335:INFO:create_model() successfully completed......................................
2023-01-08 21:45:05,455:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:05,455:INFO:Creating metrics dataframe
2023-01-08 21:45:05,463:INFO:Initializing create_model()
2023-01-08 21:45:05,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002562C7A92E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:05,463:INFO:Checking exceptions
2023-01-08 21:45:05,463:INFO:Importing libraries
2023-01-08 21:45:05,463:INFO:Copying training dataset
2023-01-08 21:45:05,467:INFO:Defining folds
2023-01-08 21:45:05,467:INFO:Declaring metric variables
2023-01-08 21:45:05,467:INFO:Importing untrained model
2023-01-08 21:45:05,467:INFO:Declaring custom model
2023-01-08 21:45:05,467:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:45:05,471:INFO:Cross validation set to False
2023-01-08 21:45:05,471:INFO:Fitting Model
2023-01-08 21:45:05,507:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:45:05,507:INFO:create_model() successfully completed......................................
2023-01-08 21:45:05,651:INFO:_master_model_container: 14
2023-01-08 21:45:05,651:INFO:_display_container: 2
2023-01-08 21:45:05,651:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:45:05,651:INFO:compare_models() successfully completed......................................
2023-01-08 21:45:56,682:INFO:PyCaret ClassificationExperiment
2023-01-08 21:45:56,682:INFO:Logging name: clf-default-name
2023-01-08 21:45:56,682:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 21:45:56,682:INFO:version 3.0.0.rc6
2023-01-08 21:45:56,682:INFO:Initializing setup()
2023-01-08 21:45:56,682:INFO:self.USI: 5247
2023-01-08 21:45:56,682:INFO:self._variable_keys: {'X_train', 'fold_shuffle_param', 'y', 'fix_imbalance', 'logging_param', 'gpu_n_jobs_param', 'target_param', 'seed', 'exp_id', 'log_plots_param', 'y_train', 'idx', 'X_test', 'fold_generator', 'exp_name_log', 'is_multiclass', 'html_param', 'n_jobs_param', 'y_test', 'gpu_param', 'memory', 'USI', 'data', '_available_plots', 'X', '_ml_usecase', 'pipeline', 'fold_groups_param'}
2023-01-08 21:45:56,682:INFO:Checking environment
2023-01-08 21:45:56,682:INFO:python_version: 3.9.15
2023-01-08 21:45:56,682:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 21:45:56,682:INFO:machine: AMD64
2023-01-08 21:45:56,682:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 21:45:56,682:INFO:Memory: svmem(total=17010110464, available=2425458688, percent=85.7, used=14584651776, free=2425458688)
2023-01-08 21:45:56,682:INFO:Physical Core: 6
2023-01-08 21:45:56,682:INFO:Logical Core: 12
2023-01-08 21:45:56,682:INFO:Checking libraries
2023-01-08 21:45:56,682:INFO:System:
2023-01-08 21:45:56,682:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 21:45:56,686:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 21:45:56,686:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 21:45:56,686:INFO:PyCaret required dependencies:
2023-01-08 21:45:56,686:INFO:                 pip: 22.3.1
2023-01-08 21:45:56,686:INFO:          setuptools: 65.6.3
2023-01-08 21:45:56,686:INFO:             pycaret: 3.0.0rc6
2023-01-08 21:45:56,686:INFO:             IPython: 8.8.0
2023-01-08 21:45:56,686:INFO:          ipywidgets: 8.0.4
2023-01-08 21:45:56,686:INFO:                tqdm: 4.64.1
2023-01-08 21:45:56,686:INFO:               numpy: 1.22.4
2023-01-08 21:45:56,686:INFO:              pandas: 1.5.2
2023-01-08 21:45:56,686:INFO:              jinja2: 3.1.2
2023-01-08 21:45:56,686:INFO:               scipy: 1.9.3
2023-01-08 21:45:56,686:INFO:              joblib: 1.2.0
2023-01-08 21:45:56,686:INFO:             sklearn: 1.1.3
2023-01-08 21:45:56,686:INFO:                pyod: 1.0.7
2023-01-08 21:45:56,686:INFO:            imblearn: 0.10.1
2023-01-08 21:45:56,686:INFO:   category_encoders: 2.5.1.post0
2023-01-08 21:45:56,686:INFO:            lightgbm: 3.3.4
2023-01-08 21:45:56,686:INFO:               numba: 0.56.4
2023-01-08 21:45:56,686:INFO:            requests: 2.28.1
2023-01-08 21:45:56,686:INFO:          matplotlib: 3.6.2
2023-01-08 21:45:56,686:INFO:          scikitplot: 0.3.7
2023-01-08 21:45:56,686:INFO:         yellowbrick: 1.5
2023-01-08 21:45:56,686:INFO:              plotly: 5.11.0
2023-01-08 21:45:56,686:INFO:             kaleido: 0.2.1
2023-01-08 21:45:56,686:INFO:         statsmodels: 0.13.5
2023-01-08 21:45:56,686:INFO:              sktime: 0.14.1
2023-01-08 21:45:56,686:INFO:               tbats: 1.1.2
2023-01-08 21:45:56,686:INFO:            pmdarima: 2.0.2
2023-01-08 21:45:56,686:INFO:              psutil: 5.9.0
2023-01-08 21:45:56,686:INFO:PyCaret optional dependencies:
2023-01-08 21:45:56,686:INFO:                shap: Not installed
2023-01-08 21:45:56,686:INFO:           interpret: Not installed
2023-01-08 21:45:56,686:INFO:                umap: Not installed
2023-01-08 21:45:56,686:INFO:    pandas_profiling: 3.6.2
2023-01-08 21:45:56,686:INFO:  explainerdashboard: Not installed
2023-01-08 21:45:56,686:INFO:             autoviz: Not installed
2023-01-08 21:45:56,690:INFO:           fairlearn: Not installed
2023-01-08 21:45:56,690:INFO:             xgboost: Not installed
2023-01-08 21:45:56,690:INFO:            catboost: Not installed
2023-01-08 21:45:56,690:INFO:              kmodes: Not installed
2023-01-08 21:45:56,690:INFO:             mlxtend: Not installed
2023-01-08 21:45:56,690:INFO:       statsforecast: Not installed
2023-01-08 21:45:56,690:INFO:        tune_sklearn: Not installed
2023-01-08 21:45:56,690:INFO:                 ray: Not installed
2023-01-08 21:45:56,690:INFO:            hyperopt: Not installed
2023-01-08 21:45:56,690:INFO:              optuna: Not installed
2023-01-08 21:45:56,690:INFO:               skopt: Not installed
2023-01-08 21:45:56,690:INFO:              mlflow: Not installed
2023-01-08 21:45:56,690:INFO:              gradio: Not installed
2023-01-08 21:45:56,690:INFO:             fastapi: Not installed
2023-01-08 21:45:56,690:INFO:             uvicorn: Not installed
2023-01-08 21:45:56,690:INFO:              m2cgen: Not installed
2023-01-08 21:45:56,690:INFO:           evidently: Not installed
2023-01-08 21:45:56,690:INFO:                nltk: Not installed
2023-01-08 21:45:56,690:INFO:            pyLDAvis: Not installed
2023-01-08 21:45:56,690:INFO:              gensim: Not installed
2023-01-08 21:45:56,690:INFO:               spacy: Not installed
2023-01-08 21:45:56,690:INFO:           wordcloud: Not installed
2023-01-08 21:45:56,690:INFO:            textblob: Not installed
2023-01-08 21:45:56,690:INFO:               fugue: Not installed
2023-01-08 21:45:56,690:INFO:           streamlit: 1.16.0
2023-01-08 21:45:56,690:INFO:             prophet: Not installed
2023-01-08 21:45:56,690:INFO:None
2023-01-08 21:45:56,690:INFO:Set up data.
2023-01-08 21:45:56,698:INFO:Set up train/test split.
2023-01-08 21:45:56,702:INFO:Set up index.
2023-01-08 21:45:56,702:INFO:Set up folding strategy.
2023-01-08 21:45:56,702:INFO:Assigning column types.
2023-01-08 21:45:56,710:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 21:45:56,815:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:45:56,815:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:45:56,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:56,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:56,899:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:45:56,899:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:45:56,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:56,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:56,931:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 21:45:56,971:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:45:56,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:56,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:57,042:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:45:57,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:57,064:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:57,064:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 21:45:57,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:57,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:57,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:57,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:57,270:INFO:Preparing preprocessing pipeline...
2023-01-08 21:45:57,270:INFO:Set up label encoding.
2023-01-08 21:45:57,270:INFO:Set up simple imputation.
2023-01-08 21:45:57,328:INFO:Finished creating preprocessing pipeline.
2023-01-08 21:45:57,332:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 21:45:57,332:INFO:Creating final display dataframe.
2023-01-08 21:45:57,884:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               3334
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               5247
2023-01-08 21:45:58,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:58,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:58,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:58,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:45:58,100:INFO:setup() successfully completed in 1.42s...............
2023-01-08 21:45:58,104:INFO:Initializing compare_models()
2023-01-08 21:45:58,104:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 21:45:58,104:INFO:Checking exceptions
2023-01-08 21:45:58,108:INFO:Preparing display monitor
2023-01-08 21:45:58,116:INFO:Initializing Logistic Regression
2023-01-08 21:45:58,116:INFO:Total runtime is 0.0 minutes
2023-01-08 21:45:58,116:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:58,116:INFO:Initializing create_model()
2023-01-08 21:45:58,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:58,116:INFO:Checking exceptions
2023-01-08 21:45:58,116:INFO:Importing libraries
2023-01-08 21:45:58,116:INFO:Copying training dataset
2023-01-08 21:45:58,124:INFO:Defining folds
2023-01-08 21:45:58,124:INFO:Declaring metric variables
2023-01-08 21:45:58,124:INFO:Importing untrained model
2023-01-08 21:45:58,124:INFO:Logistic Regression Imported successfully
2023-01-08 21:45:58,124:INFO:Starting cross validation
2023-01-08 21:45:58,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:58,428:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,428:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,464:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,464:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,464:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,467:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,467:INFO:Calculating mean and std
2023-01-08 21:45:58,471:INFO:Creating metrics dataframe
2023-01-08 21:45:58,475:INFO:Uploading results into container
2023-01-08 21:45:58,475:INFO:Uploading model into container now
2023-01-08 21:45:58,475:INFO:_master_model_container: 1
2023-01-08 21:45:58,475:INFO:_display_container: 2
2023-01-08 21:45:58,475:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3334, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 21:45:58,475:INFO:create_model() successfully completed......................................
2023-01-08 21:45:58,604:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:58,604:INFO:Creating metrics dataframe
2023-01-08 21:45:58,612:INFO:Initializing K Neighbors Classifier
2023-01-08 21:45:58,612:INFO:Total runtime is 0.00826712449391683 minutes
2023-01-08 21:45:58,612:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:58,612:INFO:Initializing create_model()
2023-01-08 21:45:58,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:58,612:INFO:Checking exceptions
2023-01-08 21:45:58,612:INFO:Importing libraries
2023-01-08 21:45:58,612:INFO:Copying training dataset
2023-01-08 21:45:58,616:INFO:Defining folds
2023-01-08 21:45:58,616:INFO:Declaring metric variables
2023-01-08 21:45:58,616:INFO:Importing untrained model
2023-01-08 21:45:58,616:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:45:58,616:INFO:Starting cross validation
2023-01-08 21:45:58,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:58,760:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,768:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,776:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,776:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,776:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,776:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,780:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,780:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,780:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,792:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,792:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,792:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,792:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,800:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,800:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,808:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,808:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,808:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:58,812:INFO:Calculating mean and std
2023-01-08 21:45:58,812:INFO:Creating metrics dataframe
2023-01-08 21:45:58,820:INFO:Uploading results into container
2023-01-08 21:45:58,820:INFO:Uploading model into container now
2023-01-08 21:45:58,820:INFO:_master_model_container: 2
2023-01-08 21:45:58,820:INFO:_display_container: 2
2023-01-08 21:45:58,820:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:45:58,820:INFO:create_model() successfully completed......................................
2023-01-08 21:45:58,960:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:58,960:INFO:Creating metrics dataframe
2023-01-08 21:45:58,972:INFO:Initializing Naive Bayes
2023-01-08 21:45:58,972:INFO:Total runtime is 0.014270850022633872 minutes
2023-01-08 21:45:58,972:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:58,972:INFO:Initializing create_model()
2023-01-08 21:45:58,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:58,972:INFO:Checking exceptions
2023-01-08 21:45:58,972:INFO:Importing libraries
2023-01-08 21:45:58,972:INFO:Copying training dataset
2023-01-08 21:45:58,976:INFO:Defining folds
2023-01-08 21:45:58,976:INFO:Declaring metric variables
2023-01-08 21:45:58,976:INFO:Importing untrained model
2023-01-08 21:45:58,976:INFO:Naive Bayes Imported successfully
2023-01-08 21:45:58,976:INFO:Starting cross validation
2023-01-08 21:45:58,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:59,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,108:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,108:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,112:INFO:Calculating mean and std
2023-01-08 21:45:59,112:INFO:Creating metrics dataframe
2023-01-08 21:45:59,120:INFO:Uploading results into container
2023-01-08 21:45:59,120:INFO:Uploading model into container now
2023-01-08 21:45:59,120:INFO:_master_model_container: 3
2023-01-08 21:45:59,120:INFO:_display_container: 2
2023-01-08 21:45:59,120:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 21:45:59,120:INFO:create_model() successfully completed......................................
2023-01-08 21:45:59,236:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:59,236:INFO:Creating metrics dataframe
2023-01-08 21:45:59,244:INFO:Initializing Decision Tree Classifier
2023-01-08 21:45:59,244:INFO:Total runtime is 0.018798673152923585 minutes
2023-01-08 21:45:59,244:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:59,244:INFO:Initializing create_model()
2023-01-08 21:45:59,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:59,244:INFO:Checking exceptions
2023-01-08 21:45:59,244:INFO:Importing libraries
2023-01-08 21:45:59,244:INFO:Copying training dataset
2023-01-08 21:45:59,248:INFO:Defining folds
2023-01-08 21:45:59,248:INFO:Declaring metric variables
2023-01-08 21:45:59,248:INFO:Importing untrained model
2023-01-08 21:45:59,248:INFO:Decision Tree Classifier Imported successfully
2023-01-08 21:45:59,248:INFO:Starting cross validation
2023-01-08 21:45:59,248:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:59,316:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,316:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,320:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,320:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,324:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,324:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,328:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,328:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,328:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,332:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,332:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,332:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,332:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,332:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,336:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,336:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,336:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,336:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,340:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,344:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,344:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,348:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,348:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,348:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,352:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,352:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,356:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,356:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,356:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,356:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,360:INFO:Calculating mean and std
2023-01-08 21:45:59,360:INFO:Creating metrics dataframe
2023-01-08 21:45:59,364:INFO:Uploading results into container
2023-01-08 21:45:59,364:INFO:Uploading model into container now
2023-01-08 21:45:59,368:INFO:_master_model_container: 4
2023-01-08 21:45:59,368:INFO:_display_container: 2
2023-01-08 21:45:59,368:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3334, splitter='best')
2023-01-08 21:45:59,368:INFO:create_model() successfully completed......................................
2023-01-08 21:45:59,476:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:59,476:INFO:Creating metrics dataframe
2023-01-08 21:45:59,480:INFO:Initializing SVM - Linear Kernel
2023-01-08 21:45:59,480:INFO:Total runtime is 0.022740105787913006 minutes
2023-01-08 21:45:59,480:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:59,480:INFO:Initializing create_model()
2023-01-08 21:45:59,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:59,480:INFO:Checking exceptions
2023-01-08 21:45:59,484:INFO:Importing libraries
2023-01-08 21:45:59,484:INFO:Copying training dataset
2023-01-08 21:45:59,484:INFO:Defining folds
2023-01-08 21:45:59,484:INFO:Declaring metric variables
2023-01-08 21:45:59,488:INFO:Importing untrained model
2023-01-08 21:45:59,488:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 21:45:59,488:INFO:Starting cross validation
2023-01-08 21:45:59,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:59,552:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,552:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:59,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,560:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,560:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,560:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,560:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:59,564:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,564:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,568:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,568:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,568:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,572:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,576:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:59,576:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,576:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,580:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,580:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,580:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:59,580:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,580:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:45:59,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,592:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,592:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,596:INFO:Calculating mean and std
2023-01-08 21:45:59,596:INFO:Creating metrics dataframe
2023-01-08 21:45:59,600:INFO:Uploading results into container
2023-01-08 21:45:59,600:INFO:Uploading model into container now
2023-01-08 21:45:59,600:INFO:_master_model_container: 5
2023-01-08 21:45:59,600:INFO:_display_container: 2
2023-01-08 21:45:59,600:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3334, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 21:45:59,600:INFO:create_model() successfully completed......................................
2023-01-08 21:45:59,726:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:59,726:INFO:Creating metrics dataframe
2023-01-08 21:45:59,734:INFO:Initializing Ridge Classifier
2023-01-08 21:45:59,734:INFO:Total runtime is 0.02697076002756755 minutes
2023-01-08 21:45:59,734:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:59,734:INFO:Initializing create_model()
2023-01-08 21:45:59,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:59,734:INFO:Checking exceptions
2023-01-08 21:45:59,734:INFO:Importing libraries
2023-01-08 21:45:59,734:INFO:Copying training dataset
2023-01-08 21:45:59,738:INFO:Defining folds
2023-01-08 21:45:59,738:INFO:Declaring metric variables
2023-01-08 21:45:59,738:INFO:Importing untrained model
2023-01-08 21:45:59,738:INFO:Ridge Classifier Imported successfully
2023-01-08 21:45:59,738:INFO:Starting cross validation
2023-01-08 21:45:59,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:45:59,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,810:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,810:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,810:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,810:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,810:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,810:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,818:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,818:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,818:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:45:59,818:INFO:Calculating mean and std
2023-01-08 21:45:59,822:INFO:Creating metrics dataframe
2023-01-08 21:45:59,822:INFO:Uploading results into container
2023-01-08 21:45:59,822:INFO:Uploading model into container now
2023-01-08 21:45:59,826:INFO:_master_model_container: 6
2023-01-08 21:45:59,826:INFO:_display_container: 2
2023-01-08 21:45:59,826:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=3334, solver='auto', tol=0.001)
2023-01-08 21:45:59,826:INFO:create_model() successfully completed......................................
2023-01-08 21:45:59,926:INFO:SubProcess create_model() end ==================================
2023-01-08 21:45:59,926:INFO:Creating metrics dataframe
2023-01-08 21:45:59,934:INFO:Initializing Random Forest Classifier
2023-01-08 21:45:59,934:INFO:Total runtime is 0.03030656178792318 minutes
2023-01-08 21:45:59,934:INFO:SubProcess create_model() called ==================================
2023-01-08 21:45:59,934:INFO:Initializing create_model()
2023-01-08 21:45:59,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:45:59,934:INFO:Checking exceptions
2023-01-08 21:45:59,934:INFO:Importing libraries
2023-01-08 21:45:59,934:INFO:Copying training dataset
2023-01-08 21:45:59,938:INFO:Defining folds
2023-01-08 21:45:59,938:INFO:Declaring metric variables
2023-01-08 21:45:59,938:INFO:Importing untrained model
2023-01-08 21:45:59,938:INFO:Random Forest Classifier Imported successfully
2023-01-08 21:45:59,938:INFO:Starting cross validation
2023-01-08 21:45:59,938:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:46:00,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,322:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,350:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,350:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,350:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,354:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,354:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,358:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,358:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,362:INFO:Calculating mean and std
2023-01-08 21:46:00,362:INFO:Creating metrics dataframe
2023-01-08 21:46:00,370:INFO:Uploading results into container
2023-01-08 21:46:00,370:INFO:Uploading model into container now
2023-01-08 21:46:00,370:INFO:_master_model_container: 7
2023-01-08 21:46:00,370:INFO:_display_container: 2
2023-01-08 21:46:00,370:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3334, verbose=0, warm_start=False)
2023-01-08 21:46:00,370:INFO:create_model() successfully completed......................................
2023-01-08 21:46:00,498:INFO:SubProcess create_model() end ==================================
2023-01-08 21:46:00,498:INFO:Creating metrics dataframe
2023-01-08 21:46:00,502:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 21:46:00,506:INFO:Total runtime is 0.03983656167984009 minutes
2023-01-08 21:46:00,506:INFO:SubProcess create_model() called ==================================
2023-01-08 21:46:00,506:INFO:Initializing create_model()
2023-01-08 21:46:00,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:46:00,506:INFO:Checking exceptions
2023-01-08 21:46:00,506:INFO:Importing libraries
2023-01-08 21:46:00,506:INFO:Copying training dataset
2023-01-08 21:46:00,510:INFO:Defining folds
2023-01-08 21:46:00,510:INFO:Declaring metric variables
2023-01-08 21:46:00,510:INFO:Importing untrained model
2023-01-08 21:46:00,510:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 21:46:00,510:INFO:Starting cross validation
2023-01-08 21:46:00,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:46:00,574:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,578:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,578:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,582:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,582:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,614:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,614:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,614:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,614:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,626:INFO:Calculating mean and std
2023-01-08 21:46:00,626:INFO:Creating metrics dataframe
2023-01-08 21:46:00,630:INFO:Uploading results into container
2023-01-08 21:46:00,630:INFO:Uploading model into container now
2023-01-08 21:46:00,634:INFO:_master_model_container: 8
2023-01-08 21:46:00,634:INFO:_display_container: 2
2023-01-08 21:46:00,634:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 21:46:00,634:INFO:create_model() successfully completed......................................
2023-01-08 21:46:00,758:INFO:SubProcess create_model() end ==================================
2023-01-08 21:46:00,758:INFO:Creating metrics dataframe
2023-01-08 21:46:00,762:INFO:Initializing Ada Boost Classifier
2023-01-08 21:46:00,762:INFO:Total runtime is 0.04410086075464885 minutes
2023-01-08 21:46:00,766:INFO:SubProcess create_model() called ==================================
2023-01-08 21:46:00,766:INFO:Initializing create_model()
2023-01-08 21:46:00,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:46:00,766:INFO:Checking exceptions
2023-01-08 21:46:00,766:INFO:Importing libraries
2023-01-08 21:46:00,766:INFO:Copying training dataset
2023-01-08 21:46:00,766:INFO:Defining folds
2023-01-08 21:46:00,770:INFO:Declaring metric variables
2023-01-08 21:46:00,770:INFO:Importing untrained model
2023-01-08 21:46:00,770:INFO:Ada Boost Classifier Imported successfully
2023-01-08 21:46:00,770:INFO:Starting cross validation
2023-01-08 21:46:00,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:46:00,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,994:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,994:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,994:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,994:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,996:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,998:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:00,998:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,002:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,002:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,002:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,002:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,002:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,006:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,006:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,010:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,010:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,010:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,010:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,010:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,014:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,028:INFO:Calculating mean and std
2023-01-08 21:46:01,028:INFO:Creating metrics dataframe
2023-01-08 21:46:01,031:INFO:Uploading results into container
2023-01-08 21:46:01,035:INFO:Uploading model into container now
2023-01-08 21:46:01,035:INFO:_master_model_container: 9
2023-01-08 21:46:01,035:INFO:_display_container: 2
2023-01-08 21:46:01,035:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3334)
2023-01-08 21:46:01,035:INFO:create_model() successfully completed......................................
2023-01-08 21:46:01,161:INFO:SubProcess create_model() end ==================================
2023-01-08 21:46:01,161:INFO:Creating metrics dataframe
2023-01-08 21:46:01,167:INFO:Initializing Gradient Boosting Classifier
2023-01-08 21:46:01,167:INFO:Total runtime is 0.05085250139236451 minutes
2023-01-08 21:46:01,167:INFO:SubProcess create_model() called ==================================
2023-01-08 21:46:01,167:INFO:Initializing create_model()
2023-01-08 21:46:01,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:46:01,167:INFO:Checking exceptions
2023-01-08 21:46:01,167:INFO:Importing libraries
2023-01-08 21:46:01,167:INFO:Copying training dataset
2023-01-08 21:46:01,171:INFO:Defining folds
2023-01-08 21:46:01,171:INFO:Declaring metric variables
2023-01-08 21:46:01,171:INFO:Importing untrained model
2023-01-08 21:46:01,171:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 21:46:01,173:INFO:Starting cross validation
2023-01-08 21:46:01,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:46:01,605:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,605:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,609:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,613:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,613:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,618:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,618:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,618:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,621:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,621:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,631:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,635:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,635:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,635:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,642:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,642:INFO:Calculating mean and std
2023-01-08 21:46:01,646:INFO:Creating metrics dataframe
2023-01-08 21:46:01,650:INFO:Uploading results into container
2023-01-08 21:46:01,650:INFO:Uploading model into container now
2023-01-08 21:46:01,650:INFO:_master_model_container: 10
2023-01-08 21:46:01,650:INFO:_display_container: 2
2023-01-08 21:46:01,650:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3334, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 21:46:01,650:INFO:create_model() successfully completed......................................
2023-01-08 21:46:01,763:INFO:SubProcess create_model() end ==================================
2023-01-08 21:46:01,763:INFO:Creating metrics dataframe
2023-01-08 21:46:01,772:INFO:Initializing Linear Discriminant Analysis
2023-01-08 21:46:01,772:INFO:Total runtime is 0.06092589298884075 minutes
2023-01-08 21:46:01,772:INFO:SubProcess create_model() called ==================================
2023-01-08 21:46:01,772:INFO:Initializing create_model()
2023-01-08 21:46:01,772:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:46:01,772:INFO:Checking exceptions
2023-01-08 21:46:01,772:INFO:Importing libraries
2023-01-08 21:46:01,772:INFO:Copying training dataset
2023-01-08 21:46:01,774:INFO:Defining folds
2023-01-08 21:46:01,774:INFO:Declaring metric variables
2023-01-08 21:46:01,774:INFO:Importing untrained model
2023-01-08 21:46:01,774:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:46:01,774:INFO:Starting cross validation
2023-01-08 21:46:01,778:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:46:01,836:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,840:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,840:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,852:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,852:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,852:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,860:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,864:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,864:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,864:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,872:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,872:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,872:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,872:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,872:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:01,876:INFO:Calculating mean and std
2023-01-08 21:46:01,876:INFO:Creating metrics dataframe
2023-01-08 21:46:01,880:INFO:Uploading results into container
2023-01-08 21:46:01,880:INFO:Uploading model into container now
2023-01-08 21:46:01,884:INFO:_master_model_container: 11
2023-01-08 21:46:01,884:INFO:_display_container: 2
2023-01-08 21:46:01,884:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:46:01,884:INFO:create_model() successfully completed......................................
2023-01-08 21:46:01,998:INFO:SubProcess create_model() end ==================================
2023-01-08 21:46:01,998:INFO:Creating metrics dataframe
2023-01-08 21:46:02,004:INFO:Initializing Extra Trees Classifier
2023-01-08 21:46:02,004:INFO:Total runtime is 0.06479388078053794 minutes
2023-01-08 21:46:02,004:INFO:SubProcess create_model() called ==================================
2023-01-08 21:46:02,004:INFO:Initializing create_model()
2023-01-08 21:46:02,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:46:02,004:INFO:Checking exceptions
2023-01-08 21:46:02,004:INFO:Importing libraries
2023-01-08 21:46:02,004:INFO:Copying training dataset
2023-01-08 21:46:02,004:INFO:Defining folds
2023-01-08 21:46:02,004:INFO:Declaring metric variables
2023-01-08 21:46:02,004:INFO:Importing untrained model
2023-01-08 21:46:02,007:INFO:Extra Trees Classifier Imported successfully
2023-01-08 21:46:02,007:INFO:Starting cross validation
2023-01-08 21:46:02,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:46:02,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,334:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,350:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,350:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,350:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,354:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,366:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,370:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,370:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,374:INFO:Calculating mean and std
2023-01-08 21:46:02,374:INFO:Creating metrics dataframe
2023-01-08 21:46:02,378:INFO:Uploading results into container
2023-01-08 21:46:02,378:INFO:Uploading model into container now
2023-01-08 21:46:02,378:INFO:_master_model_container: 12
2023-01-08 21:46:02,378:INFO:_display_container: 2
2023-01-08 21:46:02,382:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3334, verbose=0, warm_start=False)
2023-01-08 21:46:02,382:INFO:create_model() successfully completed......................................
2023-01-08 21:46:02,554:INFO:SubProcess create_model() end ==================================
2023-01-08 21:46:02,554:INFO:Creating metrics dataframe
2023-01-08 21:46:02,562:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 21:46:02,562:INFO:Total runtime is 0.07410414218902589 minutes
2023-01-08 21:46:02,562:INFO:SubProcess create_model() called ==================================
2023-01-08 21:46:02,562:INFO:Initializing create_model()
2023-01-08 21:46:02,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:46:02,562:INFO:Checking exceptions
2023-01-08 21:46:02,562:INFO:Importing libraries
2023-01-08 21:46:02,562:INFO:Copying training dataset
2023-01-08 21:46:02,566:INFO:Defining folds
2023-01-08 21:46:02,566:INFO:Declaring metric variables
2023-01-08 21:46:02,566:INFO:Importing untrained model
2023-01-08 21:46:02,570:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 21:46:02,570:INFO:Starting cross validation
2023-01-08 21:46:02,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:46:02,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,680:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,684:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,684:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,712:INFO:Calculating mean and std
2023-01-08 21:46:02,712:INFO:Creating metrics dataframe
2023-01-08 21:46:02,716:INFO:Uploading results into container
2023-01-08 21:46:02,720:INFO:Uploading model into container now
2023-01-08 21:46:02,720:INFO:_master_model_container: 13
2023-01-08 21:46:02,720:INFO:_display_container: 2
2023-01-08 21:46:02,720:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3334, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 21:46:02,720:INFO:create_model() successfully completed......................................
2023-01-08 21:46:02,842:INFO:SubProcess create_model() end ==================================
2023-01-08 21:46:02,842:INFO:Creating metrics dataframe
2023-01-08 21:46:02,846:INFO:Initializing Dummy Classifier
2023-01-08 21:46:02,846:INFO:Total runtime is 0.07883679469426474 minutes
2023-01-08 21:46:02,846:INFO:SubProcess create_model() called ==================================
2023-01-08 21:46:02,846:INFO:Initializing create_model()
2023-01-08 21:46:02,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256528237F0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:46:02,846:INFO:Checking exceptions
2023-01-08 21:46:02,846:INFO:Importing libraries
2023-01-08 21:46:02,846:INFO:Copying training dataset
2023-01-08 21:46:02,850:INFO:Defining folds
2023-01-08 21:46:02,850:INFO:Declaring metric variables
2023-01-08 21:46:02,850:INFO:Importing untrained model
2023-01-08 21:46:02,850:INFO:Dummy Classifier Imported successfully
2023-01-08 21:46:02,850:INFO:Starting cross validation
2023-01-08 21:46:02,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:46:02,938:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,938:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:46:02,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:46:02,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,946:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,946:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:46:02,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,952:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,952:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:46:02,952:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,952:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:46:02,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:46:02,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:46:02,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:46:02,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:46:02,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:46:02,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:46:02,988:INFO:Calculating mean and std
2023-01-08 21:46:02,988:INFO:Creating metrics dataframe
2023-01-08 21:46:02,996:INFO:Uploading results into container
2023-01-08 21:46:02,996:INFO:Uploading model into container now
2023-01-08 21:46:02,996:INFO:_master_model_container: 14
2023-01-08 21:46:02,996:INFO:_display_container: 2
2023-01-08 21:46:02,996:INFO:DummyClassifier(constant=None, random_state=3334, strategy='prior')
2023-01-08 21:46:02,996:INFO:create_model() successfully completed......................................
2023-01-08 21:46:03,154:INFO:SubProcess create_model() end ==================================
2023-01-08 21:46:03,154:INFO:Creating metrics dataframe
2023-01-08 21:46:03,162:INFO:Initializing create_model()
2023-01-08 21:46:03,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652899A90>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:46:03,162:INFO:Checking exceptions
2023-01-08 21:46:03,162:INFO:Importing libraries
2023-01-08 21:46:03,162:INFO:Copying training dataset
2023-01-08 21:46:03,166:INFO:Defining folds
2023-01-08 21:46:03,166:INFO:Declaring metric variables
2023-01-08 21:46:03,166:INFO:Importing untrained model
2023-01-08 21:46:03,166:INFO:Declaring custom model
2023-01-08 21:46:03,166:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:46:03,170:INFO:Cross validation set to False
2023-01-08 21:46:03,170:INFO:Fitting Model
2023-01-08 21:46:03,206:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:46:03,206:INFO:create_model() successfully completed......................................
2023-01-08 21:46:03,358:INFO:_master_model_container: 14
2023-01-08 21:46:03,358:INFO:_display_container: 2
2023-01-08 21:46:03,362:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:46:03,362:INFO:compare_models() successfully completed......................................
2023-01-08 21:48:36,561:INFO:PyCaret ClassificationExperiment
2023-01-08 21:48:36,561:INFO:Logging name: clf-default-name
2023-01-08 21:48:36,562:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 21:48:36,562:INFO:version 3.0.0.rc6
2023-01-08 21:48:36,562:INFO:Initializing setup()
2023-01-08 21:48:36,564:INFO:self.USI: b044
2023-01-08 21:48:36,564:INFO:self._variable_keys: {'X_train', 'fold_shuffle_param', 'y', 'fix_imbalance', 'logging_param', 'gpu_n_jobs_param', 'target_param', 'seed', 'exp_id', 'log_plots_param', 'y_train', 'idx', 'X_test', 'fold_generator', 'exp_name_log', 'is_multiclass', 'html_param', 'n_jobs_param', 'y_test', 'gpu_param', 'memory', 'USI', 'data', '_available_plots', 'X', '_ml_usecase', 'pipeline', 'fold_groups_param'}
2023-01-08 21:48:36,564:INFO:Checking environment
2023-01-08 21:48:36,564:INFO:python_version: 3.9.15
2023-01-08 21:48:36,564:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 21:48:36,564:INFO:machine: AMD64
2023-01-08 21:48:36,564:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 21:48:36,565:INFO:Memory: svmem(total=17010110464, available=2704248832, percent=84.1, used=14305861632, free=2704248832)
2023-01-08 21:48:36,565:INFO:Physical Core: 6
2023-01-08 21:48:36,565:INFO:Logical Core: 12
2023-01-08 21:48:36,565:INFO:Checking libraries
2023-01-08 21:48:36,565:INFO:System:
2023-01-08 21:48:36,565:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 21:48:36,565:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 21:48:36,565:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 21:48:36,565:INFO:PyCaret required dependencies:
2023-01-08 21:48:36,566:INFO:                 pip: 22.3.1
2023-01-08 21:48:36,566:INFO:          setuptools: 65.6.3
2023-01-08 21:48:36,566:INFO:             pycaret: 3.0.0rc6
2023-01-08 21:48:36,566:INFO:             IPython: 8.8.0
2023-01-08 21:48:36,566:INFO:          ipywidgets: 8.0.4
2023-01-08 21:48:36,566:INFO:                tqdm: 4.64.1
2023-01-08 21:48:36,566:INFO:               numpy: 1.22.4
2023-01-08 21:48:36,567:INFO:              pandas: 1.5.2
2023-01-08 21:48:36,567:INFO:              jinja2: 3.1.2
2023-01-08 21:48:36,567:INFO:               scipy: 1.9.3
2023-01-08 21:48:36,567:INFO:              joblib: 1.2.0
2023-01-08 21:48:36,567:INFO:             sklearn: 1.1.3
2023-01-08 21:48:36,567:INFO:                pyod: 1.0.7
2023-01-08 21:48:36,567:INFO:            imblearn: 0.10.1
2023-01-08 21:48:36,567:INFO:   category_encoders: 2.5.1.post0
2023-01-08 21:48:36,567:INFO:            lightgbm: 3.3.4
2023-01-08 21:48:36,567:INFO:               numba: 0.56.4
2023-01-08 21:48:36,567:INFO:            requests: 2.28.1
2023-01-08 21:48:36,567:INFO:          matplotlib: 3.6.2
2023-01-08 21:48:36,567:INFO:          scikitplot: 0.3.7
2023-01-08 21:48:36,567:INFO:         yellowbrick: 1.5
2023-01-08 21:48:36,567:INFO:              plotly: 5.11.0
2023-01-08 21:48:36,567:INFO:             kaleido: 0.2.1
2023-01-08 21:48:36,567:INFO:         statsmodels: 0.13.5
2023-01-08 21:48:36,567:INFO:              sktime: 0.14.1
2023-01-08 21:48:36,567:INFO:               tbats: 1.1.2
2023-01-08 21:48:36,567:INFO:            pmdarima: 2.0.2
2023-01-08 21:48:36,568:INFO:              psutil: 5.9.0
2023-01-08 21:48:36,568:INFO:PyCaret optional dependencies:
2023-01-08 21:48:36,568:INFO:                shap: Not installed
2023-01-08 21:48:36,568:INFO:           interpret: Not installed
2023-01-08 21:48:36,568:INFO:                umap: Not installed
2023-01-08 21:48:36,568:INFO:    pandas_profiling: 3.6.2
2023-01-08 21:48:36,568:INFO:  explainerdashboard: Not installed
2023-01-08 21:48:36,568:INFO:             autoviz: Not installed
2023-01-08 21:48:36,568:INFO:           fairlearn: Not installed
2023-01-08 21:48:36,568:INFO:             xgboost: Not installed
2023-01-08 21:48:36,568:INFO:            catboost: Not installed
2023-01-08 21:48:36,568:INFO:              kmodes: Not installed
2023-01-08 21:48:36,568:INFO:             mlxtend: Not installed
2023-01-08 21:48:36,569:INFO:       statsforecast: Not installed
2023-01-08 21:48:36,569:INFO:        tune_sklearn: Not installed
2023-01-08 21:48:36,569:INFO:                 ray: Not installed
2023-01-08 21:48:36,569:INFO:            hyperopt: Not installed
2023-01-08 21:48:36,569:INFO:              optuna: Not installed
2023-01-08 21:48:36,569:INFO:               skopt: Not installed
2023-01-08 21:48:36,569:INFO:              mlflow: Not installed
2023-01-08 21:48:36,569:INFO:              gradio: Not installed
2023-01-08 21:48:36,569:INFO:             fastapi: Not installed
2023-01-08 21:48:36,569:INFO:             uvicorn: Not installed
2023-01-08 21:48:36,569:INFO:              m2cgen: Not installed
2023-01-08 21:48:36,569:INFO:           evidently: Not installed
2023-01-08 21:48:36,570:INFO:                nltk: Not installed
2023-01-08 21:48:36,570:INFO:            pyLDAvis: Not installed
2023-01-08 21:48:36,570:INFO:              gensim: Not installed
2023-01-08 21:48:36,570:INFO:               spacy: Not installed
2023-01-08 21:48:36,570:INFO:           wordcloud: Not installed
2023-01-08 21:48:36,570:INFO:            textblob: Not installed
2023-01-08 21:48:36,570:INFO:               fugue: Not installed
2023-01-08 21:48:36,570:INFO:           streamlit: 1.16.0
2023-01-08 21:48:36,570:INFO:             prophet: Not installed
2023-01-08 21:48:36,570:INFO:None
2023-01-08 21:48:36,571:INFO:Set up data.
2023-01-08 21:48:36,581:INFO:Set up train/test split.
2023-01-08 21:48:36,591:INFO:Set up index.
2023-01-08 21:48:36,591:INFO:Set up folding strategy.
2023-01-08 21:48:36,591:INFO:Assigning column types.
2023-01-08 21:48:36,598:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 21:48:36,680:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:48:36,680:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:48:36,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:36,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:36,764:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:48:36,768:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:48:36,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:36,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:36,800:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 21:48:36,852:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:48:36,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:36,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:36,925:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:48:36,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:36,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:36,952:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 21:48:37,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:37,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:37,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:37,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:37,112:INFO:Preparing preprocessing pipeline...
2023-01-08 21:48:37,112:INFO:Set up label encoding.
2023-01-08 21:48:37,112:INFO:Set up simple imputation.
2023-01-08 21:48:37,160:INFO:Finished creating preprocessing pipeline.
2023-01-08 21:48:37,160:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 21:48:37,160:INFO:Creating final display dataframe.
2023-01-08 21:48:37,488:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5758
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               b044
2023-01-08 21:48:37,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:37,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:37,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:37,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:48:37,712:INFO:setup() successfully completed in 1.15s...............
2023-01-08 21:48:37,716:INFO:Initializing compare_models()
2023-01-08 21:48:37,716:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 21:48:37,716:INFO:Checking exceptions
2023-01-08 21:48:37,716:INFO:Preparing display monitor
2023-01-08 21:48:37,720:INFO:Initializing Logistic Regression
2023-01-08 21:48:37,720:INFO:Total runtime is 0.0 minutes
2023-01-08 21:48:37,720:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:37,724:INFO:Initializing create_model()
2023-01-08 21:48:37,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:37,724:INFO:Checking exceptions
2023-01-08 21:48:37,724:INFO:Importing libraries
2023-01-08 21:48:37,724:INFO:Copying training dataset
2023-01-08 21:48:37,728:INFO:Defining folds
2023-01-08 21:48:37,728:INFO:Declaring metric variables
2023-01-08 21:48:37,728:INFO:Importing untrained model
2023-01-08 21:48:37,728:INFO:Logistic Regression Imported successfully
2023-01-08 21:48:37,728:INFO:Starting cross validation
2023-01-08 21:48:37,732:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:38,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,092:INFO:Calculating mean and std
2023-01-08 21:48:38,096:INFO:Creating metrics dataframe
2023-01-08 21:48:38,100:INFO:Uploading results into container
2023-01-08 21:48:38,100:INFO:Uploading model into container now
2023-01-08 21:48:38,100:INFO:_master_model_container: 1
2023-01-08 21:48:38,100:INFO:_display_container: 2
2023-01-08 21:48:38,100:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5758, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 21:48:38,100:INFO:create_model() successfully completed......................................
2023-01-08 21:48:38,232:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:38,232:INFO:Creating metrics dataframe
2023-01-08 21:48:38,240:INFO:Initializing K Neighbors Classifier
2023-01-08 21:48:38,240:INFO:Total runtime is 0.008654542764027913 minutes
2023-01-08 21:48:38,240:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:38,240:INFO:Initializing create_model()
2023-01-08 21:48:38,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:38,240:INFO:Checking exceptions
2023-01-08 21:48:38,240:INFO:Importing libraries
2023-01-08 21:48:38,240:INFO:Copying training dataset
2023-01-08 21:48:38,244:INFO:Defining folds
2023-01-08 21:48:38,244:INFO:Declaring metric variables
2023-01-08 21:48:38,244:INFO:Importing untrained model
2023-01-08 21:48:38,244:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:48:38,244:INFO:Starting cross validation
2023-01-08 21:48:38,248:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:38,371:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,375:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,379:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,387:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,387:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,387:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,391:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,391:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,399:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,399:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,403:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,403:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,403:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,423:INFO:Calculating mean and std
2023-01-08 21:48:38,423:INFO:Creating metrics dataframe
2023-01-08 21:48:38,429:INFO:Uploading results into container
2023-01-08 21:48:38,429:INFO:Uploading model into container now
2023-01-08 21:48:38,429:INFO:_master_model_container: 2
2023-01-08 21:48:38,429:INFO:_display_container: 2
2023-01-08 21:48:38,429:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:48:38,433:INFO:create_model() successfully completed......................................
2023-01-08 21:48:38,597:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:38,597:INFO:Creating metrics dataframe
2023-01-08 21:48:38,605:INFO:Initializing Naive Bayes
2023-01-08 21:48:38,605:INFO:Total runtime is 0.014742541313171386 minutes
2023-01-08 21:48:38,605:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:38,605:INFO:Initializing create_model()
2023-01-08 21:48:38,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:38,605:INFO:Checking exceptions
2023-01-08 21:48:38,605:INFO:Importing libraries
2023-01-08 21:48:38,605:INFO:Copying training dataset
2023-01-08 21:48:38,605:INFO:Defining folds
2023-01-08 21:48:38,605:INFO:Declaring metric variables
2023-01-08 21:48:38,609:INFO:Importing untrained model
2023-01-08 21:48:38,609:INFO:Naive Bayes Imported successfully
2023-01-08 21:48:38,609:INFO:Starting cross validation
2023-01-08 21:48:38,609:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:38,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,693:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,725:INFO:Calculating mean and std
2023-01-08 21:48:38,725:INFO:Creating metrics dataframe
2023-01-08 21:48:38,729:INFO:Uploading results into container
2023-01-08 21:48:38,733:INFO:Uploading model into container now
2023-01-08 21:48:38,733:INFO:_master_model_container: 3
2023-01-08 21:48:38,733:INFO:_display_container: 2
2023-01-08 21:48:38,733:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 21:48:38,733:INFO:create_model() successfully completed......................................
2023-01-08 21:48:38,853:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:38,853:INFO:Creating metrics dataframe
2023-01-08 21:48:38,861:INFO:Initializing Decision Tree Classifier
2023-01-08 21:48:38,861:INFO:Total runtime is 0.0190108060836792 minutes
2023-01-08 21:48:38,861:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:38,861:INFO:Initializing create_model()
2023-01-08 21:48:38,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:38,861:INFO:Checking exceptions
2023-01-08 21:48:38,861:INFO:Importing libraries
2023-01-08 21:48:38,861:INFO:Copying training dataset
2023-01-08 21:48:38,865:INFO:Defining folds
2023-01-08 21:48:38,865:INFO:Declaring metric variables
2023-01-08 21:48:38,869:INFO:Importing untrained model
2023-01-08 21:48:38,869:INFO:Decision Tree Classifier Imported successfully
2023-01-08 21:48:38,869:INFO:Starting cross validation
2023-01-08 21:48:38,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:38,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,941:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,945:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,949:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,953:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,953:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,953:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,953:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,957:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,957:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,957:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,957:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,965:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,965:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,965:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,965:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,965:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,965:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,969:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,969:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,973:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:38,981:INFO:Calculating mean and std
2023-01-08 21:48:38,981:INFO:Creating metrics dataframe
2023-01-08 21:48:38,985:INFO:Uploading results into container
2023-01-08 21:48:38,989:INFO:Uploading model into container now
2023-01-08 21:48:38,989:INFO:_master_model_container: 4
2023-01-08 21:48:38,989:INFO:_display_container: 2
2023-01-08 21:48:38,989:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5758, splitter='best')
2023-01-08 21:48:38,989:INFO:create_model() successfully completed......................................
2023-01-08 21:48:39,109:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:39,109:INFO:Creating metrics dataframe
2023-01-08 21:48:39,113:INFO:Initializing SVM - Linear Kernel
2023-01-08 21:48:39,113:INFO:Total runtime is 0.02320472002029419 minutes
2023-01-08 21:48:39,113:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:39,113:INFO:Initializing create_model()
2023-01-08 21:48:39,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:39,113:INFO:Checking exceptions
2023-01-08 21:48:39,113:INFO:Importing libraries
2023-01-08 21:48:39,113:INFO:Copying training dataset
2023-01-08 21:48:39,117:INFO:Defining folds
2023-01-08 21:48:39,117:INFO:Declaring metric variables
2023-01-08 21:48:39,117:INFO:Importing untrained model
2023-01-08 21:48:39,117:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 21:48:39,117:INFO:Starting cross validation
2023-01-08 21:48:39,117:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:39,180:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,180:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,184:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,184:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,184:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,188:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:39,188:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,188:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,192:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,192:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,192:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,192:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:39,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:39,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,204:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,204:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,204:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,204:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:39,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:39,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,212:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,212:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,212:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,216:INFO:Calculating mean and std
2023-01-08 21:48:39,216:INFO:Creating metrics dataframe
2023-01-08 21:48:39,220:INFO:Uploading results into container
2023-01-08 21:48:39,224:INFO:Uploading model into container now
2023-01-08 21:48:39,224:INFO:_master_model_container: 5
2023-01-08 21:48:39,224:INFO:_display_container: 2
2023-01-08 21:48:39,224:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5758, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 21:48:39,224:INFO:create_model() successfully completed......................................
2023-01-08 21:48:39,336:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:39,336:INFO:Creating metrics dataframe
2023-01-08 21:48:39,344:INFO:Initializing Ridge Classifier
2023-01-08 21:48:39,344:INFO:Total runtime is 0.02706569035847982 minutes
2023-01-08 21:48:39,344:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:39,344:INFO:Initializing create_model()
2023-01-08 21:48:39,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:39,344:INFO:Checking exceptions
2023-01-08 21:48:39,344:INFO:Importing libraries
2023-01-08 21:48:39,344:INFO:Copying training dataset
2023-01-08 21:48:39,344:INFO:Defining folds
2023-01-08 21:48:39,344:INFO:Declaring metric variables
2023-01-08 21:48:39,344:INFO:Importing untrained model
2023-01-08 21:48:39,348:INFO:Ridge Classifier Imported successfully
2023-01-08 21:48:39,348:INFO:Starting cross validation
2023-01-08 21:48:39,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:39,396:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,400:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,400:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,416:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,416:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,428:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,440:INFO:Calculating mean and std
2023-01-08 21:48:39,440:INFO:Creating metrics dataframe
2023-01-08 21:48:39,444:INFO:Uploading results into container
2023-01-08 21:48:39,444:INFO:Uploading model into container now
2023-01-08 21:48:39,444:INFO:_master_model_container: 6
2023-01-08 21:48:39,444:INFO:_display_container: 2
2023-01-08 21:48:39,444:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=5758, solver='auto', tol=0.001)
2023-01-08 21:48:39,444:INFO:create_model() successfully completed......................................
2023-01-08 21:48:39,544:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:39,544:INFO:Creating metrics dataframe
2023-01-08 21:48:39,548:INFO:Initializing Random Forest Classifier
2023-01-08 21:48:39,548:INFO:Total runtime is 0.030461152394612633 minutes
2023-01-08 21:48:39,548:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:39,548:INFO:Initializing create_model()
2023-01-08 21:48:39,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:39,548:INFO:Checking exceptions
2023-01-08 21:48:39,548:INFO:Importing libraries
2023-01-08 21:48:39,548:INFO:Copying training dataset
2023-01-08 21:48:39,552:INFO:Defining folds
2023-01-08 21:48:39,552:INFO:Declaring metric variables
2023-01-08 21:48:39,552:INFO:Importing untrained model
2023-01-08 21:48:39,552:INFO:Random Forest Classifier Imported successfully
2023-01-08 21:48:39,552:INFO:Starting cross validation
2023-01-08 21:48:39,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:39,932:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,932:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,936:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:39,992:INFO:Calculating mean and std
2023-01-08 21:48:39,992:INFO:Creating metrics dataframe
2023-01-08 21:48:40,000:INFO:Uploading results into container
2023-01-08 21:48:40,000:INFO:Uploading model into container now
2023-01-08 21:48:40,000:INFO:_master_model_container: 7
2023-01-08 21:48:40,000:INFO:_display_container: 2
2023-01-08 21:48:40,000:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5758, verbose=0, warm_start=False)
2023-01-08 21:48:40,000:INFO:create_model() successfully completed......................................
2023-01-08 21:48:40,138:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:40,138:INFO:Creating metrics dataframe
2023-01-08 21:48:40,142:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 21:48:40,142:INFO:Total runtime is 0.040366733074188234 minutes
2023-01-08 21:48:40,142:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:40,142:INFO:Initializing create_model()
2023-01-08 21:48:40,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:40,142:INFO:Checking exceptions
2023-01-08 21:48:40,142:INFO:Importing libraries
2023-01-08 21:48:40,142:INFO:Copying training dataset
2023-01-08 21:48:40,146:INFO:Defining folds
2023-01-08 21:48:40,146:INFO:Declaring metric variables
2023-01-08 21:48:40,146:INFO:Importing untrained model
2023-01-08 21:48:40,146:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 21:48:40,146:INFO:Starting cross validation
2023-01-08 21:48:40,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:40,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,241:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,241:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,245:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,245:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,245:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,249:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,255:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,259:INFO:Calculating mean and std
2023-01-08 21:48:40,259:INFO:Creating metrics dataframe
2023-01-08 21:48:40,263:INFO:Uploading results into container
2023-01-08 21:48:40,263:INFO:Uploading model into container now
2023-01-08 21:48:40,263:INFO:_master_model_container: 8
2023-01-08 21:48:40,263:INFO:_display_container: 2
2023-01-08 21:48:40,263:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 21:48:40,263:INFO:create_model() successfully completed......................................
2023-01-08 21:48:40,379:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:40,379:INFO:Creating metrics dataframe
2023-01-08 21:48:40,383:INFO:Initializing Ada Boost Classifier
2023-01-08 21:48:40,383:INFO:Total runtime is 0.04437120358149211 minutes
2023-01-08 21:48:40,383:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:40,383:INFO:Initializing create_model()
2023-01-08 21:48:40,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:40,383:INFO:Checking exceptions
2023-01-08 21:48:40,383:INFO:Importing libraries
2023-01-08 21:48:40,383:INFO:Copying training dataset
2023-01-08 21:48:40,387:INFO:Defining folds
2023-01-08 21:48:40,387:INFO:Declaring metric variables
2023-01-08 21:48:40,387:INFO:Importing untrained model
2023-01-08 21:48:40,387:INFO:Ada Boost Classifier Imported successfully
2023-01-08 21:48:40,387:INFO:Starting cross validation
2023-01-08 21:48:40,391:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:40,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,598:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,598:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,598:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,598:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,614:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,618:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,618:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,618:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,618:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,618:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,626:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,626:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:40,630:INFO:Calculating mean and std
2023-01-08 21:48:40,630:INFO:Creating metrics dataframe
2023-01-08 21:48:40,634:INFO:Uploading results into container
2023-01-08 21:48:40,634:INFO:Uploading model into container now
2023-01-08 21:48:40,634:INFO:_master_model_container: 9
2023-01-08 21:48:40,634:INFO:_display_container: 2
2023-01-08 21:48:40,638:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5758)
2023-01-08 21:48:40,638:INFO:create_model() successfully completed......................................
2023-01-08 21:48:40,742:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:40,742:INFO:Creating metrics dataframe
2023-01-08 21:48:40,746:INFO:Initializing Gradient Boosting Classifier
2023-01-08 21:48:40,746:INFO:Total runtime is 0.05042174657185873 minutes
2023-01-08 21:48:40,746:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:40,746:INFO:Initializing create_model()
2023-01-08 21:48:40,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:40,746:INFO:Checking exceptions
2023-01-08 21:48:40,746:INFO:Importing libraries
2023-01-08 21:48:40,746:INFO:Copying training dataset
2023-01-08 21:48:40,750:INFO:Defining folds
2023-01-08 21:48:40,750:INFO:Declaring metric variables
2023-01-08 21:48:40,750:INFO:Importing untrained model
2023-01-08 21:48:40,750:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 21:48:40,750:INFO:Starting cross validation
2023-01-08 21:48:40,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:41,142:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,146:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,146:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,158:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,158:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,170:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,170:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,170:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,170:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,170:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,184:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,192:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,192:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,198:INFO:Calculating mean and std
2023-01-08 21:48:41,198:INFO:Creating metrics dataframe
2023-01-08 21:48:41,202:INFO:Uploading results into container
2023-01-08 21:48:41,202:INFO:Uploading model into container now
2023-01-08 21:48:41,202:INFO:_master_model_container: 10
2023-01-08 21:48:41,202:INFO:_display_container: 2
2023-01-08 21:48:41,202:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5758, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 21:48:41,202:INFO:create_model() successfully completed......................................
2023-01-08 21:48:41,326:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:41,326:INFO:Creating metrics dataframe
2023-01-08 21:48:41,334:INFO:Initializing Linear Discriminant Analysis
2023-01-08 21:48:41,334:INFO:Total runtime is 0.060223909219106045 minutes
2023-01-08 21:48:41,334:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:41,334:INFO:Initializing create_model()
2023-01-08 21:48:41,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:41,334:INFO:Checking exceptions
2023-01-08 21:48:41,334:INFO:Importing libraries
2023-01-08 21:48:41,334:INFO:Copying training dataset
2023-01-08 21:48:41,338:INFO:Defining folds
2023-01-08 21:48:41,338:INFO:Declaring metric variables
2023-01-08 21:48:41,338:INFO:Importing untrained model
2023-01-08 21:48:41,338:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:48:41,338:INFO:Starting cross validation
2023-01-08 21:48:41,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:41,410:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,410:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,410:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,410:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,414:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,414:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,414:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,414:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,414:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,422:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,446:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,448:INFO:Calculating mean and std
2023-01-08 21:48:41,450:INFO:Creating metrics dataframe
2023-01-08 21:48:41,454:INFO:Uploading results into container
2023-01-08 21:48:41,454:INFO:Uploading model into container now
2023-01-08 21:48:41,454:INFO:_master_model_container: 11
2023-01-08 21:48:41,454:INFO:_display_container: 2
2023-01-08 21:48:41,454:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:48:41,454:INFO:create_model() successfully completed......................................
2023-01-08 21:48:41,556:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:41,556:INFO:Creating metrics dataframe
2023-01-08 21:48:41,562:INFO:Initializing Extra Trees Classifier
2023-01-08 21:48:41,562:INFO:Total runtime is 0.06402703126271567 minutes
2023-01-08 21:48:41,562:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:41,562:INFO:Initializing create_model()
2023-01-08 21:48:41,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:41,562:INFO:Checking exceptions
2023-01-08 21:48:41,562:INFO:Importing libraries
2023-01-08 21:48:41,562:INFO:Copying training dataset
2023-01-08 21:48:41,566:INFO:Defining folds
2023-01-08 21:48:41,566:INFO:Declaring metric variables
2023-01-08 21:48:41,566:INFO:Importing untrained model
2023-01-08 21:48:41,566:INFO:Extra Trees Classifier Imported successfully
2023-01-08 21:48:41,566:INFO:Starting cross validation
2023-01-08 21:48:41,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:41,890:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,890:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,894:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,894:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,894:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,894:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,894:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,894:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,906:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,922:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,922:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,922:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:41,934:INFO:Calculating mean and std
2023-01-08 21:48:41,938:INFO:Creating metrics dataframe
2023-01-08 21:48:41,942:INFO:Uploading results into container
2023-01-08 21:48:41,942:INFO:Uploading model into container now
2023-01-08 21:48:41,942:INFO:_master_model_container: 12
2023-01-08 21:48:41,942:INFO:_display_container: 2
2023-01-08 21:48:41,942:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5758, verbose=0, warm_start=False)
2023-01-08 21:48:41,942:INFO:create_model() successfully completed......................................
2023-01-08 21:48:42,064:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:42,064:INFO:Creating metrics dataframe
2023-01-08 21:48:42,068:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 21:48:42,068:INFO:Total runtime is 0.0724597175916036 minutes
2023-01-08 21:48:42,068:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:42,068:INFO:Initializing create_model()
2023-01-08 21:48:42,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:42,068:INFO:Checking exceptions
2023-01-08 21:48:42,068:INFO:Importing libraries
2023-01-08 21:48:42,068:INFO:Copying training dataset
2023-01-08 21:48:42,072:INFO:Defining folds
2023-01-08 21:48:42,072:INFO:Declaring metric variables
2023-01-08 21:48:42,072:INFO:Importing untrained model
2023-01-08 21:48:42,074:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 21:48:42,074:INFO:Starting cross validation
2023-01-08 21:48:42,075:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:42,193:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,197:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,197:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,201:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,201:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,201:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,209:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,233:INFO:Calculating mean and std
2023-01-08 21:48:42,237:INFO:Creating metrics dataframe
2023-01-08 21:48:42,241:INFO:Uploading results into container
2023-01-08 21:48:42,241:INFO:Uploading model into container now
2023-01-08 21:48:42,241:INFO:_master_model_container: 13
2023-01-08 21:48:42,241:INFO:_display_container: 2
2023-01-08 21:48:42,245:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5758, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 21:48:42,245:INFO:create_model() successfully completed......................................
2023-01-08 21:48:42,369:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:42,369:INFO:Creating metrics dataframe
2023-01-08 21:48:42,377:INFO:Initializing Dummy Classifier
2023-01-08 21:48:42,377:INFO:Total runtime is 0.07760459979375205 minutes
2023-01-08 21:48:42,377:INFO:SubProcess create_model() called ==================================
2023-01-08 21:48:42,377:INFO:Initializing create_model()
2023-01-08 21:48:42,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002565281CBB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:42,377:INFO:Checking exceptions
2023-01-08 21:48:42,377:INFO:Importing libraries
2023-01-08 21:48:42,377:INFO:Copying training dataset
2023-01-08 21:48:42,381:INFO:Defining folds
2023-01-08 21:48:42,381:INFO:Declaring metric variables
2023-01-08 21:48:42,381:INFO:Importing untrained model
2023-01-08 21:48:42,381:INFO:Dummy Classifier Imported successfully
2023-01-08 21:48:42,381:INFO:Starting cross validation
2023-01-08 21:48:42,381:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:48:42,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:42,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:42,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:42,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:42,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,464:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,464:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,464:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:42,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:42,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:42,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,476:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,476:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,476:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:42,476:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,476:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,476:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:42,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:48:42,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:48:42,484:INFO:Calculating mean and std
2023-01-08 21:48:42,484:INFO:Creating metrics dataframe
2023-01-08 21:48:42,488:INFO:Uploading results into container
2023-01-08 21:48:42,488:INFO:Uploading model into container now
2023-01-08 21:48:42,492:INFO:_master_model_container: 14
2023-01-08 21:48:42,492:INFO:_display_container: 2
2023-01-08 21:48:42,492:INFO:DummyClassifier(constant=None, random_state=5758, strategy='prior')
2023-01-08 21:48:42,492:INFO:create_model() successfully completed......................................
2023-01-08 21:48:42,608:INFO:SubProcess create_model() end ==================================
2023-01-08 21:48:42,608:INFO:Creating metrics dataframe
2023-01-08 21:48:42,616:INFO:Initializing create_model()
2023-01-08 21:48:42,616:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256530F5190>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:48:42,616:INFO:Checking exceptions
2023-01-08 21:48:42,616:INFO:Importing libraries
2023-01-08 21:48:42,616:INFO:Copying training dataset
2023-01-08 21:48:42,620:INFO:Defining folds
2023-01-08 21:48:42,620:INFO:Declaring metric variables
2023-01-08 21:48:42,620:INFO:Importing untrained model
2023-01-08 21:48:42,620:INFO:Declaring custom model
2023-01-08 21:48:42,620:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:48:42,620:INFO:Cross validation set to False
2023-01-08 21:48:42,620:INFO:Fitting Model
2023-01-08 21:48:42,660:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:48:42,660:INFO:create_model() successfully completed......................................
2023-01-08 21:48:42,825:INFO:_master_model_container: 14
2023-01-08 21:48:42,825:INFO:_display_container: 2
2023-01-08 21:48:42,825:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:48:42,825:INFO:compare_models() successfully completed......................................
2023-01-08 21:50:45,402:INFO:PyCaret ClassificationExperiment
2023-01-08 21:50:45,402:INFO:Logging name: clf-default-name
2023-01-08 21:50:45,402:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 21:50:45,402:INFO:version 3.0.0.rc6
2023-01-08 21:50:45,402:INFO:Initializing setup()
2023-01-08 21:50:45,402:INFO:self.USI: a446
2023-01-08 21:50:45,402:INFO:self._variable_keys: {'X_train', 'fold_shuffle_param', 'y', 'fix_imbalance', 'logging_param', 'gpu_n_jobs_param', 'target_param', 'seed', 'exp_id', 'log_plots_param', 'y_train', 'idx', 'X_test', 'fold_generator', 'exp_name_log', 'is_multiclass', 'html_param', 'n_jobs_param', 'y_test', 'gpu_param', 'memory', 'USI', 'data', '_available_plots', 'X', '_ml_usecase', 'pipeline', 'fold_groups_param'}
2023-01-08 21:50:45,402:INFO:Checking environment
2023-01-08 21:50:45,402:INFO:python_version: 3.9.15
2023-01-08 21:50:45,402:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 21:50:45,402:INFO:machine: AMD64
2023-01-08 21:50:45,402:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 21:50:45,402:INFO:Memory: svmem(total=17010110464, available=2631340032, percent=84.5, used=14378770432, free=2631340032)
2023-01-08 21:50:45,402:INFO:Physical Core: 6
2023-01-08 21:50:45,402:INFO:Logical Core: 12
2023-01-08 21:50:45,402:INFO:Checking libraries
2023-01-08 21:50:45,402:INFO:System:
2023-01-08 21:50:45,402:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 21:50:45,402:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 21:50:45,402:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 21:50:45,402:INFO:PyCaret required dependencies:
2023-01-08 21:50:45,402:INFO:                 pip: 22.3.1
2023-01-08 21:50:45,402:INFO:          setuptools: 65.6.3
2023-01-08 21:50:45,402:INFO:             pycaret: 3.0.0rc6
2023-01-08 21:50:45,402:INFO:             IPython: 8.8.0
2023-01-08 21:50:45,402:INFO:          ipywidgets: 8.0.4
2023-01-08 21:50:45,402:INFO:                tqdm: 4.64.1
2023-01-08 21:50:45,402:INFO:               numpy: 1.22.4
2023-01-08 21:50:45,402:INFO:              pandas: 1.5.2
2023-01-08 21:50:45,402:INFO:              jinja2: 3.1.2
2023-01-08 21:50:45,402:INFO:               scipy: 1.9.3
2023-01-08 21:50:45,402:INFO:              joblib: 1.2.0
2023-01-08 21:50:45,402:INFO:             sklearn: 1.1.3
2023-01-08 21:50:45,402:INFO:                pyod: 1.0.7
2023-01-08 21:50:45,406:INFO:            imblearn: 0.10.1
2023-01-08 21:50:45,406:INFO:   category_encoders: 2.5.1.post0
2023-01-08 21:50:45,406:INFO:            lightgbm: 3.3.4
2023-01-08 21:50:45,406:INFO:               numba: 0.56.4
2023-01-08 21:50:45,406:INFO:            requests: 2.28.1
2023-01-08 21:50:45,406:INFO:          matplotlib: 3.6.2
2023-01-08 21:50:45,406:INFO:          scikitplot: 0.3.7
2023-01-08 21:50:45,406:INFO:         yellowbrick: 1.5
2023-01-08 21:50:45,406:INFO:              plotly: 5.11.0
2023-01-08 21:50:45,406:INFO:             kaleido: 0.2.1
2023-01-08 21:50:45,406:INFO:         statsmodels: 0.13.5
2023-01-08 21:50:45,406:INFO:              sktime: 0.14.1
2023-01-08 21:50:45,406:INFO:               tbats: 1.1.2
2023-01-08 21:50:45,406:INFO:            pmdarima: 2.0.2
2023-01-08 21:50:45,406:INFO:              psutil: 5.9.0
2023-01-08 21:50:45,406:INFO:PyCaret optional dependencies:
2023-01-08 21:50:45,406:INFO:                shap: Not installed
2023-01-08 21:50:45,406:INFO:           interpret: Not installed
2023-01-08 21:50:45,406:INFO:                umap: Not installed
2023-01-08 21:50:45,406:INFO:    pandas_profiling: 3.6.2
2023-01-08 21:50:45,406:INFO:  explainerdashboard: Not installed
2023-01-08 21:50:45,406:INFO:             autoviz: Not installed
2023-01-08 21:50:45,406:INFO:           fairlearn: Not installed
2023-01-08 21:50:45,406:INFO:             xgboost: Not installed
2023-01-08 21:50:45,406:INFO:            catboost: Not installed
2023-01-08 21:50:45,406:INFO:              kmodes: Not installed
2023-01-08 21:50:45,406:INFO:             mlxtend: Not installed
2023-01-08 21:50:45,406:INFO:       statsforecast: Not installed
2023-01-08 21:50:45,406:INFO:        tune_sklearn: Not installed
2023-01-08 21:50:45,406:INFO:                 ray: Not installed
2023-01-08 21:50:45,406:INFO:            hyperopt: Not installed
2023-01-08 21:50:45,406:INFO:              optuna: Not installed
2023-01-08 21:50:45,406:INFO:               skopt: Not installed
2023-01-08 21:50:45,406:INFO:              mlflow: Not installed
2023-01-08 21:50:45,406:INFO:              gradio: Not installed
2023-01-08 21:50:45,406:INFO:             fastapi: Not installed
2023-01-08 21:50:45,406:INFO:             uvicorn: Not installed
2023-01-08 21:50:45,406:INFO:              m2cgen: Not installed
2023-01-08 21:50:45,406:INFO:           evidently: Not installed
2023-01-08 21:50:45,406:INFO:                nltk: Not installed
2023-01-08 21:50:45,410:INFO:            pyLDAvis: Not installed
2023-01-08 21:50:45,410:INFO:              gensim: Not installed
2023-01-08 21:50:45,410:INFO:               spacy: Not installed
2023-01-08 21:50:45,410:INFO:           wordcloud: Not installed
2023-01-08 21:50:45,410:INFO:            textblob: Not installed
2023-01-08 21:50:45,410:INFO:               fugue: Not installed
2023-01-08 21:50:45,410:INFO:           streamlit: 1.16.0
2023-01-08 21:50:45,410:INFO:             prophet: Not installed
2023-01-08 21:50:45,410:INFO:None
2023-01-08 21:50:45,410:INFO:Set up data.
2023-01-08 21:50:45,418:INFO:Set up train/test split.
2023-01-08 21:50:45,422:INFO:Set up index.
2023-01-08 21:50:45,426:INFO:Set up folding strategy.
2023-01-08 21:50:45,426:INFO:Assigning column types.
2023-01-08 21:50:45,428:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 21:50:45,516:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:50:45,516:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:50:45,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,614:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:50:45,614:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:50:45,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,653:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 21:50:45,700:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:50:45,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,777:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:50:45,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,805:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 21:50:45,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:45,939:INFO:Preparing preprocessing pipeline...
2023-01-08 21:50:45,939:INFO:Set up label encoding.
2023-01-08 21:50:45,939:INFO:Set up simple imputation.
2023-01-08 21:50:45,983:INFO:Finished creating preprocessing pipeline.
2023-01-08 21:50:45,987:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 21:50:45,987:INFO:Creating final display dataframe.
2023-01-08 21:50:46,264:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               2047
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               a446
2023-01-08 21:50:46,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:46,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:46,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:46,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:50:46,438:INFO:setup() successfully completed in 1.04s...............
2023-01-08 21:50:46,442:INFO:Initializing compare_models()
2023-01-08 21:50:46,442:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 21:50:46,442:INFO:Checking exceptions
2023-01-08 21:50:46,442:INFO:Preparing display monitor
2023-01-08 21:50:46,448:INFO:Initializing Logistic Regression
2023-01-08 21:50:46,448:INFO:Total runtime is 0.0 minutes
2023-01-08 21:50:46,448:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:46,448:INFO:Initializing create_model()
2023-01-08 21:50:46,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:46,448:INFO:Checking exceptions
2023-01-08 21:50:46,448:INFO:Importing libraries
2023-01-08 21:50:46,448:INFO:Copying training dataset
2023-01-08 21:50:46,452:INFO:Defining folds
2023-01-08 21:50:46,452:INFO:Declaring metric variables
2023-01-08 21:50:46,452:INFO:Importing untrained model
2023-01-08 21:50:46,452:INFO:Logistic Regression Imported successfully
2023-01-08 21:50:46,452:INFO:Starting cross validation
2023-01-08 21:50:46,456:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:46,844:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,852:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,852:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,852:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,852:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,860:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,876:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,876:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,876:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,880:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,880:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,880:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,880:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,880:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,880:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,892:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,896:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,896:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,900:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,900:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,904:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:46,904:INFO:Calculating mean and std
2023-01-08 21:50:46,904:INFO:Creating metrics dataframe
2023-01-08 21:50:46,908:INFO:Uploading results into container
2023-01-08 21:50:46,912:INFO:Uploading model into container now
2023-01-08 21:50:46,912:INFO:_master_model_container: 1
2023-01-08 21:50:46,912:INFO:_display_container: 2
2023-01-08 21:50:46,912:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2047, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 21:50:46,912:INFO:create_model() successfully completed......................................
2023-01-08 21:50:47,024:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:47,024:INFO:Creating metrics dataframe
2023-01-08 21:50:47,028:INFO:Initializing K Neighbors Classifier
2023-01-08 21:50:47,028:INFO:Total runtime is 0.009664738178253173 minutes
2023-01-08 21:50:47,032:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:47,032:INFO:Initializing create_model()
2023-01-08 21:50:47,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:47,032:INFO:Checking exceptions
2023-01-08 21:50:47,032:INFO:Importing libraries
2023-01-08 21:50:47,032:INFO:Copying training dataset
2023-01-08 21:50:47,032:INFO:Defining folds
2023-01-08 21:50:47,032:INFO:Declaring metric variables
2023-01-08 21:50:47,032:INFO:Importing untrained model
2023-01-08 21:50:47,036:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:50:47,036:INFO:Starting cross validation
2023-01-08 21:50:47,036:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:47,191:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,195:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,195:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,195:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,207:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,207:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,211:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,219:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,219:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,219:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,223:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,223:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,223:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,227:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,227:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,227:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,227:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,231:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,231:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,231:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,235:INFO:Calculating mean and std
2023-01-08 21:50:47,239:INFO:Creating metrics dataframe
2023-01-08 21:50:47,243:INFO:Uploading results into container
2023-01-08 21:50:47,243:INFO:Uploading model into container now
2023-01-08 21:50:47,243:INFO:_master_model_container: 2
2023-01-08 21:50:47,243:INFO:_display_container: 2
2023-01-08 21:50:47,243:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:50:47,243:INFO:create_model() successfully completed......................................
2023-01-08 21:50:47,369:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:47,369:INFO:Creating metrics dataframe
2023-01-08 21:50:47,377:INFO:Initializing Naive Bayes
2023-01-08 21:50:47,377:INFO:Total runtime is 0.015488406022389729 minutes
2023-01-08 21:50:47,377:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:47,377:INFO:Initializing create_model()
2023-01-08 21:50:47,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:47,377:INFO:Checking exceptions
2023-01-08 21:50:47,377:INFO:Importing libraries
2023-01-08 21:50:47,377:INFO:Copying training dataset
2023-01-08 21:50:47,381:INFO:Defining folds
2023-01-08 21:50:47,381:INFO:Declaring metric variables
2023-01-08 21:50:47,381:INFO:Importing untrained model
2023-01-08 21:50:47,381:INFO:Naive Bayes Imported successfully
2023-01-08 21:50:47,381:INFO:Starting cross validation
2023-01-08 21:50:47,381:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:47,445:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,457:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,461:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,461:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,465:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,465:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,465:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,469:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,469:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,473:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,473:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,473:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,485:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,485:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,489:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,489:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,493:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,493:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,493:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,497:INFO:Calculating mean and std
2023-01-08 21:50:47,501:INFO:Creating metrics dataframe
2023-01-08 21:50:47,505:INFO:Uploading results into container
2023-01-08 21:50:47,505:INFO:Uploading model into container now
2023-01-08 21:50:47,505:INFO:_master_model_container: 3
2023-01-08 21:50:47,505:INFO:_display_container: 2
2023-01-08 21:50:47,505:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 21:50:47,505:INFO:create_model() successfully completed......................................
2023-01-08 21:50:47,641:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:47,641:INFO:Creating metrics dataframe
2023-01-08 21:50:47,645:INFO:Initializing Decision Tree Classifier
2023-01-08 21:50:47,645:INFO:Total runtime is 0.01994986534118652 minutes
2023-01-08 21:50:47,645:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:47,645:INFO:Initializing create_model()
2023-01-08 21:50:47,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:47,645:INFO:Checking exceptions
2023-01-08 21:50:47,645:INFO:Importing libraries
2023-01-08 21:50:47,645:INFO:Copying training dataset
2023-01-08 21:50:47,649:INFO:Defining folds
2023-01-08 21:50:47,649:INFO:Declaring metric variables
2023-01-08 21:50:47,649:INFO:Importing untrained model
2023-01-08 21:50:47,649:INFO:Decision Tree Classifier Imported successfully
2023-01-08 21:50:47,649:INFO:Starting cross validation
2023-01-08 21:50:47,649:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:47,737:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,737:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,737:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,757:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,757:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,765:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,765:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,765:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,765:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,773:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,777:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,781:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,781:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:47,785:INFO:Calculating mean and std
2023-01-08 21:50:47,785:INFO:Creating metrics dataframe
2023-01-08 21:50:47,789:INFO:Uploading results into container
2023-01-08 21:50:47,793:INFO:Uploading model into container now
2023-01-08 21:50:47,793:INFO:_master_model_container: 4
2023-01-08 21:50:47,793:INFO:_display_container: 2
2023-01-08 21:50:47,793:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2047, splitter='best')
2023-01-08 21:50:47,793:INFO:create_model() successfully completed......................................
2023-01-08 21:50:47,916:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:47,916:INFO:Creating metrics dataframe
2023-01-08 21:50:47,924:INFO:Initializing SVM - Linear Kernel
2023-01-08 21:50:47,924:INFO:Total runtime is 0.02460981210072835 minutes
2023-01-08 21:50:47,924:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:47,924:INFO:Initializing create_model()
2023-01-08 21:50:47,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:47,924:INFO:Checking exceptions
2023-01-08 21:50:47,924:INFO:Importing libraries
2023-01-08 21:50:47,924:INFO:Copying training dataset
2023-01-08 21:50:47,928:INFO:Defining folds
2023-01-08 21:50:47,928:INFO:Declaring metric variables
2023-01-08 21:50:47,928:INFO:Importing untrained model
2023-01-08 21:50:47,928:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 21:50:47,928:INFO:Starting cross validation
2023-01-08 21:50:47,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:48,004:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:48,012:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,012:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,012:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,012:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,016:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:48,016:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,016:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,016:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:48,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,028:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:48,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,052:INFO:Calculating mean and std
2023-01-08 21:50:48,056:INFO:Creating metrics dataframe
2023-01-08 21:50:48,060:INFO:Uploading results into container
2023-01-08 21:50:48,060:INFO:Uploading model into container now
2023-01-08 21:50:48,060:INFO:_master_model_container: 5
2023-01-08 21:50:48,060:INFO:_display_container: 2
2023-01-08 21:50:48,060:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2047, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 21:50:48,064:INFO:create_model() successfully completed......................................
2023-01-08 21:50:48,176:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:48,176:INFO:Creating metrics dataframe
2023-01-08 21:50:48,180:INFO:Initializing Ridge Classifier
2023-01-08 21:50:48,180:INFO:Total runtime is 0.028871250152587888 minutes
2023-01-08 21:50:48,180:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:48,180:INFO:Initializing create_model()
2023-01-08 21:50:48,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:48,180:INFO:Checking exceptions
2023-01-08 21:50:48,180:INFO:Importing libraries
2023-01-08 21:50:48,180:INFO:Copying training dataset
2023-01-08 21:50:48,184:INFO:Defining folds
2023-01-08 21:50:48,184:INFO:Declaring metric variables
2023-01-08 21:50:48,184:INFO:Importing untrained model
2023-01-08 21:50:48,184:INFO:Ridge Classifier Imported successfully
2023-01-08 21:50:48,184:INFO:Starting cross validation
2023-01-08 21:50:48,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:48,236:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,240:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,240:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,244:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,244:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,244:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,244:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,272:INFO:Calculating mean and std
2023-01-08 21:50:48,272:INFO:Creating metrics dataframe
2023-01-08 21:50:48,276:INFO:Uploading results into container
2023-01-08 21:50:48,276:INFO:Uploading model into container now
2023-01-08 21:50:48,276:INFO:_master_model_container: 6
2023-01-08 21:50:48,276:INFO:_display_container: 2
2023-01-08 21:50:48,276:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=2047, solver='auto', tol=0.001)
2023-01-08 21:50:48,276:INFO:create_model() successfully completed......................................
2023-01-08 21:50:48,380:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:48,380:INFO:Creating metrics dataframe
2023-01-08 21:50:48,388:INFO:Initializing Random Forest Classifier
2023-01-08 21:50:48,388:INFO:Total runtime is 0.032333278656005854 minutes
2023-01-08 21:50:48,388:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:48,388:INFO:Initializing create_model()
2023-01-08 21:50:48,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:48,388:INFO:Checking exceptions
2023-01-08 21:50:48,388:INFO:Importing libraries
2023-01-08 21:50:48,388:INFO:Copying training dataset
2023-01-08 21:50:48,392:INFO:Defining folds
2023-01-08 21:50:48,392:INFO:Declaring metric variables
2023-01-08 21:50:48,392:INFO:Importing untrained model
2023-01-08 21:50:48,392:INFO:Random Forest Classifier Imported successfully
2023-01-08 21:50:48,392:INFO:Starting cross validation
2023-01-08 21:50:48,392:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:48,752:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,756:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,756:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,756:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,756:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,756:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,760:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,760:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,760:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,760:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,760:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,768:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,768:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,776:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,776:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,780:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,784:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,800:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:48,804:INFO:Calculating mean and std
2023-01-08 21:50:48,804:INFO:Creating metrics dataframe
2023-01-08 21:50:48,808:INFO:Uploading results into container
2023-01-08 21:50:48,812:INFO:Uploading model into container now
2023-01-08 21:50:48,812:INFO:_master_model_container: 7
2023-01-08 21:50:48,812:INFO:_display_container: 2
2023-01-08 21:50:48,812:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2047, verbose=0, warm_start=False)
2023-01-08 21:50:48,812:INFO:create_model() successfully completed......................................
2023-01-08 21:50:48,956:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:48,956:INFO:Creating metrics dataframe
2023-01-08 21:50:48,960:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 21:50:48,960:INFO:Total runtime is 0.04186758200327555 minutes
2023-01-08 21:50:48,960:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:48,960:INFO:Initializing create_model()
2023-01-08 21:50:48,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:48,960:INFO:Checking exceptions
2023-01-08 21:50:48,960:INFO:Importing libraries
2023-01-08 21:50:48,960:INFO:Copying training dataset
2023-01-08 21:50:48,964:INFO:Defining folds
2023-01-08 21:50:48,964:INFO:Declaring metric variables
2023-01-08 21:50:48,964:INFO:Importing untrained model
2023-01-08 21:50:48,964:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 21:50:48,964:INFO:Starting cross validation
2023-01-08 21:50:48,964:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:49,028:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,028:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,028:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,076:INFO:Calculating mean and std
2023-01-08 21:50:49,076:INFO:Creating metrics dataframe
2023-01-08 21:50:49,080:INFO:Uploading results into container
2023-01-08 21:50:49,080:INFO:Uploading model into container now
2023-01-08 21:50:49,080:INFO:_master_model_container: 8
2023-01-08 21:50:49,080:INFO:_display_container: 2
2023-01-08 21:50:49,080:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 21:50:49,080:INFO:create_model() successfully completed......................................
2023-01-08 21:50:49,200:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:49,200:INFO:Creating metrics dataframe
2023-01-08 21:50:49,208:INFO:Initializing Ada Boost Classifier
2023-01-08 21:50:49,208:INFO:Total runtime is 0.045995457967122386 minutes
2023-01-08 21:50:49,208:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:49,208:INFO:Initializing create_model()
2023-01-08 21:50:49,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:49,208:INFO:Checking exceptions
2023-01-08 21:50:49,208:INFO:Importing libraries
2023-01-08 21:50:49,208:INFO:Copying training dataset
2023-01-08 21:50:49,212:INFO:Defining folds
2023-01-08 21:50:49,212:INFO:Declaring metric variables
2023-01-08 21:50:49,212:INFO:Importing untrained model
2023-01-08 21:50:49,212:INFO:Ada Boost Classifier Imported successfully
2023-01-08 21:50:49,212:INFO:Starting cross validation
2023-01-08 21:50:49,212:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:49,394:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,400:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,422:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,446:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,446:INFO:Calculating mean and std
2023-01-08 21:50:49,450:INFO:Creating metrics dataframe
2023-01-08 21:50:49,450:INFO:Uploading results into container
2023-01-08 21:50:49,454:INFO:Uploading model into container now
2023-01-08 21:50:49,454:INFO:_master_model_container: 9
2023-01-08 21:50:49,454:INFO:_display_container: 2
2023-01-08 21:50:49,454:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2047)
2023-01-08 21:50:49,454:INFO:create_model() successfully completed......................................
2023-01-08 21:50:49,556:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:49,556:INFO:Creating metrics dataframe
2023-01-08 21:50:49,563:INFO:Initializing Gradient Boosting Classifier
2023-01-08 21:50:49,563:INFO:Total runtime is 0.051911918322245273 minutes
2023-01-08 21:50:49,563:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:49,563:INFO:Initializing create_model()
2023-01-08 21:50:49,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:49,563:INFO:Checking exceptions
2023-01-08 21:50:49,563:INFO:Importing libraries
2023-01-08 21:50:49,563:INFO:Copying training dataset
2023-01-08 21:50:49,567:INFO:Defining folds
2023-01-08 21:50:49,567:INFO:Declaring metric variables
2023-01-08 21:50:49,567:INFO:Importing untrained model
2023-01-08 21:50:49,567:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 21:50:49,567:INFO:Starting cross validation
2023-01-08 21:50:49,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:49,950:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,954:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,954:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,958:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,962:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,962:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,970:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,970:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,996:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,998:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,998:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:49,998:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,007:INFO:Calculating mean and std
2023-01-08 21:50:50,007:INFO:Creating metrics dataframe
2023-01-08 21:50:50,013:INFO:Uploading results into container
2023-01-08 21:50:50,013:INFO:Uploading model into container now
2023-01-08 21:50:50,013:INFO:_master_model_container: 10
2023-01-08 21:50:50,013:INFO:_display_container: 2
2023-01-08 21:50:50,013:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2047, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 21:50:50,013:INFO:create_model() successfully completed......................................
2023-01-08 21:50:50,122:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:50,122:INFO:Creating metrics dataframe
2023-01-08 21:50:50,126:INFO:Initializing Linear Discriminant Analysis
2023-01-08 21:50:50,126:INFO:Total runtime is 0.06130025386810302 minutes
2023-01-08 21:50:50,126:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:50,126:INFO:Initializing create_model()
2023-01-08 21:50:50,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:50,130:INFO:Checking exceptions
2023-01-08 21:50:50,130:INFO:Importing libraries
2023-01-08 21:50:50,130:INFO:Copying training dataset
2023-01-08 21:50:50,130:INFO:Defining folds
2023-01-08 21:50:50,134:INFO:Declaring metric variables
2023-01-08 21:50:50,134:INFO:Importing untrained model
2023-01-08 21:50:50,134:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:50:50,134:INFO:Starting cross validation
2023-01-08 21:50:50,134:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:50,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,210:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,210:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,210:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,241:INFO:Calculating mean and std
2023-01-08 21:50:50,241:INFO:Creating metrics dataframe
2023-01-08 21:50:50,245:INFO:Uploading results into container
2023-01-08 21:50:50,245:INFO:Uploading model into container now
2023-01-08 21:50:50,245:INFO:_master_model_container: 11
2023-01-08 21:50:50,245:INFO:_display_container: 2
2023-01-08 21:50:50,245:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:50:50,249:INFO:create_model() successfully completed......................................
2023-01-08 21:50:50,361:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:50,361:INFO:Creating metrics dataframe
2023-01-08 21:50:50,369:INFO:Initializing Extra Trees Classifier
2023-01-08 21:50:50,369:INFO:Total runtime is 0.0653534968694051 minutes
2023-01-08 21:50:50,369:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:50,369:INFO:Initializing create_model()
2023-01-08 21:50:50,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:50,369:INFO:Checking exceptions
2023-01-08 21:50:50,369:INFO:Importing libraries
2023-01-08 21:50:50,369:INFO:Copying training dataset
2023-01-08 21:50:50,373:INFO:Defining folds
2023-01-08 21:50:50,373:INFO:Declaring metric variables
2023-01-08 21:50:50,373:INFO:Importing untrained model
2023-01-08 21:50:50,373:INFO:Extra Trees Classifier Imported successfully
2023-01-08 21:50:50,373:INFO:Starting cross validation
2023-01-08 21:50:50,373:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:50,669:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,673:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,673:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,693:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,693:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,693:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,729:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,729:INFO:Calculating mean and std
2023-01-08 21:50:50,729:INFO:Creating metrics dataframe
2023-01-08 21:50:50,737:INFO:Uploading results into container
2023-01-08 21:50:50,737:INFO:Uploading model into container now
2023-01-08 21:50:50,737:INFO:_master_model_container: 12
2023-01-08 21:50:50,737:INFO:_display_container: 2
2023-01-08 21:50:50,737:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2047, verbose=0, warm_start=False)
2023-01-08 21:50:50,737:INFO:create_model() successfully completed......................................
2023-01-08 21:50:50,850:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:50,850:INFO:Creating metrics dataframe
2023-01-08 21:50:50,854:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 21:50:50,854:INFO:Total runtime is 0.07343602577845254 minutes
2023-01-08 21:50:50,854:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:50,854:INFO:Initializing create_model()
2023-01-08 21:50:50,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:50,854:INFO:Checking exceptions
2023-01-08 21:50:50,854:INFO:Importing libraries
2023-01-08 21:50:50,854:INFO:Copying training dataset
2023-01-08 21:50:50,858:INFO:Defining folds
2023-01-08 21:50:50,858:INFO:Declaring metric variables
2023-01-08 21:50:50,858:INFO:Importing untrained model
2023-01-08 21:50:50,858:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 21:50:50,858:INFO:Starting cross validation
2023-01-08 21:50:50,858:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:50,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,976:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,976:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,976:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:50,996:INFO:Calculating mean and std
2023-01-08 21:50:51,000:INFO:Creating metrics dataframe
2023-01-08 21:50:51,004:INFO:Uploading results into container
2023-01-08 21:50:51,004:INFO:Uploading model into container now
2023-01-08 21:50:51,004:INFO:_master_model_container: 13
2023-01-08 21:50:51,004:INFO:_display_container: 2
2023-01-08 21:50:51,004:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2047, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 21:50:51,004:INFO:create_model() successfully completed......................................
2023-01-08 21:50:51,108:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:51,108:INFO:Creating metrics dataframe
2023-01-08 21:50:51,112:INFO:Initializing Dummy Classifier
2023-01-08 21:50:51,112:INFO:Total runtime is 0.07774020036061603 minutes
2023-01-08 21:50:51,112:INFO:SubProcess create_model() called ==================================
2023-01-08 21:50:51,112:INFO:Initializing create_model()
2023-01-08 21:50:51,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025652D41B80>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:51,112:INFO:Checking exceptions
2023-01-08 21:50:51,112:INFO:Importing libraries
2023-01-08 21:50:51,112:INFO:Copying training dataset
2023-01-08 21:50:51,118:INFO:Defining folds
2023-01-08 21:50:51,118:INFO:Declaring metric variables
2023-01-08 21:50:51,118:INFO:Importing untrained model
2023-01-08 21:50:51,118:INFO:Dummy Classifier Imported successfully
2023-01-08 21:50:51,118:INFO:Starting cross validation
2023-01-08 21:50:51,118:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:50:51,178:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:51,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,186:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,186:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,186:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,186:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:51,186:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:51,186:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,190:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:51,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:51,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:51,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:50:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:50:51,212:INFO:Calculating mean and std
2023-01-08 21:50:51,212:INFO:Creating metrics dataframe
2023-01-08 21:50:51,216:INFO:Uploading results into container
2023-01-08 21:50:51,216:INFO:Uploading model into container now
2023-01-08 21:50:51,216:INFO:_master_model_container: 14
2023-01-08 21:50:51,216:INFO:_display_container: 2
2023-01-08 21:50:51,216:INFO:DummyClassifier(constant=None, random_state=2047, strategy='prior')
2023-01-08 21:50:51,216:INFO:create_model() successfully completed......................................
2023-01-08 21:50:51,324:INFO:SubProcess create_model() end ==================================
2023-01-08 21:50:51,324:INFO:Creating metrics dataframe
2023-01-08 21:50:51,332:INFO:Initializing create_model()
2023-01-08 21:50:51,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652DE2FA0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:50:51,332:INFO:Checking exceptions
2023-01-08 21:50:51,332:INFO:Importing libraries
2023-01-08 21:50:51,336:INFO:Copying training dataset
2023-01-08 21:50:51,340:INFO:Defining folds
2023-01-08 21:50:51,340:INFO:Declaring metric variables
2023-01-08 21:50:51,340:INFO:Importing untrained model
2023-01-08 21:50:51,340:INFO:Declaring custom model
2023-01-08 21:50:51,340:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:50:51,340:INFO:Cross validation set to False
2023-01-08 21:50:51,340:INFO:Fitting Model
2023-01-08 21:50:51,534:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:50:51,534:INFO:create_model() successfully completed......................................
2023-01-08 21:50:51,700:INFO:_master_model_container: 14
2023-01-08 21:50:51,700:INFO:_display_container: 2
2023-01-08 21:50:51,700:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:50:51,700:INFO:compare_models() successfully completed......................................
2023-01-08 21:52:08,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\multimethod\__init__.py:315: FutureWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`
  return func(*args, **kwargs)

2023-01-08 21:52:32,386:INFO:PyCaret ClassificationExperiment
2023-01-08 21:52:32,386:INFO:Logging name: clf-default-name
2023-01-08 21:52:32,386:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 21:52:32,386:INFO:version 3.0.0.rc6
2023-01-08 21:52:32,386:INFO:Initializing setup()
2023-01-08 21:52:32,386:INFO:self.USI: c4d7
2023-01-08 21:52:32,386:INFO:self._variable_keys: {'X_train', 'fold_shuffle_param', 'y', 'fix_imbalance', 'logging_param', 'gpu_n_jobs_param', 'target_param', 'seed', 'exp_id', 'log_plots_param', 'y_train', 'idx', 'X_test', 'fold_generator', 'exp_name_log', 'is_multiclass', 'html_param', 'n_jobs_param', 'y_test', 'gpu_param', 'memory', 'USI', 'data', '_available_plots', 'X', '_ml_usecase', 'pipeline', 'fold_groups_param'}
2023-01-08 21:52:32,386:INFO:Checking environment
2023-01-08 21:52:32,390:INFO:python_version: 3.9.15
2023-01-08 21:52:32,390:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 21:52:32,390:INFO:machine: AMD64
2023-01-08 21:52:32,390:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 21:52:32,390:INFO:Memory: svmem(total=17010110464, available=2786881536, percent=83.6, used=14223228928, free=2786881536)
2023-01-08 21:52:32,390:INFO:Physical Core: 6
2023-01-08 21:52:32,390:INFO:Logical Core: 12
2023-01-08 21:52:32,390:INFO:Checking libraries
2023-01-08 21:52:32,390:INFO:System:
2023-01-08 21:52:32,390:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 21:52:32,390:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 21:52:32,390:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 21:52:32,390:INFO:PyCaret required dependencies:
2023-01-08 21:52:32,393:INFO:                 pip: 22.3.1
2023-01-08 21:52:32,393:INFO:          setuptools: 65.6.3
2023-01-08 21:52:32,393:INFO:             pycaret: 3.0.0rc6
2023-01-08 21:52:32,393:INFO:             IPython: 8.8.0
2023-01-08 21:52:32,393:INFO:          ipywidgets: 8.0.4
2023-01-08 21:52:32,393:INFO:                tqdm: 4.64.1
2023-01-08 21:52:32,393:INFO:               numpy: 1.22.4
2023-01-08 21:52:32,393:INFO:              pandas: 1.5.2
2023-01-08 21:52:32,393:INFO:              jinja2: 3.1.2
2023-01-08 21:52:32,393:INFO:               scipy: 1.9.3
2023-01-08 21:52:32,393:INFO:              joblib: 1.2.0
2023-01-08 21:52:32,393:INFO:             sklearn: 1.1.3
2023-01-08 21:52:32,393:INFO:                pyod: 1.0.7
2023-01-08 21:52:32,393:INFO:            imblearn: 0.10.1
2023-01-08 21:52:32,393:INFO:   category_encoders: 2.5.1.post0
2023-01-08 21:52:32,393:INFO:            lightgbm: 3.3.4
2023-01-08 21:52:32,393:INFO:               numba: 0.56.4
2023-01-08 21:52:32,397:INFO:            requests: 2.28.1
2023-01-08 21:52:32,397:INFO:          matplotlib: 3.6.2
2023-01-08 21:52:32,397:INFO:          scikitplot: 0.3.7
2023-01-08 21:52:32,397:INFO:         yellowbrick: 1.5
2023-01-08 21:52:32,397:INFO:              plotly: 5.11.0
2023-01-08 21:52:32,397:INFO:             kaleido: 0.2.1
2023-01-08 21:52:32,397:INFO:         statsmodels: 0.13.5
2023-01-08 21:52:32,397:INFO:              sktime: 0.14.1
2023-01-08 21:52:32,397:INFO:               tbats: 1.1.2
2023-01-08 21:52:32,397:INFO:            pmdarima: 2.0.2
2023-01-08 21:52:32,397:INFO:              psutil: 5.9.0
2023-01-08 21:52:32,397:INFO:PyCaret optional dependencies:
2023-01-08 21:52:32,401:INFO:                shap: Not installed
2023-01-08 21:52:32,401:INFO:           interpret: Not installed
2023-01-08 21:52:32,401:INFO:                umap: Not installed
2023-01-08 21:52:32,401:INFO:    pandas_profiling: 3.6.2
2023-01-08 21:52:32,401:INFO:  explainerdashboard: Not installed
2023-01-08 21:52:32,401:INFO:             autoviz: Not installed
2023-01-08 21:52:32,401:INFO:           fairlearn: Not installed
2023-01-08 21:52:32,401:INFO:             xgboost: Not installed
2023-01-08 21:52:32,401:INFO:            catboost: Not installed
2023-01-08 21:52:32,401:INFO:              kmodes: Not installed
2023-01-08 21:52:32,401:INFO:             mlxtend: Not installed
2023-01-08 21:52:32,401:INFO:       statsforecast: Not installed
2023-01-08 21:52:32,401:INFO:        tune_sklearn: Not installed
2023-01-08 21:52:32,401:INFO:                 ray: Not installed
2023-01-08 21:52:32,401:INFO:            hyperopt: Not installed
2023-01-08 21:52:32,401:INFO:              optuna: Not installed
2023-01-08 21:52:32,401:INFO:               skopt: Not installed
2023-01-08 21:52:32,401:INFO:              mlflow: Not installed
2023-01-08 21:52:32,405:INFO:              gradio: Not installed
2023-01-08 21:52:32,405:INFO:             fastapi: Not installed
2023-01-08 21:52:32,405:INFO:             uvicorn: Not installed
2023-01-08 21:52:32,405:INFO:              m2cgen: Not installed
2023-01-08 21:52:32,405:INFO:           evidently: Not installed
2023-01-08 21:52:32,405:INFO:                nltk: Not installed
2023-01-08 21:52:32,405:INFO:            pyLDAvis: Not installed
2023-01-08 21:52:32,405:INFO:              gensim: Not installed
2023-01-08 21:52:32,405:INFO:               spacy: Not installed
2023-01-08 21:52:32,405:INFO:           wordcloud: Not installed
2023-01-08 21:52:32,405:INFO:            textblob: Not installed
2023-01-08 21:52:32,405:INFO:               fugue: Not installed
2023-01-08 21:52:32,405:INFO:           streamlit: 1.16.0
2023-01-08 21:52:32,405:INFO:             prophet: Not installed
2023-01-08 21:52:32,405:INFO:None
2023-01-08 21:52:32,405:INFO:Set up data.
2023-01-08 21:52:32,425:INFO:Set up train/test split.
2023-01-08 21:52:32,437:INFO:Set up index.
2023-01-08 21:52:32,437:INFO:Set up folding strategy.
2023-01-08 21:52:32,437:INFO:Assigning column types.
2023-01-08 21:52:32,454:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 21:52:32,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:52:32,527:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:52:32,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:32,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:32,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 21:52:32,613:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:52:32,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:32,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:32,644:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 21:52:32,692:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:52:32,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:32,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:32,792:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 21:52:32,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:32,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:32,836:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 21:52:32,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:32,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:33,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:33,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:33,028:INFO:Preparing preprocessing pipeline...
2023-01-08 21:52:33,028:INFO:Set up label encoding.
2023-01-08 21:52:33,028:INFO:Set up simple imputation.
2023-01-08 21:52:33,076:INFO:Finished creating preprocessing pipeline.
2023-01-08 21:52:33,080:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 21:52:33,080:INFO:Creating final display dataframe.
2023-01-08 21:52:33,648:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               7837
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               c4d7
2023-01-08 21:52:33,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:33,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:33,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:33,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 21:52:33,904:INFO:setup() successfully completed in 1.53s...............
2023-01-08 21:52:33,908:INFO:Initializing compare_models()
2023-01-08 21:52:33,908:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 21:52:33,908:INFO:Checking exceptions
2023-01-08 21:52:33,916:INFO:Preparing display monitor
2023-01-08 21:52:33,916:INFO:Initializing Logistic Regression
2023-01-08 21:52:33,916:INFO:Total runtime is 0.0 minutes
2023-01-08 21:52:33,916:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:33,916:INFO:Initializing create_model()
2023-01-08 21:52:33,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:33,916:INFO:Checking exceptions
2023-01-08 21:52:33,916:INFO:Importing libraries
2023-01-08 21:52:33,916:INFO:Copying training dataset
2023-01-08 21:52:33,920:INFO:Defining folds
2023-01-08 21:52:33,920:INFO:Declaring metric variables
2023-01-08 21:52:33,920:INFO:Importing untrained model
2023-01-08 21:52:33,920:INFO:Logistic Regression Imported successfully
2023-01-08 21:52:33,920:INFO:Starting cross validation
2023-01-08 21:52:33,924:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:34,257:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,257:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,261:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,269:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,269:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,273:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,277:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,277:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,277:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,277:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,277:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,303:INFO:Calculating mean and std
2023-01-08 21:52:34,303:INFO:Creating metrics dataframe
2023-01-08 21:52:34,307:INFO:Uploading results into container
2023-01-08 21:52:34,307:INFO:Uploading model into container now
2023-01-08 21:52:34,307:INFO:_master_model_container: 1
2023-01-08 21:52:34,307:INFO:_display_container: 2
2023-01-08 21:52:34,307:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7837, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 21:52:34,311:INFO:create_model() successfully completed......................................
2023-01-08 21:52:34,431:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:34,431:INFO:Creating metrics dataframe
2023-01-08 21:52:34,435:INFO:Initializing K Neighbors Classifier
2023-01-08 21:52:34,435:INFO:Total runtime is 0.00865556796391805 minutes
2023-01-08 21:52:34,439:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:34,439:INFO:Initializing create_model()
2023-01-08 21:52:34,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:34,439:INFO:Checking exceptions
2023-01-08 21:52:34,439:INFO:Importing libraries
2023-01-08 21:52:34,439:INFO:Copying training dataset
2023-01-08 21:52:34,439:INFO:Defining folds
2023-01-08 21:52:34,439:INFO:Declaring metric variables
2023-01-08 21:52:34,439:INFO:Importing untrained model
2023-01-08 21:52:34,443:INFO:K Neighbors Classifier Imported successfully
2023-01-08 21:52:34,443:INFO:Starting cross validation
2023-01-08 21:52:34,443:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:34,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,583:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,583:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,587:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,587:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,599:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,607:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,607:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,607:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,607:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,619:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,619:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,619:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,623:INFO:Calculating mean and std
2023-01-08 21:52:34,623:INFO:Creating metrics dataframe
2023-01-08 21:52:34,627:INFO:Uploading results into container
2023-01-08 21:52:34,627:INFO:Uploading model into container now
2023-01-08 21:52:34,627:INFO:_master_model_container: 2
2023-01-08 21:52:34,627:INFO:_display_container: 2
2023-01-08 21:52:34,631:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 21:52:34,631:INFO:create_model() successfully completed......................................
2023-01-08 21:52:34,743:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:34,743:INFO:Creating metrics dataframe
2023-01-08 21:52:34,747:INFO:Initializing Naive Bayes
2023-01-08 21:52:34,747:INFO:Total runtime is 0.01385570764541626 minutes
2023-01-08 21:52:34,747:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:34,747:INFO:Initializing create_model()
2023-01-08 21:52:34,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:34,747:INFO:Checking exceptions
2023-01-08 21:52:34,747:INFO:Importing libraries
2023-01-08 21:52:34,747:INFO:Copying training dataset
2023-01-08 21:52:34,751:INFO:Defining folds
2023-01-08 21:52:34,751:INFO:Declaring metric variables
2023-01-08 21:52:34,751:INFO:Importing untrained model
2023-01-08 21:52:34,751:INFO:Naive Bayes Imported successfully
2023-01-08 21:52:34,751:INFO:Starting cross validation
2023-01-08 21:52:34,751:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:34,819:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,819:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,819:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,819:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,819:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,823:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,823:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,827:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,827:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,827:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,827:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,831:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,831:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,831:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,831:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,831:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,831:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,831:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,835:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,835:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,843:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,843:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,843:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,843:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,847:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:34,851:INFO:Calculating mean and std
2023-01-08 21:52:34,851:INFO:Creating metrics dataframe
2023-01-08 21:52:34,855:INFO:Uploading results into container
2023-01-08 21:52:34,855:INFO:Uploading model into container now
2023-01-08 21:52:34,855:INFO:_master_model_container: 3
2023-01-08 21:52:34,855:INFO:_display_container: 2
2023-01-08 21:52:34,855:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 21:52:34,855:INFO:create_model() successfully completed......................................
2023-01-08 21:52:34,964:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:34,964:INFO:Creating metrics dataframe
2023-01-08 21:52:34,968:INFO:Initializing Decision Tree Classifier
2023-01-08 21:52:34,968:INFO:Total runtime is 0.017529845237731934 minutes
2023-01-08 21:52:34,968:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:34,968:INFO:Initializing create_model()
2023-01-08 21:52:34,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:34,968:INFO:Checking exceptions
2023-01-08 21:52:34,968:INFO:Importing libraries
2023-01-08 21:52:34,968:INFO:Copying training dataset
2023-01-08 21:52:34,972:INFO:Defining folds
2023-01-08 21:52:34,972:INFO:Declaring metric variables
2023-01-08 21:52:34,972:INFO:Importing untrained model
2023-01-08 21:52:34,972:INFO:Decision Tree Classifier Imported successfully
2023-01-08 21:52:34,972:INFO:Starting cross validation
2023-01-08 21:52:34,972:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:35,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,076:INFO:Calculating mean and std
2023-01-08 21:52:35,076:INFO:Creating metrics dataframe
2023-01-08 21:52:35,080:INFO:Uploading results into container
2023-01-08 21:52:35,080:INFO:Uploading model into container now
2023-01-08 21:52:35,080:INFO:_master_model_container: 4
2023-01-08 21:52:35,080:INFO:_display_container: 2
2023-01-08 21:52:35,080:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7837, splitter='best')
2023-01-08 21:52:35,080:INFO:create_model() successfully completed......................................
2023-01-08 21:52:35,187:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:35,187:INFO:Creating metrics dataframe
2023-01-08 21:52:35,191:INFO:Initializing SVM - Linear Kernel
2023-01-08 21:52:35,191:INFO:Total runtime is 0.021259816487630208 minutes
2023-01-08 21:52:35,191:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:35,191:INFO:Initializing create_model()
2023-01-08 21:52:35,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:35,191:INFO:Checking exceptions
2023-01-08 21:52:35,191:INFO:Importing libraries
2023-01-08 21:52:35,191:INFO:Copying training dataset
2023-01-08 21:52:35,195:INFO:Defining folds
2023-01-08 21:52:35,195:INFO:Declaring metric variables
2023-01-08 21:52:35,195:INFO:Importing untrained model
2023-01-08 21:52:35,195:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 21:52:35,195:INFO:Starting cross validation
2023-01-08 21:52:35,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:35,255:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,259:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,259:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,259:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:35,259:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,271:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,271:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,275:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,275:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:35,275:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:35,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:35,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,299:INFO:Calculating mean and std
2023-01-08 21:52:35,299:INFO:Creating metrics dataframe
2023-01-08 21:52:35,303:INFO:Uploading results into container
2023-01-08 21:52:35,303:INFO:Uploading model into container now
2023-01-08 21:52:35,303:INFO:_master_model_container: 5
2023-01-08 21:52:35,303:INFO:_display_container: 2
2023-01-08 21:52:35,303:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7837, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 21:52:35,303:INFO:create_model() successfully completed......................................
2023-01-08 21:52:35,415:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:35,415:INFO:Creating metrics dataframe
2023-01-08 21:52:35,419:INFO:Initializing Ridge Classifier
2023-01-08 21:52:35,419:INFO:Total runtime is 0.025055245558420817 minutes
2023-01-08 21:52:35,419:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:35,419:INFO:Initializing create_model()
2023-01-08 21:52:35,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:35,419:INFO:Checking exceptions
2023-01-08 21:52:35,419:INFO:Importing libraries
2023-01-08 21:52:35,419:INFO:Copying training dataset
2023-01-08 21:52:35,423:INFO:Defining folds
2023-01-08 21:52:35,423:INFO:Declaring metric variables
2023-01-08 21:52:35,423:INFO:Importing untrained model
2023-01-08 21:52:35,423:INFO:Ridge Classifier Imported successfully
2023-01-08 21:52:35,423:INFO:Starting cross validation
2023-01-08 21:52:35,423:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:35,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,479:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,479:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,479:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,479:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,479:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,491:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,491:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,495:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,499:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,499:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,499:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,507:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,511:INFO:Calculating mean and std
2023-01-08 21:52:35,511:INFO:Creating metrics dataframe
2023-01-08 21:52:35,511:INFO:Uploading results into container
2023-01-08 21:52:35,515:INFO:Uploading model into container now
2023-01-08 21:52:35,515:INFO:_master_model_container: 6
2023-01-08 21:52:35,515:INFO:_display_container: 2
2023-01-08 21:52:35,515:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=7837, solver='auto', tol=0.001)
2023-01-08 21:52:35,515:INFO:create_model() successfully completed......................................
2023-01-08 21:52:35,615:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:35,615:INFO:Creating metrics dataframe
2023-01-08 21:52:35,623:INFO:Initializing Random Forest Classifier
2023-01-08 21:52:35,623:INFO:Total runtime is 0.028450719515482583 minutes
2023-01-08 21:52:35,623:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:35,623:INFO:Initializing create_model()
2023-01-08 21:52:35,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:35,623:INFO:Checking exceptions
2023-01-08 21:52:35,623:INFO:Importing libraries
2023-01-08 21:52:35,623:INFO:Copying training dataset
2023-01-08 21:52:35,623:INFO:Defining folds
2023-01-08 21:52:35,623:INFO:Declaring metric variables
2023-01-08 21:52:35,623:INFO:Importing untrained model
2023-01-08 21:52:35,623:INFO:Random Forest Classifier Imported successfully
2023-01-08 21:52:35,623:INFO:Starting cross validation
2023-01-08 21:52:35,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:35,983:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,983:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,991:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,991:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,991:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,995:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,999:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:35,999:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,007:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,007:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,015:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,015:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,023:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,023:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,023:INFO:Calculating mean and std
2023-01-08 21:52:36,027:INFO:Creating metrics dataframe
2023-01-08 21:52:36,031:INFO:Uploading results into container
2023-01-08 21:52:36,031:INFO:Uploading model into container now
2023-01-08 21:52:36,031:INFO:_master_model_container: 7
2023-01-08 21:52:36,031:INFO:_display_container: 2
2023-01-08 21:52:36,031:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7837, verbose=0, warm_start=False)
2023-01-08 21:52:36,031:INFO:create_model() successfully completed......................................
2023-01-08 21:52:36,152:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:36,152:INFO:Creating metrics dataframe
2023-01-08 21:52:36,156:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 21:52:36,156:INFO:Total runtime is 0.037332491079966224 minutes
2023-01-08 21:52:36,156:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:36,160:INFO:Initializing create_model()
2023-01-08 21:52:36,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:36,160:INFO:Checking exceptions
2023-01-08 21:52:36,160:INFO:Importing libraries
2023-01-08 21:52:36,160:INFO:Copying training dataset
2023-01-08 21:52:36,160:INFO:Defining folds
2023-01-08 21:52:36,160:INFO:Declaring metric variables
2023-01-08 21:52:36,160:INFO:Importing untrained model
2023-01-08 21:52:36,160:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 21:52:36,160:INFO:Starting cross validation
2023-01-08 21:52:36,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:36,232:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,236:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,236:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,244:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,276:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,276:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,280:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,280:INFO:Calculating mean and std
2023-01-08 21:52:36,280:INFO:Creating metrics dataframe
2023-01-08 21:52:36,284:INFO:Uploading results into container
2023-01-08 21:52:36,288:INFO:Uploading model into container now
2023-01-08 21:52:36,288:INFO:_master_model_container: 8
2023-01-08 21:52:36,288:INFO:_display_container: 2
2023-01-08 21:52:36,288:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 21:52:36,288:INFO:create_model() successfully completed......................................
2023-01-08 21:52:36,412:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:36,412:INFO:Creating metrics dataframe
2023-01-08 21:52:36,420:INFO:Initializing Ada Boost Classifier
2023-01-08 21:52:36,420:INFO:Total runtime is 0.041728723049163814 minutes
2023-01-08 21:52:36,420:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:36,420:INFO:Initializing create_model()
2023-01-08 21:52:36,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:36,420:INFO:Checking exceptions
2023-01-08 21:52:36,420:INFO:Importing libraries
2023-01-08 21:52:36,420:INFO:Copying training dataset
2023-01-08 21:52:36,424:INFO:Defining folds
2023-01-08 21:52:36,424:INFO:Declaring metric variables
2023-01-08 21:52:36,424:INFO:Importing untrained model
2023-01-08 21:52:36,424:INFO:Ada Boost Classifier Imported successfully
2023-01-08 21:52:36,424:INFO:Starting cross validation
2023-01-08 21:52:36,424:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:36,651:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,658:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,658:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:36,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,670:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,670:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,670:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,670:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,670:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,672:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,672:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:36,682:INFO:Calculating mean and std
2023-01-08 21:52:36,682:INFO:Creating metrics dataframe
2023-01-08 21:52:36,686:INFO:Uploading results into container
2023-01-08 21:52:36,686:INFO:Uploading model into container now
2023-01-08 21:52:36,686:INFO:_master_model_container: 9
2023-01-08 21:52:36,686:INFO:_display_container: 2
2023-01-08 21:52:36,686:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7837)
2023-01-08 21:52:36,686:INFO:create_model() successfully completed......................................
2023-01-08 21:52:36,811:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:36,811:INFO:Creating metrics dataframe
2023-01-08 21:52:36,813:INFO:Initializing Gradient Boosting Classifier
2023-01-08 21:52:36,813:INFO:Total runtime is 0.04828527371088663 minutes
2023-01-08 21:52:36,817:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:36,817:INFO:Initializing create_model()
2023-01-08 21:52:36,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:36,817:INFO:Checking exceptions
2023-01-08 21:52:36,817:INFO:Importing libraries
2023-01-08 21:52:36,817:INFO:Copying training dataset
2023-01-08 21:52:36,817:INFO:Defining folds
2023-01-08 21:52:36,817:INFO:Declaring metric variables
2023-01-08 21:52:36,817:INFO:Importing untrained model
2023-01-08 21:52:36,817:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 21:52:36,817:INFO:Starting cross validation
2023-01-08 21:52:36,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:37,238:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,240:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,280:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,298:INFO:Calculating mean and std
2023-01-08 21:52:37,298:INFO:Creating metrics dataframe
2023-01-08 21:52:37,302:INFO:Uploading results into container
2023-01-08 21:52:37,302:INFO:Uploading model into container now
2023-01-08 21:52:37,302:INFO:_master_model_container: 10
2023-01-08 21:52:37,302:INFO:_display_container: 2
2023-01-08 21:52:37,306:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7837, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 21:52:37,306:INFO:create_model() successfully completed......................................
2023-01-08 21:52:37,430:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:37,430:INFO:Creating metrics dataframe
2023-01-08 21:52:37,434:INFO:Initializing Linear Discriminant Analysis
2023-01-08 21:52:37,434:INFO:Total runtime is 0.05862812598546345 minutes
2023-01-08 21:52:37,434:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:37,438:INFO:Initializing create_model()
2023-01-08 21:52:37,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:37,438:INFO:Checking exceptions
2023-01-08 21:52:37,438:INFO:Importing libraries
2023-01-08 21:52:37,438:INFO:Copying training dataset
2023-01-08 21:52:37,438:INFO:Defining folds
2023-01-08 21:52:37,438:INFO:Declaring metric variables
2023-01-08 21:52:37,442:INFO:Importing untrained model
2023-01-08 21:52:37,442:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:52:37,442:INFO:Starting cross validation
2023-01-08 21:52:37,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:37,524:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,540:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,540:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,548:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,548:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,548:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,560:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,560:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,560:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,564:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,564:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,568:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,568:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,568:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,572:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:37,576:INFO:Calculating mean and std
2023-01-08 21:52:37,576:INFO:Creating metrics dataframe
2023-01-08 21:52:37,580:INFO:Uploading results into container
2023-01-08 21:52:37,580:INFO:Uploading model into container now
2023-01-08 21:52:37,580:INFO:_master_model_container: 11
2023-01-08 21:52:37,580:INFO:_display_container: 2
2023-01-08 21:52:37,584:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:52:37,584:INFO:create_model() successfully completed......................................
2023-01-08 21:52:37,691:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:37,691:INFO:Creating metrics dataframe
2023-01-08 21:52:37,699:INFO:Initializing Extra Trees Classifier
2023-01-08 21:52:37,699:INFO:Total runtime is 0.06305956840515135 minutes
2023-01-08 21:52:37,699:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:37,699:INFO:Initializing create_model()
2023-01-08 21:52:37,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:37,699:INFO:Checking exceptions
2023-01-08 21:52:37,699:INFO:Importing libraries
2023-01-08 21:52:37,699:INFO:Copying training dataset
2023-01-08 21:52:37,699:INFO:Defining folds
2023-01-08 21:52:37,699:INFO:Declaring metric variables
2023-01-08 21:52:37,703:INFO:Importing untrained model
2023-01-08 21:52:37,703:INFO:Extra Trees Classifier Imported successfully
2023-01-08 21:52:37,703:INFO:Starting cross validation
2023-01-08 21:52:37,703:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:38,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,076:INFO:Calculating mean and std
2023-01-08 21:52:38,076:INFO:Creating metrics dataframe
2023-01-08 21:52:38,080:INFO:Uploading results into container
2023-01-08 21:52:38,084:INFO:Uploading model into container now
2023-01-08 21:52:38,084:INFO:_master_model_container: 12
2023-01-08 21:52:38,084:INFO:_display_container: 2
2023-01-08 21:52:38,084:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7837, verbose=0, warm_start=False)
2023-01-08 21:52:38,084:INFO:create_model() successfully completed......................................
2023-01-08 21:52:38,224:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:38,228:INFO:Creating metrics dataframe
2023-01-08 21:52:38,232:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 21:52:38,232:INFO:Total runtime is 0.07193059921264647 minutes
2023-01-08 21:52:38,232:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:38,232:INFO:Initializing create_model()
2023-01-08 21:52:38,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:38,232:INFO:Checking exceptions
2023-01-08 21:52:38,232:INFO:Importing libraries
2023-01-08 21:52:38,232:INFO:Copying training dataset
2023-01-08 21:52:38,236:INFO:Defining folds
2023-01-08 21:52:38,236:INFO:Declaring metric variables
2023-01-08 21:52:38,236:INFO:Importing untrained model
2023-01-08 21:52:38,236:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 21:52:38,236:INFO:Starting cross validation
2023-01-08 21:52:38,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:38,372:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,376:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,376:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,376:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,379:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,379:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,379:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,379:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,379:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,387:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,387:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,391:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,391:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,391:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,391:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,399:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,399:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,411:INFO:Calculating mean and std
2023-01-08 21:52:38,411:INFO:Creating metrics dataframe
2023-01-08 21:52:38,415:INFO:Uploading results into container
2023-01-08 21:52:38,415:INFO:Uploading model into container now
2023-01-08 21:52:38,415:INFO:_master_model_container: 13
2023-01-08 21:52:38,415:INFO:_display_container: 2
2023-01-08 21:52:38,419:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7837, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 21:52:38,419:INFO:create_model() successfully completed......................................
2023-01-08 21:52:38,556:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:38,556:INFO:Creating metrics dataframe
2023-01-08 21:52:38,564:INFO:Initializing Dummy Classifier
2023-01-08 21:52:38,564:INFO:Total runtime is 0.07747439543406166 minutes
2023-01-08 21:52:38,564:INFO:SubProcess create_model() called ==================================
2023-01-08 21:52:38,564:INFO:Initializing create_model()
2023-01-08 21:52:38,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256519042E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:38,564:INFO:Checking exceptions
2023-01-08 21:52:38,564:INFO:Importing libraries
2023-01-08 21:52:38,564:INFO:Copying training dataset
2023-01-08 21:52:38,568:INFO:Defining folds
2023-01-08 21:52:38,568:INFO:Declaring metric variables
2023-01-08 21:52:38,568:INFO:Importing untrained model
2023-01-08 21:52:38,568:INFO:Dummy Classifier Imported successfully
2023-01-08 21:52:38,568:INFO:Starting cross validation
2023-01-08 21:52:38,572:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 21:52:38,632:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,636:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,636:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:38,640:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:38,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:38,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,648:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:38,648:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,656:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,656:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,656:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,656:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:38,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:38,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:38,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,668:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:38,668:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,668:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,668:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:38,668:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,672:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 21:52:38,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 21:52:38,680:INFO:Calculating mean and std
2023-01-08 21:52:38,680:INFO:Creating metrics dataframe
2023-01-08 21:52:38,684:INFO:Uploading results into container
2023-01-08 21:52:38,684:INFO:Uploading model into container now
2023-01-08 21:52:38,684:INFO:_master_model_container: 14
2023-01-08 21:52:38,684:INFO:_display_container: 2
2023-01-08 21:52:38,684:INFO:DummyClassifier(constant=None, random_state=7837, strategy='prior')
2023-01-08 21:52:38,684:INFO:create_model() successfully completed......................................
2023-01-08 21:52:38,816:INFO:SubProcess create_model() end ==================================
2023-01-08 21:52:38,816:INFO:Creating metrics dataframe
2023-01-08 21:52:38,828:INFO:Initializing create_model()
2023-01-08 21:52:38,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025652FB7910>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 21:52:38,828:INFO:Checking exceptions
2023-01-08 21:52:38,828:INFO:Importing libraries
2023-01-08 21:52:38,828:INFO:Copying training dataset
2023-01-08 21:52:38,828:INFO:Defining folds
2023-01-08 21:52:38,828:INFO:Declaring metric variables
2023-01-08 21:52:38,832:INFO:Importing untrained model
2023-01-08 21:52:38,832:INFO:Declaring custom model
2023-01-08 21:52:38,832:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 21:52:38,832:INFO:Cross validation set to False
2023-01-08 21:52:38,832:INFO:Fitting Model
2023-01-08 21:52:38,872:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:52:38,872:INFO:create_model() successfully completed......................................
2023-01-08 21:52:39,032:INFO:_master_model_container: 14
2023-01-08 21:52:39,032:INFO:_display_container: 2
2023-01-08 21:52:39,036:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 21:52:39,036:INFO:compare_models() successfully completed......................................
2023-01-08 21:54:08,070:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\multimethod\__init__.py:315: FutureWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`
  return func(*args, **kwargs)

2023-01-08 23:38:46,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 23:38:46,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 23:38:46,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 23:38:46,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-08 23:38:46,347:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-08 23:38:57,439:INFO:PyCaret ClassificationExperiment
2023-01-08 23:38:57,440:INFO:Logging name: clf-default-name
2023-01-08 23:38:57,440:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 23:38:57,440:INFO:version 3.0.0.rc6
2023-01-08 23:38:57,440:INFO:Initializing setup()
2023-01-08 23:38:57,440:INFO:self.USI: 7331
2023-01-08 23:38:57,440:INFO:self._variable_keys: {'memory', 'X', 'gpu_param', 'pipeline', 'data', 'y_test', 'target_param', 'fold_groups_param', 'n_jobs_param', 'X_test', 'y_train', 'idx', 'seed', 'X_train', 'exp_id', '_available_plots', 'fold_shuffle_param', '_ml_usecase', 'y', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_generator', 'html_param', 'USI', 'log_plots_param', 'is_multiclass', 'logging_param', 'exp_name_log'}
2023-01-08 23:38:57,441:INFO:Checking environment
2023-01-08 23:38:57,441:INFO:python_version: 3.9.15
2023-01-08 23:38:57,441:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 23:38:57,441:INFO:machine: AMD64
2023-01-08 23:38:57,461:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 23:38:57,461:INFO:Memory: svmem(total=17010110464, available=3118968832, percent=81.7, used=13891141632, free=3118968832)
2023-01-08 23:38:57,461:INFO:Physical Core: 6
2023-01-08 23:38:57,462:INFO:Logical Core: 12
2023-01-08 23:38:57,462:INFO:Checking libraries
2023-01-08 23:38:57,462:INFO:System:
2023-01-08 23:38:57,462:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 23:38:57,462:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 23:38:57,462:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 23:38:57,462:INFO:PyCaret required dependencies:
2023-01-08 23:38:57,463:INFO:                 pip: 22.3.1
2023-01-08 23:38:57,463:INFO:          setuptools: 65.6.3
2023-01-08 23:38:57,463:INFO:             pycaret: 3.0.0rc6
2023-01-08 23:38:57,463:INFO:             IPython: 8.8.0
2023-01-08 23:38:57,464:INFO:          ipywidgets: 8.0.4
2023-01-08 23:38:57,464:INFO:                tqdm: 4.64.1
2023-01-08 23:38:57,464:INFO:               numpy: 1.22.4
2023-01-08 23:38:57,464:INFO:              pandas: 1.5.2
2023-01-08 23:38:57,465:INFO:              jinja2: 3.1.2
2023-01-08 23:38:57,465:INFO:               scipy: 1.9.3
2023-01-08 23:38:57,465:INFO:              joblib: 1.2.0
2023-01-08 23:38:57,465:INFO:             sklearn: 1.1.3
2023-01-08 23:38:57,466:INFO:                pyod: 1.0.7
2023-01-08 23:38:57,466:INFO:            imblearn: 0.10.1
2023-01-08 23:38:57,466:INFO:   category_encoders: 2.5.1.post0
2023-01-08 23:38:57,466:INFO:            lightgbm: 3.3.4
2023-01-08 23:38:57,466:INFO:               numba: 0.56.4
2023-01-08 23:38:57,467:INFO:            requests: 2.28.1
2023-01-08 23:38:57,467:INFO:          matplotlib: 3.6.2
2023-01-08 23:38:57,467:INFO:          scikitplot: 0.3.7
2023-01-08 23:38:57,467:INFO:         yellowbrick: 1.5
2023-01-08 23:38:57,467:INFO:              plotly: 5.11.0
2023-01-08 23:38:57,468:INFO:             kaleido: 0.2.1
2023-01-08 23:38:57,468:INFO:         statsmodels: 0.13.5
2023-01-08 23:38:57,468:INFO:              sktime: 0.14.1
2023-01-08 23:38:57,468:INFO:               tbats: 1.1.2
2023-01-08 23:38:57,469:INFO:            pmdarima: 2.0.2
2023-01-08 23:38:57,469:INFO:              psutil: 5.9.0
2023-01-08 23:38:57,469:INFO:PyCaret optional dependencies:
2023-01-08 23:38:57,488:INFO:                shap: Not installed
2023-01-08 23:38:57,489:INFO:           interpret: Not installed
2023-01-08 23:38:57,489:INFO:                umap: Not installed
2023-01-08 23:38:57,489:INFO:    pandas_profiling: 3.6.2
2023-01-08 23:38:57,489:INFO:  explainerdashboard: Not installed
2023-01-08 23:38:57,489:INFO:             autoviz: Not installed
2023-01-08 23:38:57,489:INFO:           fairlearn: Not installed
2023-01-08 23:38:57,489:INFO:             xgboost: Not installed
2023-01-08 23:38:57,489:INFO:            catboost: Not installed
2023-01-08 23:38:57,489:INFO:              kmodes: Not installed
2023-01-08 23:38:57,489:INFO:             mlxtend: Not installed
2023-01-08 23:38:57,489:INFO:       statsforecast: Not installed
2023-01-08 23:38:57,489:INFO:        tune_sklearn: Not installed
2023-01-08 23:38:57,489:INFO:                 ray: Not installed
2023-01-08 23:38:57,489:INFO:            hyperopt: Not installed
2023-01-08 23:38:57,489:INFO:              optuna: Not installed
2023-01-08 23:38:57,489:INFO:               skopt: Not installed
2023-01-08 23:38:57,489:INFO:              mlflow: Not installed
2023-01-08 23:38:57,489:INFO:              gradio: Not installed
2023-01-08 23:38:57,489:INFO:             fastapi: Not installed
2023-01-08 23:38:57,489:INFO:             uvicorn: Not installed
2023-01-08 23:38:57,489:INFO:              m2cgen: Not installed
2023-01-08 23:38:57,490:INFO:           evidently: Not installed
2023-01-08 23:38:57,490:INFO:                nltk: Not installed
2023-01-08 23:38:57,490:INFO:            pyLDAvis: Not installed
2023-01-08 23:38:57,490:INFO:              gensim: Not installed
2023-01-08 23:38:57,490:INFO:               spacy: Not installed
2023-01-08 23:38:57,490:INFO:           wordcloud: Not installed
2023-01-08 23:38:57,490:INFO:            textblob: Not installed
2023-01-08 23:38:57,490:INFO:               fugue: Not installed
2023-01-08 23:38:57,490:INFO:           streamlit: 1.16.0
2023-01-08 23:38:57,490:INFO:             prophet: Not installed
2023-01-08 23:38:57,490:INFO:None
2023-01-08 23:38:57,490:INFO:Set up data.
2023-01-08 23:38:57,494:INFO:Set up train/test split.
2023-01-08 23:38:57,498:INFO:Set up index.
2023-01-08 23:38:57,499:INFO:Set up folding strategy.
2023-01-08 23:38:57,499:INFO:Assigning column types.
2023-01-08 23:38:57,501:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 23:38:57,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:38:57,545:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:38:57,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:38:57,622:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:38:57,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,645:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 23:38:57,683:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:38:57,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,742:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:38:57,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,766:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 23:38:57,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:57,894:INFO:Preparing preprocessing pipeline...
2023-01-08 23:38:57,895:INFO:Set up label encoding.
2023-01-08 23:38:57,895:INFO:Set up simple imputation.
2023-01-08 23:38:57,936:INFO:Finished creating preprocessing pipeline.
2023-01-08 23:38:57,940:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 23:38:57,940:INFO:Creating final display dataframe.
2023-01-08 23:38:58,116:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8660
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               7331
2023-01-08 23:38:58,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:58,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:58,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:58,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:38:58,253:INFO:setup() successfully completed in 0.82s...............
2023-01-08 23:38:58,255:INFO:Initializing compare_models()
2023-01-08 23:38:58,255:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 23:38:58,255:INFO:Checking exceptions
2023-01-08 23:38:58,258:INFO:Preparing display monitor
2023-01-08 23:38:58,262:INFO:Initializing Logistic Regression
2023-01-08 23:38:58,262:INFO:Total runtime is 0.0 minutes
2023-01-08 23:38:58,263:INFO:SubProcess create_model() called ==================================
2023-01-08 23:38:58,263:INFO:Initializing create_model()
2023-01-08 23:38:58,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:38:58,263:INFO:Checking exceptions
2023-01-08 23:38:58,263:INFO:Importing libraries
2023-01-08 23:38:58,263:INFO:Copying training dataset
2023-01-08 23:38:58,265:INFO:Defining folds
2023-01-08 23:38:58,265:INFO:Declaring metric variables
2023-01-08 23:38:58,265:INFO:Importing untrained model
2023-01-08 23:38:58,266:INFO:Logistic Regression Imported successfully
2023-01-08 23:38:58,266:INFO:Starting cross validation
2023-01-08 23:38:58,266:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:04,005:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,010:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,047:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,050:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,055:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,090:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,093:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,105:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,108:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,108:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,109:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,113:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,122:INFO:Calculating mean and std
2023-01-08 23:39:04,123:INFO:Creating metrics dataframe
2023-01-08 23:39:04,130:INFO:Uploading results into container
2023-01-08 23:39:04,132:INFO:Uploading model into container now
2023-01-08 23:39:04,133:INFO:_master_model_container: 1
2023-01-08 23:39:04,133:INFO:_display_container: 2
2023-01-08 23:39:04,134:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8660, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 23:39:04,134:INFO:create_model() successfully completed......................................
2023-01-08 23:39:04,253:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:04,253:INFO:Creating metrics dataframe
2023-01-08 23:39:04,257:INFO:Initializing K Neighbors Classifier
2023-01-08 23:39:04,257:INFO:Total runtime is 0.09991567134857178 minutes
2023-01-08 23:39:04,257:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:04,257:INFO:Initializing create_model()
2023-01-08 23:39:04,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:04,257:INFO:Checking exceptions
2023-01-08 23:39:04,257:INFO:Importing libraries
2023-01-08 23:39:04,257:INFO:Copying training dataset
2023-01-08 23:39:04,260:INFO:Defining folds
2023-01-08 23:39:04,260:INFO:Declaring metric variables
2023-01-08 23:39:04,260:INFO:Importing untrained model
2023-01-08 23:39:04,261:INFO:K Neighbors Classifier Imported successfully
2023-01-08 23:39:04,261:INFO:Starting cross validation
2023-01-08 23:39:04,262:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:04,399:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,399:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,401:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,402:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,402:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,403:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,405:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,405:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,406:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,417:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,417:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,418:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,421:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,421:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,421:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,425:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,425:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:04,428:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:05,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:05,989:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:05,990:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:05,990:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:05,991:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:05,994:INFO:Calculating mean and std
2023-01-08 23:39:05,994:INFO:Creating metrics dataframe
2023-01-08 23:39:05,998:INFO:Uploading results into container
2023-01-08 23:39:05,999:INFO:Uploading model into container now
2023-01-08 23:39:05,999:INFO:_master_model_container: 2
2023-01-08 23:39:05,999:INFO:_display_container: 2
2023-01-08 23:39:06,000:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 23:39:06,000:INFO:create_model() successfully completed......................................
2023-01-08 23:39:06,081:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:06,081:INFO:Creating metrics dataframe
2023-01-08 23:39:06,085:INFO:Initializing Naive Bayes
2023-01-08 23:39:06,085:INFO:Total runtime is 0.13038374582926432 minutes
2023-01-08 23:39:06,086:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:06,086:INFO:Initializing create_model()
2023-01-08 23:39:06,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:06,086:INFO:Checking exceptions
2023-01-08 23:39:06,086:INFO:Importing libraries
2023-01-08 23:39:06,086:INFO:Copying training dataset
2023-01-08 23:39:06,088:INFO:Defining folds
2023-01-08 23:39:06,088:INFO:Declaring metric variables
2023-01-08 23:39:06,088:INFO:Importing untrained model
2023-01-08 23:39:06,089:INFO:Naive Bayes Imported successfully
2023-01-08 23:39:06,089:INFO:Starting cross validation
2023-01-08 23:39:06,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:06,152:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,152:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,154:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,157:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,158:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,160:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,160:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,161:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,163:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,169:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,170:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,172:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,178:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,178:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,180:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,180:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,184:INFO:Calculating mean and std
2023-01-08 23:39:06,184:INFO:Creating metrics dataframe
2023-01-08 23:39:06,188:INFO:Uploading results into container
2023-01-08 23:39:06,189:INFO:Uploading model into container now
2023-01-08 23:39:06,189:INFO:_master_model_container: 3
2023-01-08 23:39:06,189:INFO:_display_container: 2
2023-01-08 23:39:06,189:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 23:39:06,189:INFO:create_model() successfully completed......................................
2023-01-08 23:39:06,259:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:06,260:INFO:Creating metrics dataframe
2023-01-08 23:39:06,264:INFO:Initializing Decision Tree Classifier
2023-01-08 23:39:06,264:INFO:Total runtime is 0.13337708711624144 minutes
2023-01-08 23:39:06,264:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:06,264:INFO:Initializing create_model()
2023-01-08 23:39:06,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:06,264:INFO:Checking exceptions
2023-01-08 23:39:06,264:INFO:Importing libraries
2023-01-08 23:39:06,264:INFO:Copying training dataset
2023-01-08 23:39:06,266:INFO:Defining folds
2023-01-08 23:39:06,266:INFO:Declaring metric variables
2023-01-08 23:39:06,266:INFO:Importing untrained model
2023-01-08 23:39:06,266:INFO:Decision Tree Classifier Imported successfully
2023-01-08 23:39:06,266:INFO:Starting cross validation
2023-01-08 23:39:06,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:06,327:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,329:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,331:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,333:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,335:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,335:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,336:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,340:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,344:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,346:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,347:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,348:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,349:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,352:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,353:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,354:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,354:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,354:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,355:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,355:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,356:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,357:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,359:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,360:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,361:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,364:INFO:Calculating mean and std
2023-01-08 23:39:06,365:INFO:Creating metrics dataframe
2023-01-08 23:39:06,368:INFO:Uploading results into container
2023-01-08 23:39:06,368:INFO:Uploading model into container now
2023-01-08 23:39:06,368:INFO:_master_model_container: 4
2023-01-08 23:39:06,369:INFO:_display_container: 2
2023-01-08 23:39:06,369:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8660, splitter='best')
2023-01-08 23:39:06,369:INFO:create_model() successfully completed......................................
2023-01-08 23:39:06,440:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:06,440:INFO:Creating metrics dataframe
2023-01-08 23:39:06,445:INFO:Initializing SVM - Linear Kernel
2023-01-08 23:39:06,445:INFO:Total runtime is 0.13639406760533648 minutes
2023-01-08 23:39:06,445:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:06,445:INFO:Initializing create_model()
2023-01-08 23:39:06,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:06,445:INFO:Checking exceptions
2023-01-08 23:39:06,445:INFO:Importing libraries
2023-01-08 23:39:06,445:INFO:Copying training dataset
2023-01-08 23:39:06,447:INFO:Defining folds
2023-01-08 23:39:06,447:INFO:Declaring metric variables
2023-01-08 23:39:06,447:INFO:Importing untrained model
2023-01-08 23:39:06,447:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 23:39:06,447:INFO:Starting cross validation
2023-01-08 23:39:06,448:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:06,504:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,507:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,507:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,510:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,510:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,511:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:06,513:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,517:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,520:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,522:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,522:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,525:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,525:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:06,527:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,537:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,538:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:06,538:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,538:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,539:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,540:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:06,540:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,541:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,541:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,541:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,543:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,546:INFO:Calculating mean and std
2023-01-08 23:39:06,547:INFO:Creating metrics dataframe
2023-01-08 23:39:06,550:INFO:Uploading results into container
2023-01-08 23:39:06,550:INFO:Uploading model into container now
2023-01-08 23:39:06,551:INFO:_master_model_container: 5
2023-01-08 23:39:06,551:INFO:_display_container: 2
2023-01-08 23:39:06,551:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8660, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 23:39:06,551:INFO:create_model() successfully completed......................................
2023-01-08 23:39:06,629:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:06,629:INFO:Creating metrics dataframe
2023-01-08 23:39:06,634:INFO:Initializing Ridge Classifier
2023-01-08 23:39:06,634:INFO:Total runtime is 0.13952958981196084 minutes
2023-01-08 23:39:06,634:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:06,634:INFO:Initializing create_model()
2023-01-08 23:39:06,634:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:06,634:INFO:Checking exceptions
2023-01-08 23:39:06,634:INFO:Importing libraries
2023-01-08 23:39:06,634:INFO:Copying training dataset
2023-01-08 23:39:06,636:INFO:Defining folds
2023-01-08 23:39:06,636:INFO:Declaring metric variables
2023-01-08 23:39:06,636:INFO:Importing untrained model
2023-01-08 23:39:06,636:INFO:Ridge Classifier Imported successfully
2023-01-08 23:39:06,636:INFO:Starting cross validation
2023-01-08 23:39:06,637:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:06,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,682:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,684:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,684:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,686:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,686:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,691:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,699:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,699:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,702:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,703:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,707:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,710:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,710:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,710:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,710:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:06,711:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,711:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,714:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,715:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,716:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:06,718:INFO:Calculating mean and std
2023-01-08 23:39:06,719:INFO:Creating metrics dataframe
2023-01-08 23:39:06,722:INFO:Uploading results into container
2023-01-08 23:39:06,723:INFO:Uploading model into container now
2023-01-08 23:39:06,723:INFO:_master_model_container: 6
2023-01-08 23:39:06,723:INFO:_display_container: 2
2023-01-08 23:39:06,723:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8660, solver='auto', tol=0.001)
2023-01-08 23:39:06,723:INFO:create_model() successfully completed......................................
2023-01-08 23:39:06,796:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:06,796:INFO:Creating metrics dataframe
2023-01-08 23:39:06,800:INFO:Initializing Random Forest Classifier
2023-01-08 23:39:06,800:INFO:Total runtime is 0.14230169852574664 minutes
2023-01-08 23:39:06,800:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:06,801:INFO:Initializing create_model()
2023-01-08 23:39:06,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:06,801:INFO:Checking exceptions
2023-01-08 23:39:06,801:INFO:Importing libraries
2023-01-08 23:39:06,801:INFO:Copying training dataset
2023-01-08 23:39:06,802:INFO:Defining folds
2023-01-08 23:39:06,802:INFO:Declaring metric variables
2023-01-08 23:39:06,802:INFO:Importing untrained model
2023-01-08 23:39:06,803:INFO:Random Forest Classifier Imported successfully
2023-01-08 23:39:06,803:INFO:Starting cross validation
2023-01-08 23:39:06,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:07,197:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,204:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,207:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,209:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,209:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,210:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,211:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,211:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,212:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,212:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,218:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,224:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,226:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,228:INFO:Calculating mean and std
2023-01-08 23:39:07,229:INFO:Creating metrics dataframe
2023-01-08 23:39:07,232:INFO:Uploading results into container
2023-01-08 23:39:07,233:INFO:Uploading model into container now
2023-01-08 23:39:07,233:INFO:_master_model_container: 7
2023-01-08 23:39:07,233:INFO:_display_container: 2
2023-01-08 23:39:07,234:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8660, verbose=0, warm_start=False)
2023-01-08 23:39:07,234:INFO:create_model() successfully completed......................................
2023-01-08 23:39:07,313:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:07,314:INFO:Creating metrics dataframe
2023-01-08 23:39:07,318:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 23:39:07,318:INFO:Total runtime is 0.15093086957931517 minutes
2023-01-08 23:39:07,318:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:07,318:INFO:Initializing create_model()
2023-01-08 23:39:07,319:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:07,319:INFO:Checking exceptions
2023-01-08 23:39:07,319:INFO:Importing libraries
2023-01-08 23:39:07,319:INFO:Copying training dataset
2023-01-08 23:39:07,320:INFO:Defining folds
2023-01-08 23:39:07,321:INFO:Declaring metric variables
2023-01-08 23:39:07,321:INFO:Importing untrained model
2023-01-08 23:39:07,321:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 23:39:07,321:INFO:Starting cross validation
2023-01-08 23:39:07,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:07,392:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,394:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,394:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,396:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,397:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,397:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,399:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,399:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,401:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,402:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,406:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,410:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,412:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,412:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,413:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,413:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,414:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,414:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,414:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,418:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,422:INFO:Calculating mean and std
2023-01-08 23:39:07,423:INFO:Creating metrics dataframe
2023-01-08 23:39:07,426:INFO:Uploading results into container
2023-01-08 23:39:07,426:INFO:Uploading model into container now
2023-01-08 23:39:07,427:INFO:_master_model_container: 8
2023-01-08 23:39:07,427:INFO:_display_container: 2
2023-01-08 23:39:07,427:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:39:07,427:INFO:create_model() successfully completed......................................
2023-01-08 23:39:07,506:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:07,506:INFO:Creating metrics dataframe
2023-01-08 23:39:07,512:INFO:Initializing Ada Boost Classifier
2023-01-08 23:39:07,512:INFO:Total runtime is 0.15417219003041585 minutes
2023-01-08 23:39:07,512:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:07,512:INFO:Initializing create_model()
2023-01-08 23:39:07,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:07,512:INFO:Checking exceptions
2023-01-08 23:39:07,512:INFO:Importing libraries
2023-01-08 23:39:07,512:INFO:Copying training dataset
2023-01-08 23:39:07,514:INFO:Defining folds
2023-01-08 23:39:07,514:INFO:Declaring metric variables
2023-01-08 23:39:07,514:INFO:Importing untrained model
2023-01-08 23:39:07,514:INFO:Ada Boost Classifier Imported successfully
2023-01-08 23:39:07,515:INFO:Starting cross validation
2023-01-08 23:39:07,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:07,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,722:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,723:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,727:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,727:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,729:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,729:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,731:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,735:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,736:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,737:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,738:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,738:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,740:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,740:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,746:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,747:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,752:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,753:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,754:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:07,757:INFO:Calculating mean and std
2023-01-08 23:39:07,758:INFO:Creating metrics dataframe
2023-01-08 23:39:07,761:INFO:Uploading results into container
2023-01-08 23:39:07,762:INFO:Uploading model into container now
2023-01-08 23:39:07,763:INFO:_master_model_container: 9
2023-01-08 23:39:07,763:INFO:_display_container: 2
2023-01-08 23:39:07,763:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8660)
2023-01-08 23:39:07,763:INFO:create_model() successfully completed......................................
2023-01-08 23:39:07,863:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:07,864:INFO:Creating metrics dataframe
2023-01-08 23:39:07,868:INFO:Initializing Gradient Boosting Classifier
2023-01-08 23:39:07,868:INFO:Total runtime is 0.1601063847541809 minutes
2023-01-08 23:39:07,868:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:07,869:INFO:Initializing create_model()
2023-01-08 23:39:07,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:07,869:INFO:Checking exceptions
2023-01-08 23:39:07,869:INFO:Importing libraries
2023-01-08 23:39:07,869:INFO:Copying training dataset
2023-01-08 23:39:07,871:INFO:Defining folds
2023-01-08 23:39:07,871:INFO:Declaring metric variables
2023-01-08 23:39:07,872:INFO:Importing untrained model
2023-01-08 23:39:07,872:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 23:39:07,872:INFO:Starting cross validation
2023-01-08 23:39:07,873:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:08,272:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,274:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,277:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,281:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,281:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,284:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,289:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,293:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,296:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,296:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,297:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,300:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,301:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,304:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,307:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,308:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,309:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,312:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,314:INFO:Calculating mean and std
2023-01-08 23:39:08,315:INFO:Creating metrics dataframe
2023-01-08 23:39:08,318:INFO:Uploading results into container
2023-01-08 23:39:08,319:INFO:Uploading model into container now
2023-01-08 23:39:08,319:INFO:_master_model_container: 10
2023-01-08 23:39:08,319:INFO:_display_container: 2
2023-01-08 23:39:08,320:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8660, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 23:39:08,320:INFO:create_model() successfully completed......................................
2023-01-08 23:39:08,400:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:08,400:INFO:Creating metrics dataframe
2023-01-08 23:39:08,404:INFO:Initializing Linear Discriminant Analysis
2023-01-08 23:39:08,404:INFO:Total runtime is 0.16903369426727294 minutes
2023-01-08 23:39:08,404:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:08,404:INFO:Initializing create_model()
2023-01-08 23:39:08,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:08,405:INFO:Checking exceptions
2023-01-08 23:39:08,405:INFO:Importing libraries
2023-01-08 23:39:08,405:INFO:Copying training dataset
2023-01-08 23:39:08,406:INFO:Defining folds
2023-01-08 23:39:08,406:INFO:Declaring metric variables
2023-01-08 23:39:08,406:INFO:Importing untrained model
2023-01-08 23:39:08,407:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 23:39:08,407:INFO:Starting cross validation
2023-01-08 23:39:08,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:08,479:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,482:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,485:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,486:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,500:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,501:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,504:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,505:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,507:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,507:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,507:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,508:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,508:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,509:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,511:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,510:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,512:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,512:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,512:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,512:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,515:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,515:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,515:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,516:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,518:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,518:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,519:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:08,525:INFO:Calculating mean and std
2023-01-08 23:39:08,526:INFO:Creating metrics dataframe
2023-01-08 23:39:08,533:INFO:Uploading results into container
2023-01-08 23:39:08,534:INFO:Uploading model into container now
2023-01-08 23:39:08,535:INFO:_master_model_container: 11
2023-01-08 23:39:08,535:INFO:_display_container: 2
2023-01-08 23:39:08,536:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 23:39:08,536:INFO:create_model() successfully completed......................................
2023-01-08 23:39:08,656:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:08,656:INFO:Creating metrics dataframe
2023-01-08 23:39:08,663:INFO:Initializing Extra Trees Classifier
2023-01-08 23:39:08,663:INFO:Total runtime is 0.1733478307723999 minutes
2023-01-08 23:39:08,664:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:08,664:INFO:Initializing create_model()
2023-01-08 23:39:08,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:08,664:INFO:Checking exceptions
2023-01-08 23:39:08,664:INFO:Importing libraries
2023-01-08 23:39:08,664:INFO:Copying training dataset
2023-01-08 23:39:08,667:INFO:Defining folds
2023-01-08 23:39:08,667:INFO:Declaring metric variables
2023-01-08 23:39:08,668:INFO:Importing untrained model
2023-01-08 23:39:08,668:INFO:Extra Trees Classifier Imported successfully
2023-01-08 23:39:08,669:INFO:Starting cross validation
2023-01-08 23:39:08,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:09,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,097:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,102:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,116:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,121:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,123:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,125:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,128:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,138:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,140:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,141:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,142:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,143:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,154:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,157:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,158:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,163:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,165:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,167:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,173:INFO:Calculating mean and std
2023-01-08 23:39:09,174:INFO:Creating metrics dataframe
2023-01-08 23:39:09,180:INFO:Uploading results into container
2023-01-08 23:39:09,182:INFO:Uploading model into container now
2023-01-08 23:39:09,182:INFO:_master_model_container: 12
2023-01-08 23:39:09,182:INFO:_display_container: 2
2023-01-08 23:39:09,183:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8660, verbose=0, warm_start=False)
2023-01-08 23:39:09,183:INFO:create_model() successfully completed......................................
2023-01-08 23:39:09,290:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:09,290:INFO:Creating metrics dataframe
2023-01-08 23:39:09,300:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 23:39:09,300:INFO:Total runtime is 0.18397736152013142 minutes
2023-01-08 23:39:09,300:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:09,301:INFO:Initializing create_model()
2023-01-08 23:39:09,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:09,301:INFO:Checking exceptions
2023-01-08 23:39:09,301:INFO:Importing libraries
2023-01-08 23:39:09,301:INFO:Copying training dataset
2023-01-08 23:39:09,306:INFO:Defining folds
2023-01-08 23:39:09,306:INFO:Declaring metric variables
2023-01-08 23:39:09,306:INFO:Importing untrained model
2023-01-08 23:39:09,307:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 23:39:09,307:INFO:Starting cross validation
2023-01-08 23:39:09,308:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:09,482:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,484:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,509:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,513:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,514:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,516:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,517:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,519:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,521:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,524:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,537:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,547:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,553:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,554:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,557:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,558:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,559:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,562:INFO:Calculating mean and std
2023-01-08 23:39:09,563:INFO:Creating metrics dataframe
2023-01-08 23:39:09,568:INFO:Uploading results into container
2023-01-08 23:39:09,568:INFO:Uploading model into container now
2023-01-08 23:39:09,569:INFO:_master_model_container: 13
2023-01-08 23:39:09,569:INFO:_display_container: 2
2023-01-08 23:39:09,570:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8660, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 23:39:09,570:INFO:create_model() successfully completed......................................
2023-01-08 23:39:09,675:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:09,675:INFO:Creating metrics dataframe
2023-01-08 23:39:09,680:INFO:Initializing Dummy Classifier
2023-01-08 23:39:09,680:INFO:Total runtime is 0.19031089146931965 minutes
2023-01-08 23:39:09,681:INFO:SubProcess create_model() called ==================================
2023-01-08 23:39:09,681:INFO:Initializing create_model()
2023-01-08 23:39:09,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B946D60>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:09,681:INFO:Checking exceptions
2023-01-08 23:39:09,681:INFO:Importing libraries
2023-01-08 23:39:09,681:INFO:Copying training dataset
2023-01-08 23:39:09,683:INFO:Defining folds
2023-01-08 23:39:09,683:INFO:Declaring metric variables
2023-01-08 23:39:09,684:INFO:Importing untrained model
2023-01-08 23:39:09,684:INFO:Dummy Classifier Imported successfully
2023-01-08 23:39:09,685:INFO:Starting cross validation
2023-01-08 23:39:09,686:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:39:09,758:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,758:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,762:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:09,763:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:09,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,767:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,771:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:09,773:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,777:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,780:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,781:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:09,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,783:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,783:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,784:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,785:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,785:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:09,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:09,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,789:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:09,791:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,791:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,791:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:09,792:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:09,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,799:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:39:09,799:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:39:09,803:INFO:Calculating mean and std
2023-01-08 23:39:09,804:INFO:Creating metrics dataframe
2023-01-08 23:39:09,807:INFO:Uploading results into container
2023-01-08 23:39:09,808:INFO:Uploading model into container now
2023-01-08 23:39:09,809:INFO:_master_model_container: 14
2023-01-08 23:39:09,809:INFO:_display_container: 2
2023-01-08 23:39:09,809:INFO:DummyClassifier(constant=None, random_state=8660, strategy='prior')
2023-01-08 23:39:09,809:INFO:create_model() successfully completed......................................
2023-01-08 23:39:09,909:INFO:SubProcess create_model() end ==================================
2023-01-08 23:39:09,909:INFO:Creating metrics dataframe
2023-01-08 23:39:09,923:INFO:Initializing create_model()
2023-01-08 23:39:09,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BC2B7C0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:39:09,923:INFO:Checking exceptions
2023-01-08 23:39:09,924:INFO:Importing libraries
2023-01-08 23:39:09,925:INFO:Copying training dataset
2023-01-08 23:39:09,930:INFO:Defining folds
2023-01-08 23:39:09,930:INFO:Declaring metric variables
2023-01-08 23:39:09,930:INFO:Importing untrained model
2023-01-08 23:39:09,931:INFO:Declaring custom model
2023-01-08 23:39:09,932:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 23:39:09,934:INFO:Cross validation set to False
2023-01-08 23:39:09,934:INFO:Fitting Model
2023-01-08 23:39:09,977:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:39:09,977:INFO:create_model() successfully completed......................................
2023-01-08 23:39:10,109:INFO:_master_model_container: 14
2023-01-08 23:39:10,109:INFO:_display_container: 2
2023-01-08 23:39:10,110:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:39:10,110:INFO:compare_models() successfully completed......................................
2023-01-08 23:41:54,506:INFO:PyCaret ClassificationExperiment
2023-01-08 23:41:54,506:INFO:Logging name: clf-default-name
2023-01-08 23:41:54,506:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 23:41:54,506:INFO:version 3.0.0.rc6
2023-01-08 23:41:54,506:INFO:Initializing setup()
2023-01-08 23:41:54,506:INFO:self.USI: 6caf
2023-01-08 23:41:54,507:INFO:self._variable_keys: {'memory', 'X', 'gpu_param', 'pipeline', 'data', 'y_test', 'target_param', 'fold_groups_param', 'n_jobs_param', 'X_test', 'y_train', 'idx', 'seed', 'X_train', 'exp_id', '_available_plots', 'fold_shuffle_param', '_ml_usecase', 'y', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_generator', 'html_param', 'USI', 'log_plots_param', 'is_multiclass', 'logging_param', 'exp_name_log'}
2023-01-08 23:41:54,507:INFO:Checking environment
2023-01-08 23:41:54,507:INFO:python_version: 3.9.15
2023-01-08 23:41:54,507:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 23:41:54,507:INFO:machine: AMD64
2023-01-08 23:41:54,507:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 23:41:54,507:INFO:Memory: svmem(total=17010110464, available=2329620480, percent=86.3, used=14680489984, free=2329620480)
2023-01-08 23:41:54,507:INFO:Physical Core: 6
2023-01-08 23:41:54,507:INFO:Logical Core: 12
2023-01-08 23:41:54,507:INFO:Checking libraries
2023-01-08 23:41:54,508:INFO:System:
2023-01-08 23:41:54,508:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 23:41:54,508:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 23:41:54,508:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 23:41:54,508:INFO:PyCaret required dependencies:
2023-01-08 23:41:54,508:INFO:                 pip: 22.3.1
2023-01-08 23:41:54,508:INFO:          setuptools: 65.6.3
2023-01-08 23:41:54,508:INFO:             pycaret: 3.0.0rc6
2023-01-08 23:41:54,508:INFO:             IPython: 8.8.0
2023-01-08 23:41:54,508:INFO:          ipywidgets: 8.0.4
2023-01-08 23:41:54,508:INFO:                tqdm: 4.64.1
2023-01-08 23:41:54,508:INFO:               numpy: 1.22.4
2023-01-08 23:41:54,508:INFO:              pandas: 1.5.2
2023-01-08 23:41:54,508:INFO:              jinja2: 3.1.2
2023-01-08 23:41:54,508:INFO:               scipy: 1.9.3
2023-01-08 23:41:54,509:INFO:              joblib: 1.2.0
2023-01-08 23:41:54,509:INFO:             sklearn: 1.1.3
2023-01-08 23:41:54,509:INFO:                pyod: 1.0.7
2023-01-08 23:41:54,509:INFO:            imblearn: 0.10.1
2023-01-08 23:41:54,509:INFO:   category_encoders: 2.5.1.post0
2023-01-08 23:41:54,509:INFO:            lightgbm: 3.3.4
2023-01-08 23:41:54,509:INFO:               numba: 0.56.4
2023-01-08 23:41:54,509:INFO:            requests: 2.28.1
2023-01-08 23:41:54,509:INFO:          matplotlib: 3.6.2
2023-01-08 23:41:54,509:INFO:          scikitplot: 0.3.7
2023-01-08 23:41:54,509:INFO:         yellowbrick: 1.5
2023-01-08 23:41:54,509:INFO:              plotly: 5.11.0
2023-01-08 23:41:54,509:INFO:             kaleido: 0.2.1
2023-01-08 23:41:54,509:INFO:         statsmodels: 0.13.5
2023-01-08 23:41:54,509:INFO:              sktime: 0.14.1
2023-01-08 23:41:54,509:INFO:               tbats: 1.1.2
2023-01-08 23:41:54,509:INFO:            pmdarima: 2.0.2
2023-01-08 23:41:54,509:INFO:              psutil: 5.9.0
2023-01-08 23:41:54,509:INFO:PyCaret optional dependencies:
2023-01-08 23:41:54,510:INFO:                shap: Not installed
2023-01-08 23:41:54,510:INFO:           interpret: Not installed
2023-01-08 23:41:54,510:INFO:                umap: Not installed
2023-01-08 23:41:54,510:INFO:    pandas_profiling: 3.6.2
2023-01-08 23:41:54,510:INFO:  explainerdashboard: Not installed
2023-01-08 23:41:54,510:INFO:             autoviz: Not installed
2023-01-08 23:41:54,510:INFO:           fairlearn: Not installed
2023-01-08 23:41:54,510:INFO:             xgboost: Not installed
2023-01-08 23:41:54,510:INFO:            catboost: Not installed
2023-01-08 23:41:54,510:INFO:              kmodes: Not installed
2023-01-08 23:41:54,510:INFO:             mlxtend: Not installed
2023-01-08 23:41:54,510:INFO:       statsforecast: Not installed
2023-01-08 23:41:54,510:INFO:        tune_sklearn: Not installed
2023-01-08 23:41:54,511:INFO:                 ray: Not installed
2023-01-08 23:41:54,511:INFO:            hyperopt: Not installed
2023-01-08 23:41:54,511:INFO:              optuna: Not installed
2023-01-08 23:41:54,511:INFO:               skopt: Not installed
2023-01-08 23:41:54,511:INFO:              mlflow: Not installed
2023-01-08 23:41:54,511:INFO:              gradio: Not installed
2023-01-08 23:41:54,511:INFO:             fastapi: Not installed
2023-01-08 23:41:54,511:INFO:             uvicorn: Not installed
2023-01-08 23:41:54,511:INFO:              m2cgen: Not installed
2023-01-08 23:41:54,511:INFO:           evidently: Not installed
2023-01-08 23:41:54,511:INFO:                nltk: Not installed
2023-01-08 23:41:54,511:INFO:            pyLDAvis: Not installed
2023-01-08 23:41:54,511:INFO:              gensim: Not installed
2023-01-08 23:41:54,511:INFO:               spacy: Not installed
2023-01-08 23:41:54,511:INFO:           wordcloud: Not installed
2023-01-08 23:41:54,511:INFO:            textblob: Not installed
2023-01-08 23:41:54,512:INFO:               fugue: Not installed
2023-01-08 23:41:54,512:INFO:           streamlit: 1.16.0
2023-01-08 23:41:54,512:INFO:             prophet: Not installed
2023-01-08 23:41:54,512:INFO:None
2023-01-08 23:41:54,512:INFO:Set up data.
2023-01-08 23:41:54,517:INFO:Set up train/test split.
2023-01-08 23:41:54,521:INFO:Set up index.
2023-01-08 23:41:54,521:INFO:Set up folding strategy.
2023-01-08 23:41:54,521:INFO:Assigning column types.
2023-01-08 23:41:54,524:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 23:41:54,566:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:41:54,567:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:41:54,591:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,630:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:41:54,631:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:41:54,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,655:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 23:41:54,696:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:41:54,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,761:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:41:54,785:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,785:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 23:41:54,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,914:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:54,916:INFO:Preparing preprocessing pipeline...
2023-01-08 23:41:54,916:INFO:Set up label encoding.
2023-01-08 23:41:54,917:INFO:Set up simple imputation.
2023-01-08 23:41:54,956:INFO:Finished creating preprocessing pipeline.
2023-01-08 23:41:54,959:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 23:41:54,960:INFO:Creating final display dataframe.
2023-01-08 23:41:55,149:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               7248
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               6caf
2023-01-08 23:41:55,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:55,228:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:55,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:55,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:41:55,293:INFO:setup() successfully completed in 0.79s...............
2023-01-08 23:41:55,295:INFO:Initializing compare_models()
2023-01-08 23:41:55,295:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 23:41:55,295:INFO:Checking exceptions
2023-01-08 23:41:55,298:INFO:Preparing display monitor
2023-01-08 23:41:55,300:INFO:Initializing Logistic Regression
2023-01-08 23:41:55,300:INFO:Total runtime is 0.0 minutes
2023-01-08 23:41:55,300:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:55,300:INFO:Initializing create_model()
2023-01-08 23:41:55,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:55,301:INFO:Checking exceptions
2023-01-08 23:41:55,301:INFO:Importing libraries
2023-01-08 23:41:55,301:INFO:Copying training dataset
2023-01-08 23:41:55,303:INFO:Defining folds
2023-01-08 23:41:55,303:INFO:Declaring metric variables
2023-01-08 23:41:55,303:INFO:Importing untrained model
2023-01-08 23:41:55,303:INFO:Logistic Regression Imported successfully
2023-01-08 23:41:55,303:INFO:Starting cross validation
2023-01-08 23:41:55,304:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:55,601:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,605:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,607:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,608:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,612:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,613:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,613:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,614:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,616:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,625:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,625:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,626:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,628:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,628:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,628:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,630:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,630:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,630:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,632:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,633:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,639:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,640:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,642:INFO:Calculating mean and std
2023-01-08 23:41:55,643:INFO:Creating metrics dataframe
2023-01-08 23:41:55,646:INFO:Uploading results into container
2023-01-08 23:41:55,646:INFO:Uploading model into container now
2023-01-08 23:41:55,647:INFO:_master_model_container: 1
2023-01-08 23:41:55,647:INFO:_display_container: 2
2023-01-08 23:41:55,647:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7248, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 23:41:55,647:INFO:create_model() successfully completed......................................
2023-01-08 23:41:55,726:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:55,726:INFO:Creating metrics dataframe
2023-01-08 23:41:55,729:INFO:Initializing K Neighbors Classifier
2023-01-08 23:41:55,729:INFO:Total runtime is 0.007164152463277181 minutes
2023-01-08 23:41:55,730:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:55,730:INFO:Initializing create_model()
2023-01-08 23:41:55,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:55,730:INFO:Checking exceptions
2023-01-08 23:41:55,730:INFO:Importing libraries
2023-01-08 23:41:55,730:INFO:Copying training dataset
2023-01-08 23:41:55,731:INFO:Defining folds
2023-01-08 23:41:55,731:INFO:Declaring metric variables
2023-01-08 23:41:55,732:INFO:Importing untrained model
2023-01-08 23:41:55,732:INFO:K Neighbors Classifier Imported successfully
2023-01-08 23:41:55,732:INFO:Starting cross validation
2023-01-08 23:41:55,732:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:55,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,841:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,843:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,844:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,847:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,850:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,851:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,854:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,857:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,860:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,861:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,863:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,865:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,867:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,869:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,869:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,869:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,870:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,870:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,872:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,872:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,875:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,876:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,877:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,878:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,879:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,880:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:55,882:INFO:Calculating mean and std
2023-01-08 23:41:55,883:INFO:Creating metrics dataframe
2023-01-08 23:41:55,886:INFO:Uploading results into container
2023-01-08 23:41:55,886:INFO:Uploading model into container now
2023-01-08 23:41:55,887:INFO:_master_model_container: 2
2023-01-08 23:41:55,887:INFO:_display_container: 2
2023-01-08 23:41:55,887:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 23:41:55,887:INFO:create_model() successfully completed......................................
2023-01-08 23:41:55,963:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:55,963:INFO:Creating metrics dataframe
2023-01-08 23:41:55,968:INFO:Initializing Naive Bayes
2023-01-08 23:41:55,968:INFO:Total runtime is 0.011145349343617758 minutes
2023-01-08 23:41:55,968:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:55,968:INFO:Initializing create_model()
2023-01-08 23:41:55,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:55,968:INFO:Checking exceptions
2023-01-08 23:41:55,968:INFO:Importing libraries
2023-01-08 23:41:55,969:INFO:Copying training dataset
2023-01-08 23:41:55,970:INFO:Defining folds
2023-01-08 23:41:55,970:INFO:Declaring metric variables
2023-01-08 23:41:55,971:INFO:Importing untrained model
2023-01-08 23:41:55,971:INFO:Naive Bayes Imported successfully
2023-01-08 23:41:55,971:INFO:Starting cross validation
2023-01-08 23:41:55,972:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:56,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,039:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,039:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,042:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,042:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,045:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,049:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,051:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,051:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,059:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,061:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,067:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,069:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,070:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,076:INFO:Calculating mean and std
2023-01-08 23:41:56,076:INFO:Creating metrics dataframe
2023-01-08 23:41:56,080:INFO:Uploading results into container
2023-01-08 23:41:56,080:INFO:Uploading model into container now
2023-01-08 23:41:56,081:INFO:_master_model_container: 3
2023-01-08 23:41:56,081:INFO:_display_container: 2
2023-01-08 23:41:56,081:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 23:41:56,081:INFO:create_model() successfully completed......................................
2023-01-08 23:41:56,163:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:56,163:INFO:Creating metrics dataframe
2023-01-08 23:41:56,167:INFO:Initializing Decision Tree Classifier
2023-01-08 23:41:56,167:INFO:Total runtime is 0.014453168710072836 minutes
2023-01-08 23:41:56,167:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:56,168:INFO:Initializing create_model()
2023-01-08 23:41:56,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:56,168:INFO:Checking exceptions
2023-01-08 23:41:56,168:INFO:Importing libraries
2023-01-08 23:41:56,168:INFO:Copying training dataset
2023-01-08 23:41:56,169:INFO:Defining folds
2023-01-08 23:41:56,169:INFO:Declaring metric variables
2023-01-08 23:41:56,170:INFO:Importing untrained model
2023-01-08 23:41:56,170:INFO:Decision Tree Classifier Imported successfully
2023-01-08 23:41:56,170:INFO:Starting cross validation
2023-01-08 23:41:56,171:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:56,230:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,235:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,236:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,238:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,238:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,240:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,241:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,243:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,245:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,245:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,250:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,253:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,253:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,254:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,254:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,255:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,255:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,261:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,265:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,268:INFO:Calculating mean and std
2023-01-08 23:41:56,270:INFO:Creating metrics dataframe
2023-01-08 23:41:56,273:INFO:Uploading results into container
2023-01-08 23:41:56,273:INFO:Uploading model into container now
2023-01-08 23:41:56,274:INFO:_master_model_container: 4
2023-01-08 23:41:56,274:INFO:_display_container: 2
2023-01-08 23:41:56,274:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7248, splitter='best')
2023-01-08 23:41:56,274:INFO:create_model() successfully completed......................................
2023-01-08 23:41:56,349:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:56,349:INFO:Creating metrics dataframe
2023-01-08 23:41:56,353:INFO:Initializing SVM - Linear Kernel
2023-01-08 23:41:56,353:INFO:Total runtime is 0.017558618386586507 minutes
2023-01-08 23:41:56,354:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:56,354:INFO:Initializing create_model()
2023-01-08 23:41:56,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:56,354:INFO:Checking exceptions
2023-01-08 23:41:56,354:INFO:Importing libraries
2023-01-08 23:41:56,354:INFO:Copying training dataset
2023-01-08 23:41:56,356:INFO:Defining folds
2023-01-08 23:41:56,356:INFO:Declaring metric variables
2023-01-08 23:41:56,356:INFO:Importing untrained model
2023-01-08 23:41:56,356:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 23:41:56,357:INFO:Starting cross validation
2023-01-08 23:41:56,357:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:56,409:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,412:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,414:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,417:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,422:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,425:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,429:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,431:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,438:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,438:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:56,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,440:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,445:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,445:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:56,446:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,451:INFO:Calculating mean and std
2023-01-08 23:41:56,452:INFO:Creating metrics dataframe
2023-01-08 23:41:56,455:INFO:Uploading results into container
2023-01-08 23:41:56,455:INFO:Uploading model into container now
2023-01-08 23:41:56,456:INFO:_master_model_container: 5
2023-01-08 23:41:56,456:INFO:_display_container: 2
2023-01-08 23:41:56,456:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7248, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 23:41:56,456:INFO:create_model() successfully completed......................................
2023-01-08 23:41:56,529:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:56,529:INFO:Creating metrics dataframe
2023-01-08 23:41:56,533:INFO:Initializing Ridge Classifier
2023-01-08 23:41:56,533:INFO:Total runtime is 0.020551510651906333 minutes
2023-01-08 23:41:56,533:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:56,533:INFO:Initializing create_model()
2023-01-08 23:41:56,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:56,534:INFO:Checking exceptions
2023-01-08 23:41:56,534:INFO:Importing libraries
2023-01-08 23:41:56,534:INFO:Copying training dataset
2023-01-08 23:41:56,535:INFO:Defining folds
2023-01-08 23:41:56,535:INFO:Declaring metric variables
2023-01-08 23:41:56,536:INFO:Importing untrained model
2023-01-08 23:41:56,536:INFO:Ridge Classifier Imported successfully
2023-01-08 23:41:56,536:INFO:Starting cross validation
2023-01-08 23:41:56,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:56,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,581:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,582:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,582:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,583:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,585:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,592:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,593:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,598:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,599:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,600:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,600:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,600:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,601:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,601:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,604:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,605:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,607:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,608:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,609:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:56,611:INFO:Calculating mean and std
2023-01-08 23:41:56,612:INFO:Creating metrics dataframe
2023-01-08 23:41:56,615:INFO:Uploading results into container
2023-01-08 23:41:56,616:INFO:Uploading model into container now
2023-01-08 23:41:56,616:INFO:_master_model_container: 6
2023-01-08 23:41:56,616:INFO:_display_container: 2
2023-01-08 23:41:56,616:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=7248, solver='auto', tol=0.001)
2023-01-08 23:41:56,616:INFO:create_model() successfully completed......................................
2023-01-08 23:41:56,687:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:56,687:INFO:Creating metrics dataframe
2023-01-08 23:41:56,691:INFO:Initializing Random Forest Classifier
2023-01-08 23:41:56,691:INFO:Total runtime is 0.02319456736246745 minutes
2023-01-08 23:41:56,691:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:56,692:INFO:Initializing create_model()
2023-01-08 23:41:56,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:56,692:INFO:Checking exceptions
2023-01-08 23:41:56,692:INFO:Importing libraries
2023-01-08 23:41:56,692:INFO:Copying training dataset
2023-01-08 23:41:56,693:INFO:Defining folds
2023-01-08 23:41:56,693:INFO:Declaring metric variables
2023-01-08 23:41:56,694:INFO:Importing untrained model
2023-01-08 23:41:56,694:INFO:Random Forest Classifier Imported successfully
2023-01-08 23:41:56,694:INFO:Starting cross validation
2023-01-08 23:41:56,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:57,041:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,059:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,061:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,069:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,075:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,075:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,077:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,077:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,077:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,079:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,087:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,087:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,089:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,092:INFO:Calculating mean and std
2023-01-08 23:41:57,092:INFO:Creating metrics dataframe
2023-01-08 23:41:57,095:INFO:Uploading results into container
2023-01-08 23:41:57,096:INFO:Uploading model into container now
2023-01-08 23:41:57,096:INFO:_master_model_container: 7
2023-01-08 23:41:57,096:INFO:_display_container: 2
2023-01-08 23:41:57,097:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7248, verbose=0, warm_start=False)
2023-01-08 23:41:57,097:INFO:create_model() successfully completed......................................
2023-01-08 23:41:57,172:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:57,172:INFO:Creating metrics dataframe
2023-01-08 23:41:57,177:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 23:41:57,177:INFO:Total runtime is 0.031288552284240725 minutes
2023-01-08 23:41:57,177:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:57,177:INFO:Initializing create_model()
2023-01-08 23:41:57,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:57,177:INFO:Checking exceptions
2023-01-08 23:41:57,177:INFO:Importing libraries
2023-01-08 23:41:57,177:INFO:Copying training dataset
2023-01-08 23:41:57,179:INFO:Defining folds
2023-01-08 23:41:57,179:INFO:Declaring metric variables
2023-01-08 23:41:57,179:INFO:Importing untrained model
2023-01-08 23:41:57,180:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 23:41:57,180:INFO:Starting cross validation
2023-01-08 23:41:57,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:57,241:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,241:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,243:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,244:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,249:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,257:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,259:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,259:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,261:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,261:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,265:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,269:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,269:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,271:INFO:Calculating mean and std
2023-01-08 23:41:57,272:INFO:Creating metrics dataframe
2023-01-08 23:41:57,275:INFO:Uploading results into container
2023-01-08 23:41:57,276:INFO:Uploading model into container now
2023-01-08 23:41:57,276:INFO:_master_model_container: 8
2023-01-08 23:41:57,276:INFO:_display_container: 2
2023-01-08 23:41:57,277:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:41:57,277:INFO:create_model() successfully completed......................................
2023-01-08 23:41:57,348:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:57,348:INFO:Creating metrics dataframe
2023-01-08 23:41:57,351:INFO:Initializing Ada Boost Classifier
2023-01-08 23:41:57,351:INFO:Total runtime is 0.03419751326243083 minutes
2023-01-08 23:41:57,351:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:57,351:INFO:Initializing create_model()
2023-01-08 23:41:57,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:57,352:INFO:Checking exceptions
2023-01-08 23:41:57,352:INFO:Importing libraries
2023-01-08 23:41:57,352:INFO:Copying training dataset
2023-01-08 23:41:57,353:INFO:Defining folds
2023-01-08 23:41:57,353:INFO:Declaring metric variables
2023-01-08 23:41:57,353:INFO:Importing untrained model
2023-01-08 23:41:57,354:INFO:Ada Boost Classifier Imported successfully
2023-01-08 23:41:57,354:INFO:Starting cross validation
2023-01-08 23:41:57,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:57,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,540:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,547:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,549:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,551:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,553:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,554:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,554:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,558:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,559:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,560:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,561:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,561:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,562:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,563:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,565:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,566:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,566:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,567:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,567:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,568:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,568:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,569:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,570:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:57,573:INFO:Calculating mean and std
2023-01-08 23:41:57,574:INFO:Creating metrics dataframe
2023-01-08 23:41:57,577:INFO:Uploading results into container
2023-01-08 23:41:57,577:INFO:Uploading model into container now
2023-01-08 23:41:57,578:INFO:_master_model_container: 9
2023-01-08 23:41:57,578:INFO:_display_container: 2
2023-01-08 23:41:57,578:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7248)
2023-01-08 23:41:57,578:INFO:create_model() successfully completed......................................
2023-01-08 23:41:57,653:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:57,653:INFO:Creating metrics dataframe
2023-01-08 23:41:57,657:INFO:Initializing Gradient Boosting Classifier
2023-01-08 23:41:57,657:INFO:Total runtime is 0.03928476572036744 minutes
2023-01-08 23:41:57,658:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:57,658:INFO:Initializing create_model()
2023-01-08 23:41:57,658:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:57,658:INFO:Checking exceptions
2023-01-08 23:41:57,658:INFO:Importing libraries
2023-01-08 23:41:57,658:INFO:Copying training dataset
2023-01-08 23:41:57,660:INFO:Defining folds
2023-01-08 23:41:57,660:INFO:Declaring metric variables
2023-01-08 23:41:57,660:INFO:Importing untrained model
2023-01-08 23:41:57,660:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 23:41:57,660:INFO:Starting cross validation
2023-01-08 23:41:57,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:58,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,010:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,013:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,030:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,033:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,043:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,054:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,059:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,059:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,061:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,061:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,067:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,069:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,070:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,076:INFO:Calculating mean and std
2023-01-08 23:41:58,077:INFO:Creating metrics dataframe
2023-01-08 23:41:58,080:INFO:Uploading results into container
2023-01-08 23:41:58,080:INFO:Uploading model into container now
2023-01-08 23:41:58,081:INFO:_master_model_container: 10
2023-01-08 23:41:58,081:INFO:_display_container: 2
2023-01-08 23:41:58,081:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7248, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 23:41:58,081:INFO:create_model() successfully completed......................................
2023-01-08 23:41:58,158:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:58,158:INFO:Creating metrics dataframe
2023-01-08 23:41:58,162:INFO:Initializing Linear Discriminant Analysis
2023-01-08 23:41:58,162:INFO:Total runtime is 0.047714531421661384 minutes
2023-01-08 23:41:58,163:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:58,163:INFO:Initializing create_model()
2023-01-08 23:41:58,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:58,163:INFO:Checking exceptions
2023-01-08 23:41:58,163:INFO:Importing libraries
2023-01-08 23:41:58,163:INFO:Copying training dataset
2023-01-08 23:41:58,164:INFO:Defining folds
2023-01-08 23:41:58,165:INFO:Declaring metric variables
2023-01-08 23:41:58,165:INFO:Importing untrained model
2023-01-08 23:41:58,165:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 23:41:58,165:INFO:Starting cross validation
2023-01-08 23:41:58,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:58,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,231:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,234:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,234:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,234:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,236:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,236:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,238:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,239:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,239:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,249:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,253:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,254:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,255:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,255:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,257:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,259:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,259:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,261:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,263:INFO:Calculating mean and std
2023-01-08 23:41:58,264:INFO:Creating metrics dataframe
2023-01-08 23:41:58,268:INFO:Uploading results into container
2023-01-08 23:41:58,268:INFO:Uploading model into container now
2023-01-08 23:41:58,269:INFO:_master_model_container: 11
2023-01-08 23:41:58,269:INFO:_display_container: 2
2023-01-08 23:41:58,269:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 23:41:58,269:INFO:create_model() successfully completed......................................
2023-01-08 23:41:58,340:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:58,341:INFO:Creating metrics dataframe
2023-01-08 23:41:58,345:INFO:Initializing Extra Trees Classifier
2023-01-08 23:41:58,345:INFO:Total runtime is 0.05074883302052816 minutes
2023-01-08 23:41:58,345:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:58,345:INFO:Initializing create_model()
2023-01-08 23:41:58,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:58,345:INFO:Checking exceptions
2023-01-08 23:41:58,345:INFO:Importing libraries
2023-01-08 23:41:58,345:INFO:Copying training dataset
2023-01-08 23:41:58,347:INFO:Defining folds
2023-01-08 23:41:58,347:INFO:Declaring metric variables
2023-01-08 23:41:58,347:INFO:Importing untrained model
2023-01-08 23:41:58,347:INFO:Extra Trees Classifier Imported successfully
2023-01-08 23:41:58,347:INFO:Starting cross validation
2023-01-08 23:41:58,347:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:58,659:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,665:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,678:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,679:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,680:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,682:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,682:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,683:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,684:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,684:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,686:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,686:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,686:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,687:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,687:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,687:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,693:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,694:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,698:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,699:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,701:INFO:Calculating mean and std
2023-01-08 23:41:58,702:INFO:Creating metrics dataframe
2023-01-08 23:41:58,705:INFO:Uploading results into container
2023-01-08 23:41:58,705:INFO:Uploading model into container now
2023-01-08 23:41:58,706:INFO:_master_model_container: 12
2023-01-08 23:41:58,706:INFO:_display_container: 2
2023-01-08 23:41:58,706:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7248, verbose=0, warm_start=False)
2023-01-08 23:41:58,706:INFO:create_model() successfully completed......................................
2023-01-08 23:41:58,796:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:58,796:INFO:Creating metrics dataframe
2023-01-08 23:41:58,801:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 23:41:58,801:INFO:Total runtime is 0.0583626945813497 minutes
2023-01-08 23:41:58,801:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:58,801:INFO:Initializing create_model()
2023-01-08 23:41:58,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:58,801:INFO:Checking exceptions
2023-01-08 23:41:58,801:INFO:Importing libraries
2023-01-08 23:41:58,801:INFO:Copying training dataset
2023-01-08 23:41:58,803:INFO:Defining folds
2023-01-08 23:41:58,803:INFO:Declaring metric variables
2023-01-08 23:41:58,803:INFO:Importing untrained model
2023-01-08 23:41:58,804:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 23:41:58,804:INFO:Starting cross validation
2023-01-08 23:41:58,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:58,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,904:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,904:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,906:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,908:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,909:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,911:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,917:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,917:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,917:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,919:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,919:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,920:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,920:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,928:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,929:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,931:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,932:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,932:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,933:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,933:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,950:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,951:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,952:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:58,955:INFO:Calculating mean and std
2023-01-08 23:41:58,955:INFO:Creating metrics dataframe
2023-01-08 23:41:58,959:INFO:Uploading results into container
2023-01-08 23:41:58,959:INFO:Uploading model into container now
2023-01-08 23:41:58,960:INFO:_master_model_container: 13
2023-01-08 23:41:58,960:INFO:_display_container: 2
2023-01-08 23:41:58,960:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7248, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 23:41:58,960:INFO:create_model() successfully completed......................................
2023-01-08 23:41:59,039:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:59,039:INFO:Creating metrics dataframe
2023-01-08 23:41:59,045:INFO:Initializing Dummy Classifier
2023-01-08 23:41:59,045:INFO:Total runtime is 0.06241852045059205 minutes
2023-01-08 23:41:59,045:INFO:SubProcess create_model() called ==================================
2023-01-08 23:41:59,045:INFO:Initializing create_model()
2023-01-08 23:41:59,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BAF4E50>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:59,045:INFO:Checking exceptions
2023-01-08 23:41:59,045:INFO:Importing libraries
2023-01-08 23:41:59,045:INFO:Copying training dataset
2023-01-08 23:41:59,047:INFO:Defining folds
2023-01-08 23:41:59,047:INFO:Declaring metric variables
2023-01-08 23:41:59,048:INFO:Importing untrained model
2023-01-08 23:41:59,048:INFO:Dummy Classifier Imported successfully
2023-01-08 23:41:59,048:INFO:Starting cross validation
2023-01-08 23:41:59,049:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:41:59,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,108:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:59,111:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:59,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,116:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,119:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:59,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,124:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:59,125:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,125:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,126:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:59,127:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,128:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,130:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,130:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,131:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,131:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:59,132:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:59,132:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,133:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,133:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,134:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:59,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:59,138:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,138:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,140:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,140:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:41:59,141:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:41:59,143:INFO:Calculating mean and std
2023-01-08 23:41:59,144:INFO:Creating metrics dataframe
2023-01-08 23:41:59,147:INFO:Uploading results into container
2023-01-08 23:41:59,147:INFO:Uploading model into container now
2023-01-08 23:41:59,147:INFO:_master_model_container: 14
2023-01-08 23:41:59,148:INFO:_display_container: 2
2023-01-08 23:41:59,148:INFO:DummyClassifier(constant=None, random_state=7248, strategy='prior')
2023-01-08 23:41:59,148:INFO:create_model() successfully completed......................................
2023-01-08 23:41:59,227:INFO:SubProcess create_model() end ==================================
2023-01-08 23:41:59,228:INFO:Creating metrics dataframe
2023-01-08 23:41:59,233:INFO:Initializing create_model()
2023-01-08 23:41:59,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799700>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:41:59,233:INFO:Checking exceptions
2023-01-08 23:41:59,234:INFO:Importing libraries
2023-01-08 23:41:59,234:INFO:Copying training dataset
2023-01-08 23:41:59,235:INFO:Defining folds
2023-01-08 23:41:59,235:INFO:Declaring metric variables
2023-01-08 23:41:59,236:INFO:Importing untrained model
2023-01-08 23:41:59,236:INFO:Declaring custom model
2023-01-08 23:41:59,236:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 23:41:59,237:INFO:Cross validation set to False
2023-01-08 23:41:59,237:INFO:Fitting Model
2023-01-08 23:41:59,264:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:41:59,264:INFO:create_model() successfully completed......................................
2023-01-08 23:41:59,354:INFO:_master_model_container: 14
2023-01-08 23:41:59,354:INFO:_display_container: 2
2023-01-08 23:41:59,355:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:41:59,355:INFO:compare_models() successfully completed......................................
2023-01-08 23:41:59,360:INFO:Initializing save_model()
2023-01-08 23:41:59,361:INFO:save_model(model=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), model_name=trained_model.pkl, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-08 23:41:59,361:INFO:Adding model into prep_pipe
2023-01-08 23:41:59,365:INFO:trained_model.pkl.pkl saved in current working directory
2023-01-08 23:41:59,369:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2023-01-08 23:41:59,369:INFO:save_model() successfully completed......................................
2023-01-08 23:45:18,020:INFO:PyCaret ClassificationExperiment
2023-01-08 23:45:18,021:INFO:Logging name: clf-default-name
2023-01-08 23:45:18,021:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 23:45:18,021:INFO:version 3.0.0.rc6
2023-01-08 23:45:18,021:INFO:Initializing setup()
2023-01-08 23:45:18,021:INFO:self.USI: 603b
2023-01-08 23:45:18,021:INFO:self._variable_keys: {'memory', 'X', 'gpu_param', 'pipeline', 'data', 'y_test', 'target_param', 'fold_groups_param', 'n_jobs_param', 'X_test', 'y_train', 'idx', 'seed', 'X_train', 'exp_id', '_available_plots', 'fold_shuffle_param', '_ml_usecase', 'y', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_generator', 'html_param', 'USI', 'log_plots_param', 'is_multiclass', 'logging_param', 'exp_name_log'}
2023-01-08 23:45:18,021:INFO:Checking environment
2023-01-08 23:45:18,021:INFO:python_version: 3.9.15
2023-01-08 23:45:18,021:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 23:45:18,021:INFO:machine: AMD64
2023-01-08 23:45:18,021:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 23:45:18,022:INFO:Memory: svmem(total=17010110464, available=2146586624, percent=87.4, used=14863523840, free=2146586624)
2023-01-08 23:45:18,022:INFO:Physical Core: 6
2023-01-08 23:45:18,022:INFO:Logical Core: 12
2023-01-08 23:45:18,022:INFO:Checking libraries
2023-01-08 23:45:18,022:INFO:System:
2023-01-08 23:45:18,022:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 23:45:18,022:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 23:45:18,022:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 23:45:18,022:INFO:PyCaret required dependencies:
2023-01-08 23:45:18,022:INFO:                 pip: 22.3.1
2023-01-08 23:45:18,022:INFO:          setuptools: 65.6.3
2023-01-08 23:45:18,022:INFO:             pycaret: 3.0.0rc6
2023-01-08 23:45:18,022:INFO:             IPython: 8.8.0
2023-01-08 23:45:18,022:INFO:          ipywidgets: 8.0.4
2023-01-08 23:45:18,023:INFO:                tqdm: 4.64.1
2023-01-08 23:45:18,023:INFO:               numpy: 1.22.4
2023-01-08 23:45:18,023:INFO:              pandas: 1.5.2
2023-01-08 23:45:18,023:INFO:              jinja2: 3.1.2
2023-01-08 23:45:18,023:INFO:               scipy: 1.9.3
2023-01-08 23:45:18,023:INFO:              joblib: 1.2.0
2023-01-08 23:45:18,023:INFO:             sklearn: 1.1.3
2023-01-08 23:45:18,023:INFO:                pyod: 1.0.7
2023-01-08 23:45:18,023:INFO:            imblearn: 0.10.1
2023-01-08 23:45:18,023:INFO:   category_encoders: 2.5.1.post0
2023-01-08 23:45:18,023:INFO:            lightgbm: 3.3.4
2023-01-08 23:45:18,023:INFO:               numba: 0.56.4
2023-01-08 23:45:18,023:INFO:            requests: 2.28.1
2023-01-08 23:45:18,023:INFO:          matplotlib: 3.6.2
2023-01-08 23:45:18,023:INFO:          scikitplot: 0.3.7
2023-01-08 23:45:18,024:INFO:         yellowbrick: 1.5
2023-01-08 23:45:18,024:INFO:              plotly: 5.11.0
2023-01-08 23:45:18,024:INFO:             kaleido: 0.2.1
2023-01-08 23:45:18,024:INFO:         statsmodels: 0.13.5
2023-01-08 23:45:18,024:INFO:              sktime: 0.14.1
2023-01-08 23:45:18,024:INFO:               tbats: 1.1.2
2023-01-08 23:45:18,024:INFO:            pmdarima: 2.0.2
2023-01-08 23:45:18,024:INFO:              psutil: 5.9.0
2023-01-08 23:45:18,024:INFO:PyCaret optional dependencies:
2023-01-08 23:45:18,024:INFO:                shap: Not installed
2023-01-08 23:45:18,024:INFO:           interpret: Not installed
2023-01-08 23:45:18,024:INFO:                umap: Not installed
2023-01-08 23:45:18,024:INFO:    pandas_profiling: 3.6.2
2023-01-08 23:45:18,025:INFO:  explainerdashboard: Not installed
2023-01-08 23:45:18,025:INFO:             autoviz: Not installed
2023-01-08 23:45:18,025:INFO:           fairlearn: Not installed
2023-01-08 23:45:18,025:INFO:             xgboost: Not installed
2023-01-08 23:45:18,025:INFO:            catboost: Not installed
2023-01-08 23:45:18,025:INFO:              kmodes: Not installed
2023-01-08 23:45:18,025:INFO:             mlxtend: Not installed
2023-01-08 23:45:18,025:INFO:       statsforecast: Not installed
2023-01-08 23:45:18,025:INFO:        tune_sklearn: Not installed
2023-01-08 23:45:18,025:INFO:                 ray: Not installed
2023-01-08 23:45:18,025:INFO:            hyperopt: Not installed
2023-01-08 23:45:18,025:INFO:              optuna: Not installed
2023-01-08 23:45:18,025:INFO:               skopt: Not installed
2023-01-08 23:45:18,025:INFO:              mlflow: Not installed
2023-01-08 23:45:18,025:INFO:              gradio: Not installed
2023-01-08 23:45:18,026:INFO:             fastapi: Not installed
2023-01-08 23:45:18,026:INFO:             uvicorn: Not installed
2023-01-08 23:45:18,026:INFO:              m2cgen: Not installed
2023-01-08 23:45:18,026:INFO:           evidently: Not installed
2023-01-08 23:45:18,026:INFO:                nltk: Not installed
2023-01-08 23:45:18,026:INFO:            pyLDAvis: Not installed
2023-01-08 23:45:18,026:INFO:              gensim: Not installed
2023-01-08 23:45:18,026:INFO:               spacy: Not installed
2023-01-08 23:45:18,026:INFO:           wordcloud: Not installed
2023-01-08 23:45:18,026:INFO:            textblob: Not installed
2023-01-08 23:45:18,026:INFO:               fugue: Not installed
2023-01-08 23:45:18,026:INFO:           streamlit: 1.16.0
2023-01-08 23:45:18,026:INFO:             prophet: Not installed
2023-01-08 23:45:18,026:INFO:None
2023-01-08 23:45:18,026:INFO:Set up data.
2023-01-08 23:45:18,031:INFO:Set up train/test split.
2023-01-08 23:45:18,035:INFO:Set up index.
2023-01-08 23:45:18,035:INFO:Set up folding strategy.
2023-01-08 23:45:18,035:INFO:Assigning column types.
2023-01-08 23:45:18,038:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 23:45:18,080:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:45:18,081:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:45:18,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:45:18,156:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:45:18,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,180:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 23:45:18,219:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:45:18,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,284:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:45:18,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,306:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 23:45:18,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,428:INFO:Preparing preprocessing pipeline...
2023-01-08 23:45:18,429:INFO:Set up label encoding.
2023-01-08 23:45:18,429:INFO:Set up simple imputation.
2023-01-08 23:45:18,467:INFO:Finished creating preprocessing pipeline.
2023-01-08 23:45:18,470:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 23:45:18,470:INFO:Creating final display dataframe.
2023-01-08 23:45:18,652:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                                634
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               603b
2023-01-08 23:45:18,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:45:18,782:INFO:setup() successfully completed in 0.76s...............
2023-01-08 23:45:18,784:INFO:Initializing compare_models()
2023-01-08 23:45:18,784:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 23:45:18,784:INFO:Checking exceptions
2023-01-08 23:45:18,787:INFO:Preparing display monitor
2023-01-08 23:45:18,789:INFO:Initializing Logistic Regression
2023-01-08 23:45:18,789:INFO:Total runtime is 0.0 minutes
2023-01-08 23:45:18,789:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:18,789:INFO:Initializing create_model()
2023-01-08 23:45:18,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:18,790:INFO:Checking exceptions
2023-01-08 23:45:18,790:INFO:Importing libraries
2023-01-08 23:45:18,790:INFO:Copying training dataset
2023-01-08 23:45:18,792:INFO:Defining folds
2023-01-08 23:45:18,792:INFO:Declaring metric variables
2023-01-08 23:45:18,792:INFO:Importing untrained model
2023-01-08 23:45:18,792:INFO:Logistic Regression Imported successfully
2023-01-08 23:45:18,792:INFO:Starting cross validation
2023-01-08 23:45:18,793:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:19,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,105:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,107:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,133:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,138:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,139:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,139:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,141:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,144:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,145:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,147:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,149:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,151:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,152:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,153:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,154:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,156:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,156:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,157:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,157:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,161:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,163:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,166:INFO:Calculating mean and std
2023-01-08 23:45:19,166:INFO:Creating metrics dataframe
2023-01-08 23:45:19,169:INFO:Uploading results into container
2023-01-08 23:45:19,170:INFO:Uploading model into container now
2023-01-08 23:45:19,170:INFO:_master_model_container: 1
2023-01-08 23:45:19,170:INFO:_display_container: 2
2023-01-08 23:45:19,170:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=634, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 23:45:19,170:INFO:create_model() successfully completed......................................
2023-01-08 23:45:19,249:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:19,249:INFO:Creating metrics dataframe
2023-01-08 23:45:19,252:INFO:Initializing K Neighbors Classifier
2023-01-08 23:45:19,252:INFO:Total runtime is 0.007705322901407878 minutes
2023-01-08 23:45:19,253:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:19,253:INFO:Initializing create_model()
2023-01-08 23:45:19,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:19,253:INFO:Checking exceptions
2023-01-08 23:45:19,253:INFO:Importing libraries
2023-01-08 23:45:19,253:INFO:Copying training dataset
2023-01-08 23:45:19,255:INFO:Defining folds
2023-01-08 23:45:19,255:INFO:Declaring metric variables
2023-01-08 23:45:19,255:INFO:Importing untrained model
2023-01-08 23:45:19,255:INFO:K Neighbors Classifier Imported successfully
2023-01-08 23:45:19,255:INFO:Starting cross validation
2023-01-08 23:45:19,256:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:19,368:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,368:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,370:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,371:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,373:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,376:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,380:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,380:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,385:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,385:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,387:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,389:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,391:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,391:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,392:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,393:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,394:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,394:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,397:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,400:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,401:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,402:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,403:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,407:INFO:Calculating mean and std
2023-01-08 23:45:19,407:INFO:Creating metrics dataframe
2023-01-08 23:45:19,410:INFO:Uploading results into container
2023-01-08 23:45:19,411:INFO:Uploading model into container now
2023-01-08 23:45:19,411:INFO:_master_model_container: 2
2023-01-08 23:45:19,411:INFO:_display_container: 2
2023-01-08 23:45:19,412:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 23:45:19,412:INFO:create_model() successfully completed......................................
2023-01-08 23:45:19,488:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:19,488:INFO:Creating metrics dataframe
2023-01-08 23:45:19,493:INFO:Initializing Naive Bayes
2023-01-08 23:45:19,493:INFO:Total runtime is 0.011725266774495442 minutes
2023-01-08 23:45:19,493:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:19,493:INFO:Initializing create_model()
2023-01-08 23:45:19,493:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:19,493:INFO:Checking exceptions
2023-01-08 23:45:19,494:INFO:Importing libraries
2023-01-08 23:45:19,494:INFO:Copying training dataset
2023-01-08 23:45:19,495:INFO:Defining folds
2023-01-08 23:45:19,495:INFO:Declaring metric variables
2023-01-08 23:45:19,495:INFO:Importing untrained model
2023-01-08 23:45:19,495:INFO:Naive Bayes Imported successfully
2023-01-08 23:45:19,496:INFO:Starting cross validation
2023-01-08 23:45:19,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:19,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,558:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,561:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,562:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,565:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,567:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,567:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,570:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,571:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,572:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,573:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,574:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,575:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,576:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,581:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,583:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,583:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,585:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,587:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,587:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,592:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,593:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,595:INFO:Calculating mean and std
2023-01-08 23:45:19,596:INFO:Creating metrics dataframe
2023-01-08 23:45:19,599:INFO:Uploading results into container
2023-01-08 23:45:19,599:INFO:Uploading model into container now
2023-01-08 23:45:19,599:INFO:_master_model_container: 3
2023-01-08 23:45:19,599:INFO:_display_container: 2
2023-01-08 23:45:19,600:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 23:45:19,600:INFO:create_model() successfully completed......................................
2023-01-08 23:45:19,675:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:19,676:INFO:Creating metrics dataframe
2023-01-08 23:45:19,680:INFO:Initializing Decision Tree Classifier
2023-01-08 23:45:19,680:INFO:Total runtime is 0.014841389656066893 minutes
2023-01-08 23:45:19,680:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:19,681:INFO:Initializing create_model()
2023-01-08 23:45:19,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:19,681:INFO:Checking exceptions
2023-01-08 23:45:19,681:INFO:Importing libraries
2023-01-08 23:45:19,681:INFO:Copying training dataset
2023-01-08 23:45:19,682:INFO:Defining folds
2023-01-08 23:45:19,682:INFO:Declaring metric variables
2023-01-08 23:45:19,683:INFO:Importing untrained model
2023-01-08 23:45:19,683:INFO:Decision Tree Classifier Imported successfully
2023-01-08 23:45:19,683:INFO:Starting cross validation
2023-01-08 23:45:19,684:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:19,744:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,746:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,751:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,754:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,756:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,758:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,758:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,760:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,763:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,765:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,766:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,766:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,768:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,768:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,776:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,776:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,779:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,780:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,781:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,784:INFO:Calculating mean and std
2023-01-08 23:45:19,785:INFO:Creating metrics dataframe
2023-01-08 23:45:19,788:INFO:Uploading results into container
2023-01-08 23:45:19,789:INFO:Uploading model into container now
2023-01-08 23:45:19,789:INFO:_master_model_container: 4
2023-01-08 23:45:19,789:INFO:_display_container: 2
2023-01-08 23:45:19,789:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=634, splitter='best')
2023-01-08 23:45:19,790:INFO:create_model() successfully completed......................................
2023-01-08 23:45:19,870:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:19,870:INFO:Creating metrics dataframe
2023-01-08 23:45:19,875:INFO:Initializing SVM - Linear Kernel
2023-01-08 23:45:19,875:INFO:Total runtime is 0.018098894755045572 minutes
2023-01-08 23:45:19,875:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:19,875:INFO:Initializing create_model()
2023-01-08 23:45:19,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:19,875:INFO:Checking exceptions
2023-01-08 23:45:19,875:INFO:Importing libraries
2023-01-08 23:45:19,876:INFO:Copying training dataset
2023-01-08 23:45:19,878:INFO:Defining folds
2023-01-08 23:45:19,878:INFO:Declaring metric variables
2023-01-08 23:45:19,878:INFO:Importing untrained model
2023-01-08 23:45:19,878:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 23:45:19,878:INFO:Starting cross validation
2023-01-08 23:45:19,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:19,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:19,946:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,946:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,949:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,950:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:19,951:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,954:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,958:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,959:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,962:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,963:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,966:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,966:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,967:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,969:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,970:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,970:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:19,971:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,971:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,971:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,973:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:19,976:INFO:Calculating mean and std
2023-01-08 23:45:19,976:INFO:Creating metrics dataframe
2023-01-08 23:45:19,980:INFO:Uploading results into container
2023-01-08 23:45:19,980:INFO:Uploading model into container now
2023-01-08 23:45:19,980:INFO:_master_model_container: 5
2023-01-08 23:45:19,980:INFO:_display_container: 2
2023-01-08 23:45:19,981:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=634, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 23:45:19,981:INFO:create_model() successfully completed......................................
2023-01-08 23:45:20,061:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:20,062:INFO:Creating metrics dataframe
2023-01-08 23:45:20,066:INFO:Initializing Ridge Classifier
2023-01-08 23:45:20,066:INFO:Total runtime is 0.02128305435180664 minutes
2023-01-08 23:45:20,066:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:20,066:INFO:Initializing create_model()
2023-01-08 23:45:20,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:20,066:INFO:Checking exceptions
2023-01-08 23:45:20,066:INFO:Importing libraries
2023-01-08 23:45:20,066:INFO:Copying training dataset
2023-01-08 23:45:20,068:INFO:Defining folds
2023-01-08 23:45:20,068:INFO:Declaring metric variables
2023-01-08 23:45:20,068:INFO:Importing untrained model
2023-01-08 23:45:20,068:INFO:Ridge Classifier Imported successfully
2023-01-08 23:45:20,069:INFO:Starting cross validation
2023-01-08 23:45:20,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:20,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,125:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,125:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,127:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,130:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,132:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,132:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,133:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,134:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,134:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,138:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,139:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,140:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,142:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,142:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,142:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,143:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,143:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,144:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,145:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,145:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,146:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,147:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,148:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,151:INFO:Calculating mean and std
2023-01-08 23:45:20,152:INFO:Creating metrics dataframe
2023-01-08 23:45:20,155:INFO:Uploading results into container
2023-01-08 23:45:20,155:INFO:Uploading model into container now
2023-01-08 23:45:20,156:INFO:_master_model_container: 6
2023-01-08 23:45:20,156:INFO:_display_container: 2
2023-01-08 23:45:20,156:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=634, solver='auto', tol=0.001)
2023-01-08 23:45:20,156:INFO:create_model() successfully completed......................................
2023-01-08 23:45:20,228:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:20,228:INFO:Creating metrics dataframe
2023-01-08 23:45:20,232:INFO:Initializing Random Forest Classifier
2023-01-08 23:45:20,232:INFO:Total runtime is 0.024051241079966226 minutes
2023-01-08 23:45:20,232:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:20,233:INFO:Initializing create_model()
2023-01-08 23:45:20,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:20,233:INFO:Checking exceptions
2023-01-08 23:45:20,233:INFO:Importing libraries
2023-01-08 23:45:20,233:INFO:Copying training dataset
2023-01-08 23:45:20,234:INFO:Defining folds
2023-01-08 23:45:20,234:INFO:Declaring metric variables
2023-01-08 23:45:20,235:INFO:Importing untrained model
2023-01-08 23:45:20,235:INFO:Random Forest Classifier Imported successfully
2023-01-08 23:45:20,235:INFO:Starting cross validation
2023-01-08 23:45:20,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:20,598:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,601:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,604:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,610:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,613:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,613:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,625:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,625:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,626:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,631:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,632:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,633:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,633:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,633:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,635:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,635:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,636:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,636:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,636:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,637:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,641:INFO:Calculating mean and std
2023-01-08 23:45:20,641:INFO:Creating metrics dataframe
2023-01-08 23:45:20,644:INFO:Uploading results into container
2023-01-08 23:45:20,645:INFO:Uploading model into container now
2023-01-08 23:45:20,645:INFO:_master_model_container: 7
2023-01-08 23:45:20,645:INFO:_display_container: 2
2023-01-08 23:45:20,645:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=634, verbose=0, warm_start=False)
2023-01-08 23:45:20,645:INFO:create_model() successfully completed......................................
2023-01-08 23:45:20,716:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:20,717:INFO:Creating metrics dataframe
2023-01-08 23:45:20,721:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 23:45:20,721:INFO:Total runtime is 0.032196752230326336 minutes
2023-01-08 23:45:20,721:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:20,722:INFO:Initializing create_model()
2023-01-08 23:45:20,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:20,722:INFO:Checking exceptions
2023-01-08 23:45:20,722:INFO:Importing libraries
2023-01-08 23:45:20,722:INFO:Copying training dataset
2023-01-08 23:45:20,724:INFO:Defining folds
2023-01-08 23:45:20,724:INFO:Declaring metric variables
2023-01-08 23:45:20,724:INFO:Importing untrained model
2023-01-08 23:45:20,724:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 23:45:20,724:INFO:Starting cross validation
2023-01-08 23:45:20,725:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:20,783:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,785:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,791:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,795:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,799:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,800:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,801:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,803:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,804:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,807:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,808:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,810:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,811:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,812:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,813:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,813:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:20,817:INFO:Calculating mean and std
2023-01-08 23:45:20,818:INFO:Creating metrics dataframe
2023-01-08 23:45:20,821:INFO:Uploading results into container
2023-01-08 23:45:20,821:INFO:Uploading model into container now
2023-01-08 23:45:20,821:INFO:_master_model_container: 8
2023-01-08 23:45:20,821:INFO:_display_container: 2
2023-01-08 23:45:20,822:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:45:20,822:INFO:create_model() successfully completed......................................
2023-01-08 23:45:20,892:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:20,892:INFO:Creating metrics dataframe
2023-01-08 23:45:20,896:INFO:Initializing Ada Boost Classifier
2023-01-08 23:45:20,896:INFO:Total runtime is 0.03511778910954794 minutes
2023-01-08 23:45:20,896:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:20,896:INFO:Initializing create_model()
2023-01-08 23:45:20,896:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:20,896:INFO:Checking exceptions
2023-01-08 23:45:20,896:INFO:Importing libraries
2023-01-08 23:45:20,896:INFO:Copying training dataset
2023-01-08 23:45:20,898:INFO:Defining folds
2023-01-08 23:45:20,898:INFO:Declaring metric variables
2023-01-08 23:45:20,898:INFO:Importing untrained model
2023-01-08 23:45:20,898:INFO:Ada Boost Classifier Imported successfully
2023-01-08 23:45:20,898:INFO:Starting cross validation
2023-01-08 23:45:20,899:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:21,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,075:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,078:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,078:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,082:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,087:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,091:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,093:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,102:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,107:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,109:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,111:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,111:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,114:INFO:Calculating mean and std
2023-01-08 23:45:21,114:INFO:Creating metrics dataframe
2023-01-08 23:45:21,118:INFO:Uploading results into container
2023-01-08 23:45:21,118:INFO:Uploading model into container now
2023-01-08 23:45:21,119:INFO:_master_model_container: 9
2023-01-08 23:45:21,119:INFO:_display_container: 2
2023-01-08 23:45:21,119:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=634)
2023-01-08 23:45:21,119:INFO:create_model() successfully completed......................................
2023-01-08 23:45:21,190:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:21,190:INFO:Creating metrics dataframe
2023-01-08 23:45:21,193:INFO:Initializing Gradient Boosting Classifier
2023-01-08 23:45:21,194:INFO:Total runtime is 0.04007110993067424 minutes
2023-01-08 23:45:21,194:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:21,194:INFO:Initializing create_model()
2023-01-08 23:45:21,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:21,194:INFO:Checking exceptions
2023-01-08 23:45:21,194:INFO:Importing libraries
2023-01-08 23:45:21,194:INFO:Copying training dataset
2023-01-08 23:45:21,196:INFO:Defining folds
2023-01-08 23:45:21,196:INFO:Declaring metric variables
2023-01-08 23:45:21,196:INFO:Importing untrained model
2023-01-08 23:45:21,196:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 23:45:21,196:INFO:Starting cross validation
2023-01-08 23:45:21,197:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:21,547:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,549:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,552:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,564:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,566:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,567:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,573:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,575:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,577:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,587:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,592:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,592:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,592:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,596:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,597:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,600:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,601:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,601:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,604:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,607:INFO:Calculating mean and std
2023-01-08 23:45:21,608:INFO:Creating metrics dataframe
2023-01-08 23:45:21,611:INFO:Uploading results into container
2023-01-08 23:45:21,611:INFO:Uploading model into container now
2023-01-08 23:45:21,611:INFO:_master_model_container: 10
2023-01-08 23:45:21,611:INFO:_display_container: 2
2023-01-08 23:45:21,612:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=634, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 23:45:21,612:INFO:create_model() successfully completed......................................
2023-01-08 23:45:21,685:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:21,685:INFO:Creating metrics dataframe
2023-01-08 23:45:21,689:INFO:Initializing Linear Discriminant Analysis
2023-01-08 23:45:21,689:INFO:Total runtime is 0.048329035441080734 minutes
2023-01-08 23:45:21,689:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:21,690:INFO:Initializing create_model()
2023-01-08 23:45:21,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:21,690:INFO:Checking exceptions
2023-01-08 23:45:21,690:INFO:Importing libraries
2023-01-08 23:45:21,690:INFO:Copying training dataset
2023-01-08 23:45:21,691:INFO:Defining folds
2023-01-08 23:45:21,691:INFO:Declaring metric variables
2023-01-08 23:45:21,692:INFO:Importing untrained model
2023-01-08 23:45:21,692:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 23:45:21,693:INFO:Starting cross validation
2023-01-08 23:45:21,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:21,756:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,758:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,759:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,762:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,766:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,767:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,768:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,768:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,771:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,771:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,771:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,781:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,783:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,783:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,784:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,785:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,787:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:21,789:INFO:Calculating mean and std
2023-01-08 23:45:21,790:INFO:Creating metrics dataframe
2023-01-08 23:45:21,792:INFO:Uploading results into container
2023-01-08 23:45:21,793:INFO:Uploading model into container now
2023-01-08 23:45:21,793:INFO:_master_model_container: 11
2023-01-08 23:45:21,793:INFO:_display_container: 2
2023-01-08 23:45:21,793:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 23:45:21,793:INFO:create_model() successfully completed......................................
2023-01-08 23:45:21,864:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:21,864:INFO:Creating metrics dataframe
2023-01-08 23:45:21,868:INFO:Initializing Extra Trees Classifier
2023-01-08 23:45:21,868:INFO:Total runtime is 0.05131539503733318 minutes
2023-01-08 23:45:21,868:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:21,868:INFO:Initializing create_model()
2023-01-08 23:45:21,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:21,869:INFO:Checking exceptions
2023-01-08 23:45:21,869:INFO:Importing libraries
2023-01-08 23:45:21,869:INFO:Copying training dataset
2023-01-08 23:45:21,870:INFO:Defining folds
2023-01-08 23:45:21,870:INFO:Declaring metric variables
2023-01-08 23:45:21,870:INFO:Importing untrained model
2023-01-08 23:45:21,871:INFO:Extra Trees Classifier Imported successfully
2023-01-08 23:45:21,871:INFO:Starting cross validation
2023-01-08 23:45:21,871:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:22,173:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,175:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,178:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,178:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,180:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,183:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,184:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,189:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,191:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,192:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,195:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,204:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,207:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,209:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,216:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,218:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,219:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,221:INFO:Calculating mean and std
2023-01-08 23:45:22,222:INFO:Creating metrics dataframe
2023-01-08 23:45:22,225:INFO:Uploading results into container
2023-01-08 23:45:22,226:INFO:Uploading model into container now
2023-01-08 23:45:22,226:INFO:_master_model_container: 12
2023-01-08 23:45:22,226:INFO:_display_container: 2
2023-01-08 23:45:22,226:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=634, verbose=0, warm_start=False)
2023-01-08 23:45:22,226:INFO:create_model() successfully completed......................................
2023-01-08 23:45:22,300:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:22,300:INFO:Creating metrics dataframe
2023-01-08 23:45:22,304:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 23:45:22,304:INFO:Total runtime is 0.05857748190561931 minutes
2023-01-08 23:45:22,304:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:22,304:INFO:Initializing create_model()
2023-01-08 23:45:22,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:22,304:INFO:Checking exceptions
2023-01-08 23:45:22,304:INFO:Importing libraries
2023-01-08 23:45:22,304:INFO:Copying training dataset
2023-01-08 23:45:22,306:INFO:Defining folds
2023-01-08 23:45:22,306:INFO:Declaring metric variables
2023-01-08 23:45:22,306:INFO:Importing untrained model
2023-01-08 23:45:22,306:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 23:45:22,307:INFO:Starting cross validation
2023-01-08 23:45:22,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:22,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,400:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,400:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,401:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,401:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,412:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,413:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,413:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,414:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,416:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,417:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,418:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,421:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,425:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,425:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,428:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,429:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,430:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,437:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,438:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,440:INFO:Calculating mean and std
2023-01-08 23:45:22,441:INFO:Creating metrics dataframe
2023-01-08 23:45:22,444:INFO:Uploading results into container
2023-01-08 23:45:22,445:INFO:Uploading model into container now
2023-01-08 23:45:22,445:INFO:_master_model_container: 13
2023-01-08 23:45:22,445:INFO:_display_container: 2
2023-01-08 23:45:22,446:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=634, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 23:45:22,446:INFO:create_model() successfully completed......................................
2023-01-08 23:45:22,516:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:22,516:INFO:Creating metrics dataframe
2023-01-08 23:45:22,519:INFO:Initializing Dummy Classifier
2023-01-08 23:45:22,519:INFO:Total runtime is 0.06216801404953003 minutes
2023-01-08 23:45:22,519:INFO:SubProcess create_model() called ==================================
2023-01-08 23:45:22,520:INFO:Initializing create_model()
2023-01-08 23:45:22,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B77E220>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:22,520:INFO:Checking exceptions
2023-01-08 23:45:22,520:INFO:Importing libraries
2023-01-08 23:45:22,520:INFO:Copying training dataset
2023-01-08 23:45:22,521:INFO:Defining folds
2023-01-08 23:45:22,522:INFO:Declaring metric variables
2023-01-08 23:45:22,522:INFO:Importing untrained model
2023-01-08 23:45:22,522:INFO:Dummy Classifier Imported successfully
2023-01-08 23:45:22,522:INFO:Starting cross validation
2023-01-08 23:45:22,523:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:45:22,574:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,575:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,576:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,578:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,578:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:22,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:22,580:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,587:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,589:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:22,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,591:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,592:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:22,593:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,593:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,593:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:22,596:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,596:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,597:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:22,598:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,600:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,600:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,601:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:22,602:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:22,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,604:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,605:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:22,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:45:22,607:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,607:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:45:22,610:INFO:Calculating mean and std
2023-01-08 23:45:22,611:INFO:Creating metrics dataframe
2023-01-08 23:45:22,614:INFO:Uploading results into container
2023-01-08 23:45:22,615:INFO:Uploading model into container now
2023-01-08 23:45:22,615:INFO:_master_model_container: 14
2023-01-08 23:45:22,615:INFO:_display_container: 2
2023-01-08 23:45:22,615:INFO:DummyClassifier(constant=None, random_state=634, strategy='prior')
2023-01-08 23:45:22,615:INFO:create_model() successfully completed......................................
2023-01-08 23:45:22,688:INFO:SubProcess create_model() end ==================================
2023-01-08 23:45:22,688:INFO:Creating metrics dataframe
2023-01-08 23:45:22,693:INFO:Initializing create_model()
2023-01-08 23:45:22,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B883A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=634, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:45:22,693:INFO:Checking exceptions
2023-01-08 23:45:22,694:INFO:Importing libraries
2023-01-08 23:45:22,694:INFO:Copying training dataset
2023-01-08 23:45:22,695:INFO:Defining folds
2023-01-08 23:45:22,696:INFO:Declaring metric variables
2023-01-08 23:45:22,696:INFO:Importing untrained model
2023-01-08 23:45:22,696:INFO:Declaring custom model
2023-01-08 23:45:22,696:INFO:Logistic Regression Imported successfully
2023-01-08 23:45:22,697:INFO:Cross validation set to False
2023-01-08 23:45:22,697:INFO:Fitting Model
2023-01-08 23:45:22,732:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=634, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 23:45:22,732:INFO:create_model() successfully completed......................................
2023-01-08 23:45:22,822:INFO:_master_model_container: 14
2023-01-08 23:45:22,822:INFO:_display_container: 2
2023-01-08 23:45:22,823:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=634, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 23:45:22,823:INFO:compare_models() successfully completed......................................
2023-01-08 23:45:22,828:INFO:Initializing save_model()
2023-01-08 23:45:22,828:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=634, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=trained_model.pkl, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-08 23:45:22,828:INFO:Adding model into prep_pipe
2023-01-08 23:45:22,832:INFO:trained_model.pkl.pkl saved in current working directory
2023-01-08 23:45:22,836:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False...
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=634,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-01-08 23:45:22,836:INFO:save_model() successfully completed......................................
2023-01-08 23:51:32,407:INFO:PyCaret ClassificationExperiment
2023-01-08 23:51:32,408:INFO:Logging name: clf-default-name
2023-01-08 23:51:32,408:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 23:51:32,408:INFO:version 3.0.0.rc6
2023-01-08 23:51:32,409:INFO:Initializing setup()
2023-01-08 23:51:32,409:INFO:self.USI: b5ba
2023-01-08 23:51:32,409:INFO:self._variable_keys: {'memory', 'X', 'gpu_param', 'pipeline', 'data', 'y_test', 'target_param', 'fold_groups_param', 'n_jobs_param', 'X_test', 'y_train', 'idx', 'seed', 'X_train', 'exp_id', '_available_plots', 'fold_shuffle_param', '_ml_usecase', 'y', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_generator', 'html_param', 'USI', 'log_plots_param', 'is_multiclass', 'logging_param', 'exp_name_log'}
2023-01-08 23:51:32,409:INFO:Checking environment
2023-01-08 23:51:32,410:INFO:python_version: 3.9.15
2023-01-08 23:51:32,410:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 23:51:32,411:INFO:machine: AMD64
2023-01-08 23:51:32,411:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 23:51:32,412:INFO:Memory: svmem(total=17010110464, available=3588632576, percent=78.9, used=13421477888, free=3588632576)
2023-01-08 23:51:32,412:INFO:Physical Core: 6
2023-01-08 23:51:32,412:INFO:Logical Core: 12
2023-01-08 23:51:32,412:INFO:Checking libraries
2023-01-08 23:51:32,413:INFO:System:
2023-01-08 23:51:32,413:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 23:51:32,413:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 23:51:32,414:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 23:51:32,414:INFO:PyCaret required dependencies:
2023-01-08 23:51:32,414:INFO:                 pip: 22.3.1
2023-01-08 23:51:32,415:INFO:          setuptools: 65.6.3
2023-01-08 23:51:32,415:INFO:             pycaret: 3.0.0rc6
2023-01-08 23:51:32,415:INFO:             IPython: 8.8.0
2023-01-08 23:51:32,415:INFO:          ipywidgets: 8.0.4
2023-01-08 23:51:32,416:INFO:                tqdm: 4.64.1
2023-01-08 23:51:32,416:INFO:               numpy: 1.22.4
2023-01-08 23:51:32,416:INFO:              pandas: 1.5.2
2023-01-08 23:51:32,416:INFO:              jinja2: 3.1.2
2023-01-08 23:51:32,416:INFO:               scipy: 1.9.3
2023-01-08 23:51:32,416:INFO:              joblib: 1.2.0
2023-01-08 23:51:32,417:INFO:             sklearn: 1.1.3
2023-01-08 23:51:32,417:INFO:                pyod: 1.0.7
2023-01-08 23:51:32,417:INFO:            imblearn: 0.10.1
2023-01-08 23:51:32,418:INFO:   category_encoders: 2.5.1.post0
2023-01-08 23:51:32,418:INFO:            lightgbm: 3.3.4
2023-01-08 23:51:32,418:INFO:               numba: 0.56.4
2023-01-08 23:51:32,418:INFO:            requests: 2.28.1
2023-01-08 23:51:32,419:INFO:          matplotlib: 3.6.2
2023-01-08 23:51:32,419:INFO:          scikitplot: 0.3.7
2023-01-08 23:51:32,419:INFO:         yellowbrick: 1.5
2023-01-08 23:51:32,420:INFO:              plotly: 5.11.0
2023-01-08 23:51:32,420:INFO:             kaleido: 0.2.1
2023-01-08 23:51:32,420:INFO:         statsmodels: 0.13.5
2023-01-08 23:51:32,420:INFO:              sktime: 0.14.1
2023-01-08 23:51:32,421:INFO:               tbats: 1.1.2
2023-01-08 23:51:32,421:INFO:            pmdarima: 2.0.2
2023-01-08 23:51:32,421:INFO:              psutil: 5.9.0
2023-01-08 23:51:32,421:INFO:PyCaret optional dependencies:
2023-01-08 23:51:32,421:INFO:                shap: Not installed
2023-01-08 23:51:32,422:INFO:           interpret: Not installed
2023-01-08 23:51:32,422:INFO:                umap: Not installed
2023-01-08 23:51:32,422:INFO:    pandas_profiling: 3.6.2
2023-01-08 23:51:32,422:INFO:  explainerdashboard: Not installed
2023-01-08 23:51:32,423:INFO:             autoviz: Not installed
2023-01-08 23:51:32,423:INFO:           fairlearn: Not installed
2023-01-08 23:51:32,423:INFO:             xgboost: Not installed
2023-01-08 23:51:32,423:INFO:            catboost: Not installed
2023-01-08 23:51:32,423:INFO:              kmodes: Not installed
2023-01-08 23:51:32,424:INFO:             mlxtend: Not installed
2023-01-08 23:51:32,424:INFO:       statsforecast: Not installed
2023-01-08 23:51:32,424:INFO:        tune_sklearn: Not installed
2023-01-08 23:51:32,424:INFO:                 ray: Not installed
2023-01-08 23:51:32,425:INFO:            hyperopt: Not installed
2023-01-08 23:51:32,425:INFO:              optuna: Not installed
2023-01-08 23:51:32,425:INFO:               skopt: Not installed
2023-01-08 23:51:32,425:INFO:              mlflow: Not installed
2023-01-08 23:51:32,425:INFO:              gradio: Not installed
2023-01-08 23:51:32,426:INFO:             fastapi: Not installed
2023-01-08 23:51:32,426:INFO:             uvicorn: Not installed
2023-01-08 23:51:32,426:INFO:              m2cgen: Not installed
2023-01-08 23:51:32,426:INFO:           evidently: Not installed
2023-01-08 23:51:32,427:INFO:                nltk: Not installed
2023-01-08 23:51:32,427:INFO:            pyLDAvis: Not installed
2023-01-08 23:51:32,427:INFO:              gensim: Not installed
2023-01-08 23:51:32,428:INFO:               spacy: Not installed
2023-01-08 23:51:32,428:INFO:           wordcloud: Not installed
2023-01-08 23:51:32,428:INFO:            textblob: Not installed
2023-01-08 23:51:32,429:INFO:               fugue: Not installed
2023-01-08 23:51:32,429:INFO:           streamlit: 1.16.0
2023-01-08 23:51:32,429:INFO:             prophet: Not installed
2023-01-08 23:51:32,429:INFO:None
2023-01-08 23:51:32,430:INFO:Set up data.
2023-01-08 23:51:32,434:INFO:Set up train/test split.
2023-01-08 23:51:32,438:INFO:Set up index.
2023-01-08 23:51:32,438:INFO:Set up folding strategy.
2023-01-08 23:51:32,438:INFO:Assigning column types.
2023-01-08 23:51:32,441:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 23:51:32,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:51:32,483:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:51:32,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,547:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:51:32,548:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:51:32,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,572:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 23:51:32,610:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:51:32,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,671:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:51:32,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,694:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 23:51:32,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:32,818:INFO:Preparing preprocessing pipeline...
2023-01-08 23:51:32,819:INFO:Set up label encoding.
2023-01-08 23:51:32,819:INFO:Set up simple imputation.
2023-01-08 23:51:32,855:INFO:Finished creating preprocessing pipeline.
2023-01-08 23:51:32,858:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 23:51:32,858:INFO:Creating final display dataframe.
2023-01-08 23:51:33,029:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                                579
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               b5ba
2023-01-08 23:51:33,097:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:33,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:33,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:33,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:51:33,161:INFO:setup() successfully completed in 0.76s...............
2023-01-08 23:51:33,164:INFO:Initializing compare_models()
2023-01-08 23:51:33,164:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 23:51:33,164:INFO:Checking exceptions
2023-01-08 23:51:33,167:INFO:Preparing display monitor
2023-01-08 23:51:33,169:INFO:Initializing Logistic Regression
2023-01-08 23:51:33,169:INFO:Total runtime is 0.0 minutes
2023-01-08 23:51:33,169:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:33,169:INFO:Initializing create_model()
2023-01-08 23:51:33,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:33,169:INFO:Checking exceptions
2023-01-08 23:51:33,170:INFO:Importing libraries
2023-01-08 23:51:33,170:INFO:Copying training dataset
2023-01-08 23:51:33,171:INFO:Defining folds
2023-01-08 23:51:33,171:INFO:Declaring metric variables
2023-01-08 23:51:33,171:INFO:Importing untrained model
2023-01-08 23:51:33,172:INFO:Logistic Regression Imported successfully
2023-01-08 23:51:33,172:INFO:Starting cross validation
2023-01-08 23:51:33,172:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:38,935:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,936:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,946:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,949:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,952:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,953:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,954:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,955:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,958:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,966:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,966:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,968:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,969:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,969:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,970:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,974:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,976:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,978:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,979:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,981:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,981:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:38,989:INFO:Calculating mean and std
2023-01-08 23:51:38,991:INFO:Creating metrics dataframe
2023-01-08 23:51:38,998:INFO:Uploading results into container
2023-01-08 23:51:38,999:INFO:Uploading model into container now
2023-01-08 23:51:39,000:INFO:_master_model_container: 1
2023-01-08 23:51:39,000:INFO:_display_container: 2
2023-01-08 23:51:39,001:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=579, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 23:51:39,001:INFO:create_model() successfully completed......................................
2023-01-08 23:51:39,137:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:39,137:INFO:Creating metrics dataframe
2023-01-08 23:51:39,141:INFO:Initializing K Neighbors Classifier
2023-01-08 23:51:39,141:INFO:Total runtime is 0.09952779610951741 minutes
2023-01-08 23:51:39,141:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:39,142:INFO:Initializing create_model()
2023-01-08 23:51:39,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:39,142:INFO:Checking exceptions
2023-01-08 23:51:39,142:INFO:Importing libraries
2023-01-08 23:51:39,142:INFO:Copying training dataset
2023-01-08 23:51:39,144:INFO:Defining folds
2023-01-08 23:51:39,144:INFO:Declaring metric variables
2023-01-08 23:51:39,144:INFO:Importing untrained model
2023-01-08 23:51:39,144:INFO:K Neighbors Classifier Imported successfully
2023-01-08 23:51:39,145:INFO:Starting cross validation
2023-01-08 23:51:39,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:39,270:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,274:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,277:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,280:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,281:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,284:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,286:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,288:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,292:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,293:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,296:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,300:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,300:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,301:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,301:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,301:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:39,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:40,922:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:40,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:40,924:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:40,924:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:40,925:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:40,925:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:40,927:INFO:Calculating mean and std
2023-01-08 23:51:40,928:INFO:Creating metrics dataframe
2023-01-08 23:51:40,931:INFO:Uploading results into container
2023-01-08 23:51:40,932:INFO:Uploading model into container now
2023-01-08 23:51:40,932:INFO:_master_model_container: 2
2023-01-08 23:51:40,932:INFO:_display_container: 2
2023-01-08 23:51:40,933:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 23:51:40,933:INFO:create_model() successfully completed......................................
2023-01-08 23:51:41,009:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:41,009:INFO:Creating metrics dataframe
2023-01-08 23:51:41,013:INFO:Initializing Naive Bayes
2023-01-08 23:51:41,013:INFO:Total runtime is 0.1307414690653483 minutes
2023-01-08 23:51:41,013:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:41,013:INFO:Initializing create_model()
2023-01-08 23:51:41,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:41,013:INFO:Checking exceptions
2023-01-08 23:51:41,013:INFO:Importing libraries
2023-01-08 23:51:41,013:INFO:Copying training dataset
2023-01-08 23:51:41,015:INFO:Defining folds
2023-01-08 23:51:41,015:INFO:Declaring metric variables
2023-01-08 23:51:41,015:INFO:Importing untrained model
2023-01-08 23:51:41,015:INFO:Naive Bayes Imported successfully
2023-01-08 23:51:41,015:INFO:Starting cross validation
2023-01-08 23:51:41,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:41,077:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,079:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,082:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,083:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,087:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,090:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,093:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,097:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,102:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,105:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,111:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,111:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,114:INFO:Calculating mean and std
2023-01-08 23:51:41,114:INFO:Creating metrics dataframe
2023-01-08 23:51:41,117:INFO:Uploading results into container
2023-01-08 23:51:41,117:INFO:Uploading model into container now
2023-01-08 23:51:41,118:INFO:_master_model_container: 3
2023-01-08 23:51:41,118:INFO:_display_container: 2
2023-01-08 23:51:41,118:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 23:51:41,118:INFO:create_model() successfully completed......................................
2023-01-08 23:51:41,187:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:41,187:INFO:Creating metrics dataframe
2023-01-08 23:51:41,191:INFO:Initializing Decision Tree Classifier
2023-01-08 23:51:41,191:INFO:Total runtime is 0.13369948069254559 minutes
2023-01-08 23:51:41,191:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:41,191:INFO:Initializing create_model()
2023-01-08 23:51:41,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:41,192:INFO:Checking exceptions
2023-01-08 23:51:41,192:INFO:Importing libraries
2023-01-08 23:51:41,192:INFO:Copying training dataset
2023-01-08 23:51:41,193:INFO:Defining folds
2023-01-08 23:51:41,193:INFO:Declaring metric variables
2023-01-08 23:51:41,193:INFO:Importing untrained model
2023-01-08 23:51:41,194:INFO:Decision Tree Classifier Imported successfully
2023-01-08 23:51:41,194:INFO:Starting cross validation
2023-01-08 23:51:41,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:41,255:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,257:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,261:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,277:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,278:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,280:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,280:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,281:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,284:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,286:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,286:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,288:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,291:INFO:Calculating mean and std
2023-01-08 23:51:41,291:INFO:Creating metrics dataframe
2023-01-08 23:51:41,294:INFO:Uploading results into container
2023-01-08 23:51:41,295:INFO:Uploading model into container now
2023-01-08 23:51:41,295:INFO:_master_model_container: 4
2023-01-08 23:51:41,295:INFO:_display_container: 2
2023-01-08 23:51:41,295:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=579, splitter='best')
2023-01-08 23:51:41,295:INFO:create_model() successfully completed......................................
2023-01-08 23:51:41,366:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:41,366:INFO:Creating metrics dataframe
2023-01-08 23:51:41,370:INFO:Initializing SVM - Linear Kernel
2023-01-08 23:51:41,370:INFO:Total runtime is 0.13668608665466309 minutes
2023-01-08 23:51:41,370:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:41,371:INFO:Initializing create_model()
2023-01-08 23:51:41,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:41,371:INFO:Checking exceptions
2023-01-08 23:51:41,371:INFO:Importing libraries
2023-01-08 23:51:41,371:INFO:Copying training dataset
2023-01-08 23:51:41,372:INFO:Defining folds
2023-01-08 23:51:41,372:INFO:Declaring metric variables
2023-01-08 23:51:41,373:INFO:Importing untrained model
2023-01-08 23:51:41,373:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 23:51:41,373:INFO:Starting cross validation
2023-01-08 23:51:41,374:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:41,431:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,431:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,433:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,435:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:41,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,437:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,445:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,446:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,451:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,453:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,454:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,457:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,458:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,458:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,459:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,461:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,461:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,461:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,463:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,463:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,464:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,466:INFO:Calculating mean and std
2023-01-08 23:51:41,467:INFO:Creating metrics dataframe
2023-01-08 23:51:41,470:INFO:Uploading results into container
2023-01-08 23:51:41,470:INFO:Uploading model into container now
2023-01-08 23:51:41,470:INFO:_master_model_container: 5
2023-01-08 23:51:41,471:INFO:_display_container: 2
2023-01-08 23:51:41,471:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=579, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 23:51:41,471:INFO:create_model() successfully completed......................................
2023-01-08 23:51:41,542:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:41,542:INFO:Creating metrics dataframe
2023-01-08 23:51:41,546:INFO:Initializing Ridge Classifier
2023-01-08 23:51:41,546:INFO:Total runtime is 0.13961114088694254 minutes
2023-01-08 23:51:41,546:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:41,546:INFO:Initializing create_model()
2023-01-08 23:51:41,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:41,546:INFO:Checking exceptions
2023-01-08 23:51:41,546:INFO:Importing libraries
2023-01-08 23:51:41,546:INFO:Copying training dataset
2023-01-08 23:51:41,548:INFO:Defining folds
2023-01-08 23:51:41,548:INFO:Declaring metric variables
2023-01-08 23:51:41,548:INFO:Importing untrained model
2023-01-08 23:51:41,548:INFO:Ridge Classifier Imported successfully
2023-01-08 23:51:41,549:INFO:Starting cross validation
2023-01-08 23:51:41,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:41,592:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,597:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,599:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,599:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,601:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,601:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,603:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,605:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,607:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,609:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,612:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,612:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,614:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,614:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,616:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,617:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,617:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,617:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,619:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,620:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,625:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,626:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:41,630:INFO:Calculating mean and std
2023-01-08 23:51:41,630:INFO:Creating metrics dataframe
2023-01-08 23:51:41,633:INFO:Uploading results into container
2023-01-08 23:51:41,633:INFO:Uploading model into container now
2023-01-08 23:51:41,634:INFO:_master_model_container: 6
2023-01-08 23:51:41,634:INFO:_display_container: 2
2023-01-08 23:51:41,634:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=579, solver='auto', tol=0.001)
2023-01-08 23:51:41,634:INFO:create_model() successfully completed......................................
2023-01-08 23:51:41,707:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:41,707:INFO:Creating metrics dataframe
2023-01-08 23:51:41,711:INFO:Initializing Random Forest Classifier
2023-01-08 23:51:41,711:INFO:Total runtime is 0.14237097104390461 minutes
2023-01-08 23:51:41,711:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:41,711:INFO:Initializing create_model()
2023-01-08 23:51:41,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:41,712:INFO:Checking exceptions
2023-01-08 23:51:41,712:INFO:Importing libraries
2023-01-08 23:51:41,712:INFO:Copying training dataset
2023-01-08 23:51:41,713:INFO:Defining folds
2023-01-08 23:51:41,713:INFO:Declaring metric variables
2023-01-08 23:51:41,713:INFO:Importing untrained model
2023-01-08 23:51:41,714:INFO:Random Forest Classifier Imported successfully
2023-01-08 23:51:41,714:INFO:Starting cross validation
2023-01-08 23:51:41,714:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:42,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,107:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,109:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,109:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,109:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,119:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,140:INFO:Calculating mean and std
2023-01-08 23:51:42,141:INFO:Creating metrics dataframe
2023-01-08 23:51:42,143:INFO:Uploading results into container
2023-01-08 23:51:42,144:INFO:Uploading model into container now
2023-01-08 23:51:42,144:INFO:_master_model_container: 7
2023-01-08 23:51:42,144:INFO:_display_container: 2
2023-01-08 23:51:42,145:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=579, verbose=0, warm_start=False)
2023-01-08 23:51:42,145:INFO:create_model() successfully completed......................................
2023-01-08 23:51:42,223:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:42,223:INFO:Creating metrics dataframe
2023-01-08 23:51:42,227:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 23:51:42,227:INFO:Total runtime is 0.15097376505533852 minutes
2023-01-08 23:51:42,227:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:42,227:INFO:Initializing create_model()
2023-01-08 23:51:42,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:42,228:INFO:Checking exceptions
2023-01-08 23:51:42,228:INFO:Importing libraries
2023-01-08 23:51:42,228:INFO:Copying training dataset
2023-01-08 23:51:42,229:INFO:Defining folds
2023-01-08 23:51:42,229:INFO:Declaring metric variables
2023-01-08 23:51:42,229:INFO:Importing untrained model
2023-01-08 23:51:42,230:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 23:51:42,230:INFO:Starting cross validation
2023-01-08 23:51:42,230:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:42,296:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,297:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,305:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,307:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,308:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,309:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,309:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,312:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,313:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,316:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,316:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,317:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,320:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,321:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,323:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,327:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,328:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,329:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,331:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,332:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,332:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,333:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,335:INFO:Calculating mean and std
2023-01-08 23:51:42,336:INFO:Creating metrics dataframe
2023-01-08 23:51:42,340:INFO:Uploading results into container
2023-01-08 23:51:42,340:INFO:Uploading model into container now
2023-01-08 23:51:42,340:INFO:_master_model_container: 8
2023-01-08 23:51:42,340:INFO:_display_container: 2
2023-01-08 23:51:42,341:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:51:42,341:INFO:create_model() successfully completed......................................
2023-01-08 23:51:42,421:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:42,421:INFO:Creating metrics dataframe
2023-01-08 23:51:42,425:INFO:Initializing Ada Boost Classifier
2023-01-08 23:51:42,426:INFO:Total runtime is 0.1542898058891296 minutes
2023-01-08 23:51:42,426:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:42,426:INFO:Initializing create_model()
2023-01-08 23:51:42,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:42,426:INFO:Checking exceptions
2023-01-08 23:51:42,426:INFO:Importing libraries
2023-01-08 23:51:42,426:INFO:Copying training dataset
2023-01-08 23:51:42,428:INFO:Defining folds
2023-01-08 23:51:42,428:INFO:Declaring metric variables
2023-01-08 23:51:42,428:INFO:Importing untrained model
2023-01-08 23:51:42,428:INFO:Ada Boost Classifier Imported successfully
2023-01-08 23:51:42,429:INFO:Starting cross validation
2023-01-08 23:51:42,429:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:42,633:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,634:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,634:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,636:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,637:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,640:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,641:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,642:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,643:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,645:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,645:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,646:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,647:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,647:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,648:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,650:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,651:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,651:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,652:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,653:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,654:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,654:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,655:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,656:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,658:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,659:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:42,663:INFO:Calculating mean and std
2023-01-08 23:51:42,663:INFO:Creating metrics dataframe
2023-01-08 23:51:42,666:INFO:Uploading results into container
2023-01-08 23:51:42,667:INFO:Uploading model into container now
2023-01-08 23:51:42,667:INFO:_master_model_container: 9
2023-01-08 23:51:42,667:INFO:_display_container: 2
2023-01-08 23:51:42,667:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=579)
2023-01-08 23:51:42,667:INFO:create_model() successfully completed......................................
2023-01-08 23:51:42,746:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:42,746:INFO:Creating metrics dataframe
2023-01-08 23:51:42,750:INFO:Initializing Gradient Boosting Classifier
2023-01-08 23:51:42,751:INFO:Total runtime is 0.15970045725504553 minutes
2023-01-08 23:51:42,751:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:42,751:INFO:Initializing create_model()
2023-01-08 23:51:42,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:42,751:INFO:Checking exceptions
2023-01-08 23:51:42,751:INFO:Importing libraries
2023-01-08 23:51:42,751:INFO:Copying training dataset
2023-01-08 23:51:42,753:INFO:Defining folds
2023-01-08 23:51:42,753:INFO:Declaring metric variables
2023-01-08 23:51:42,753:INFO:Importing untrained model
2023-01-08 23:51:42,753:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 23:51:42,754:INFO:Starting cross validation
2023-01-08 23:51:42,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:43,138:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,141:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,143:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,164:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,167:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,168:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,169:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,186:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,188:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,191:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,193:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,195:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,197:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,204:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,204:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,208:INFO:Calculating mean and std
2023-01-08 23:51:43,208:INFO:Creating metrics dataframe
2023-01-08 23:51:43,212:INFO:Uploading results into container
2023-01-08 23:51:43,212:INFO:Uploading model into container now
2023-01-08 23:51:43,212:INFO:_master_model_container: 10
2023-01-08 23:51:43,213:INFO:_display_container: 2
2023-01-08 23:51:43,213:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=579, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 23:51:43,213:INFO:create_model() successfully completed......................................
2023-01-08 23:51:43,297:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:43,297:INFO:Creating metrics dataframe
2023-01-08 23:51:43,301:INFO:Initializing Linear Discriminant Analysis
2023-01-08 23:51:43,301:INFO:Total runtime is 0.1688644131024678 minutes
2023-01-08 23:51:43,301:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:43,301:INFO:Initializing create_model()
2023-01-08 23:51:43,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:43,302:INFO:Checking exceptions
2023-01-08 23:51:43,302:INFO:Importing libraries
2023-01-08 23:51:43,302:INFO:Copying training dataset
2023-01-08 23:51:43,303:INFO:Defining folds
2023-01-08 23:51:43,303:INFO:Declaring metric variables
2023-01-08 23:51:43,304:INFO:Importing untrained model
2023-01-08 23:51:43,304:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 23:51:43,304:INFO:Starting cross validation
2023-01-08 23:51:43,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:43,367:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,368:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,370:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,371:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,372:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,373:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,381:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,382:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,384:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,384:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,384:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,387:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,387:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,389:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,390:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,392:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,393:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,393:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,393:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,394:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,394:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,396:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,397:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,400:INFO:Calculating mean and std
2023-01-08 23:51:43,400:INFO:Creating metrics dataframe
2023-01-08 23:51:43,405:INFO:Uploading results into container
2023-01-08 23:51:43,405:INFO:Uploading model into container now
2023-01-08 23:51:43,405:INFO:_master_model_container: 11
2023-01-08 23:51:43,405:INFO:_display_container: 2
2023-01-08 23:51:43,405:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 23:51:43,405:INFO:create_model() successfully completed......................................
2023-01-08 23:51:43,477:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:43,477:INFO:Creating metrics dataframe
2023-01-08 23:51:43,481:INFO:Initializing Extra Trees Classifier
2023-01-08 23:51:43,482:INFO:Total runtime is 0.17189011971155796 minutes
2023-01-08 23:51:43,482:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:43,482:INFO:Initializing create_model()
2023-01-08 23:51:43,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:43,482:INFO:Checking exceptions
2023-01-08 23:51:43,482:INFO:Importing libraries
2023-01-08 23:51:43,482:INFO:Copying training dataset
2023-01-08 23:51:43,484:INFO:Defining folds
2023-01-08 23:51:43,484:INFO:Declaring metric variables
2023-01-08 23:51:43,484:INFO:Importing untrained model
2023-01-08 23:51:43,484:INFO:Extra Trees Classifier Imported successfully
2023-01-08 23:51:43,484:INFO:Starting cross validation
2023-01-08 23:51:43,485:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:43,809:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,810:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,811:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,813:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,816:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,817:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,820:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,821:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,824:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,827:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,832:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,834:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,835:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,837:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,844:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,845:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,846:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,846:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,847:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,850:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,857:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,859:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:43,861:INFO:Calculating mean and std
2023-01-08 23:51:43,862:INFO:Creating metrics dataframe
2023-01-08 23:51:43,865:INFO:Uploading results into container
2023-01-08 23:51:43,865:INFO:Uploading model into container now
2023-01-08 23:51:43,866:INFO:_master_model_container: 12
2023-01-08 23:51:43,866:INFO:_display_container: 2
2023-01-08 23:51:43,866:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=579, verbose=0, warm_start=False)
2023-01-08 23:51:43,866:INFO:create_model() successfully completed......................................
2023-01-08 23:51:43,942:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:43,942:INFO:Creating metrics dataframe
2023-01-08 23:51:43,946:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 23:51:43,946:INFO:Total runtime is 0.1796199480692545 minutes
2023-01-08 23:51:43,947:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:43,947:INFO:Initializing create_model()
2023-01-08 23:51:43,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:43,947:INFO:Checking exceptions
2023-01-08 23:51:43,947:INFO:Importing libraries
2023-01-08 23:51:43,947:INFO:Copying training dataset
2023-01-08 23:51:43,949:INFO:Defining folds
2023-01-08 23:51:43,949:INFO:Declaring metric variables
2023-01-08 23:51:43,949:INFO:Importing untrained model
2023-01-08 23:51:43,949:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 23:51:43,949:INFO:Starting cross validation
2023-01-08 23:51:43,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:44,090:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,091:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,097:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,097:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,108:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,113:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,116:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,119:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,121:INFO:Calculating mean and std
2023-01-08 23:51:44,122:INFO:Creating metrics dataframe
2023-01-08 23:51:44,125:INFO:Uploading results into container
2023-01-08 23:51:44,125:INFO:Uploading model into container now
2023-01-08 23:51:44,125:INFO:_master_model_container: 13
2023-01-08 23:51:44,125:INFO:_display_container: 2
2023-01-08 23:51:44,126:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=579, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 23:51:44,126:INFO:create_model() successfully completed......................................
2023-01-08 23:51:44,209:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:44,209:INFO:Creating metrics dataframe
2023-01-08 23:51:44,214:INFO:Initializing Dummy Classifier
2023-01-08 23:51:44,214:INFO:Total runtime is 0.1840831796328226 minutes
2023-01-08 23:51:44,214:INFO:SubProcess create_model() called ==================================
2023-01-08 23:51:44,214:INFO:Initializing create_model()
2023-01-08 23:51:44,214:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BB7D580>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:44,214:INFO:Checking exceptions
2023-01-08 23:51:44,214:INFO:Importing libraries
2023-01-08 23:51:44,214:INFO:Copying training dataset
2023-01-08 23:51:44,216:INFO:Defining folds
2023-01-08 23:51:44,216:INFO:Declaring metric variables
2023-01-08 23:51:44,216:INFO:Importing untrained model
2023-01-08 23:51:44,216:INFO:Dummy Classifier Imported successfully
2023-01-08 23:51:44,217:INFO:Starting cross validation
2023-01-08 23:51:44,217:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:51:44,271:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,273:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,275:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:44,276:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,284:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,286:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:44,289:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:44,292:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,292:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,293:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,296:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:44,296:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:44,297:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,301:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,301:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:44,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:44,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,302:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,304:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:44,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,307:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,308:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,309:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:44,309:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,312:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:51:44,313:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:51:44,315:INFO:Calculating mean and std
2023-01-08 23:51:44,316:INFO:Creating metrics dataframe
2023-01-08 23:51:44,318:INFO:Uploading results into container
2023-01-08 23:51:44,319:INFO:Uploading model into container now
2023-01-08 23:51:44,319:INFO:_master_model_container: 14
2023-01-08 23:51:44,319:INFO:_display_container: 2
2023-01-08 23:51:44,319:INFO:DummyClassifier(constant=None, random_state=579, strategy='prior')
2023-01-08 23:51:44,320:INFO:create_model() successfully completed......................................
2023-01-08 23:51:44,392:INFO:SubProcess create_model() end ==================================
2023-01-08 23:51:44,392:INFO:Creating metrics dataframe
2023-01-08 23:51:44,398:INFO:Initializing create_model()
2023-01-08 23:51:44,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B780250>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=579, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:51:44,398:INFO:Checking exceptions
2023-01-08 23:51:44,399:INFO:Importing libraries
2023-01-08 23:51:44,399:INFO:Copying training dataset
2023-01-08 23:51:44,400:INFO:Defining folds
2023-01-08 23:51:44,400:INFO:Declaring metric variables
2023-01-08 23:51:44,401:INFO:Importing untrained model
2023-01-08 23:51:44,401:INFO:Declaring custom model
2023-01-08 23:51:44,401:INFO:Logistic Regression Imported successfully
2023-01-08 23:51:44,401:INFO:Cross validation set to False
2023-01-08 23:51:44,402:INFO:Fitting Model
2023-01-08 23:51:44,439:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=579, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 23:51:44,439:INFO:create_model() successfully completed......................................
2023-01-08 23:51:44,527:INFO:_master_model_container: 14
2023-01-08 23:51:44,527:INFO:_display_container: 2
2023-01-08 23:51:44,528:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=579, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 23:51:44,528:INFO:compare_models() successfully completed......................................
2023-01-08 23:51:44,534:INFO:Initializing save_model()
2023-01-08 23:51:44,535:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=579, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=best_model.pkl, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-08 23:51:44,535:INFO:Adding model into prep_pipe
2023-01-08 23:51:44,539:INFO:best_model.pkl.pkl saved in current working directory
2023-01-08 23:51:44,543:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False...
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=579,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-01-08 23:51:44,543:INFO:save_model() successfully completed......................................
2023-01-08 23:53:07,745:INFO:PyCaret ClassificationExperiment
2023-01-08 23:53:07,745:INFO:Logging name: clf-default-name
2023-01-08 23:53:07,746:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 23:53:07,746:INFO:version 3.0.0.rc6
2023-01-08 23:53:07,746:INFO:Initializing setup()
2023-01-08 23:53:07,746:INFO:self.USI: 296d
2023-01-08 23:53:07,746:INFO:self._variable_keys: {'memory', 'X', 'gpu_param', 'pipeline', 'data', 'y_test', 'target_param', 'fold_groups_param', 'n_jobs_param', 'X_test', 'y_train', 'idx', 'seed', 'X_train', 'exp_id', '_available_plots', 'fold_shuffle_param', '_ml_usecase', 'y', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_generator', 'html_param', 'USI', 'log_plots_param', 'is_multiclass', 'logging_param', 'exp_name_log'}
2023-01-08 23:53:07,746:INFO:Checking environment
2023-01-08 23:53:07,746:INFO:python_version: 3.9.15
2023-01-08 23:53:07,746:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 23:53:07,746:INFO:machine: AMD64
2023-01-08 23:53:07,746:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 23:53:07,746:INFO:Memory: svmem(total=17010110464, available=2149711872, percent=87.4, used=14860398592, free=2149711872)
2023-01-08 23:53:07,747:INFO:Physical Core: 6
2023-01-08 23:53:07,747:INFO:Logical Core: 12
2023-01-08 23:53:07,747:INFO:Checking libraries
2023-01-08 23:53:07,747:INFO:System:
2023-01-08 23:53:07,747:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 23:53:07,747:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 23:53:07,747:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 23:53:07,747:INFO:PyCaret required dependencies:
2023-01-08 23:53:07,747:INFO:                 pip: 22.3.1
2023-01-08 23:53:07,747:INFO:          setuptools: 65.6.3
2023-01-08 23:53:07,747:INFO:             pycaret: 3.0.0rc6
2023-01-08 23:53:07,747:INFO:             IPython: 8.8.0
2023-01-08 23:53:07,747:INFO:          ipywidgets: 8.0.4
2023-01-08 23:53:07,747:INFO:                tqdm: 4.64.1
2023-01-08 23:53:07,747:INFO:               numpy: 1.22.4
2023-01-08 23:53:07,747:INFO:              pandas: 1.5.2
2023-01-08 23:53:07,748:INFO:              jinja2: 3.1.2
2023-01-08 23:53:07,748:INFO:               scipy: 1.9.3
2023-01-08 23:53:07,748:INFO:              joblib: 1.2.0
2023-01-08 23:53:07,748:INFO:             sklearn: 1.1.3
2023-01-08 23:53:07,748:INFO:                pyod: 1.0.7
2023-01-08 23:53:07,748:INFO:            imblearn: 0.10.1
2023-01-08 23:53:07,748:INFO:   category_encoders: 2.5.1.post0
2023-01-08 23:53:07,748:INFO:            lightgbm: 3.3.4
2023-01-08 23:53:07,748:INFO:               numba: 0.56.4
2023-01-08 23:53:07,748:INFO:            requests: 2.28.1
2023-01-08 23:53:07,748:INFO:          matplotlib: 3.6.2
2023-01-08 23:53:07,748:INFO:          scikitplot: 0.3.7
2023-01-08 23:53:07,748:INFO:         yellowbrick: 1.5
2023-01-08 23:53:07,748:INFO:              plotly: 5.11.0
2023-01-08 23:53:07,749:INFO:             kaleido: 0.2.1
2023-01-08 23:53:07,749:INFO:         statsmodels: 0.13.5
2023-01-08 23:53:07,749:INFO:              sktime: 0.14.1
2023-01-08 23:53:07,749:INFO:               tbats: 1.1.2
2023-01-08 23:53:07,749:INFO:            pmdarima: 2.0.2
2023-01-08 23:53:07,749:INFO:              psutil: 5.9.0
2023-01-08 23:53:07,749:INFO:PyCaret optional dependencies:
2023-01-08 23:53:07,749:INFO:                shap: Not installed
2023-01-08 23:53:07,749:INFO:           interpret: Not installed
2023-01-08 23:53:07,749:INFO:                umap: Not installed
2023-01-08 23:53:07,749:INFO:    pandas_profiling: 3.6.2
2023-01-08 23:53:07,749:INFO:  explainerdashboard: Not installed
2023-01-08 23:53:07,750:INFO:             autoviz: Not installed
2023-01-08 23:53:07,750:INFO:           fairlearn: Not installed
2023-01-08 23:53:07,750:INFO:             xgboost: Not installed
2023-01-08 23:53:07,750:INFO:            catboost: Not installed
2023-01-08 23:53:07,750:INFO:              kmodes: Not installed
2023-01-08 23:53:07,750:INFO:             mlxtend: Not installed
2023-01-08 23:53:07,750:INFO:       statsforecast: Not installed
2023-01-08 23:53:07,750:INFO:        tune_sklearn: Not installed
2023-01-08 23:53:07,750:INFO:                 ray: Not installed
2023-01-08 23:53:07,750:INFO:            hyperopt: Not installed
2023-01-08 23:53:07,750:INFO:              optuna: Not installed
2023-01-08 23:53:07,750:INFO:               skopt: Not installed
2023-01-08 23:53:07,750:INFO:              mlflow: Not installed
2023-01-08 23:53:07,750:INFO:              gradio: Not installed
2023-01-08 23:53:07,750:INFO:             fastapi: Not installed
2023-01-08 23:53:07,750:INFO:             uvicorn: Not installed
2023-01-08 23:53:07,750:INFO:              m2cgen: Not installed
2023-01-08 23:53:07,750:INFO:           evidently: Not installed
2023-01-08 23:53:07,750:INFO:                nltk: Not installed
2023-01-08 23:53:07,751:INFO:            pyLDAvis: Not installed
2023-01-08 23:53:07,751:INFO:              gensim: Not installed
2023-01-08 23:53:07,751:INFO:               spacy: Not installed
2023-01-08 23:53:07,751:INFO:           wordcloud: Not installed
2023-01-08 23:53:07,751:INFO:            textblob: Not installed
2023-01-08 23:53:07,751:INFO:               fugue: Not installed
2023-01-08 23:53:07,751:INFO:           streamlit: 1.16.0
2023-01-08 23:53:07,751:INFO:             prophet: Not installed
2023-01-08 23:53:07,751:INFO:None
2023-01-08 23:53:07,751:INFO:Set up data.
2023-01-08 23:53:07,755:INFO:Set up train/test split.
2023-01-08 23:53:07,758:INFO:Set up index.
2023-01-08 23:53:07,758:INFO:Set up folding strategy.
2023-01-08 23:53:07,759:INFO:Assigning column types.
2023-01-08 23:53:07,762:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 23:53:07,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:53:07,802:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:53:07,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:07,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:07,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:53:07,867:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:53:07,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:07,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:07,891:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 23:53:07,929:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:53:07,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:07,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:07,988:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:53:08,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:08,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:08,010:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 23:53:08,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:08,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:08,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:08,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:08,130:INFO:Preparing preprocessing pipeline...
2023-01-08 23:53:08,131:INFO:Set up label encoding.
2023-01-08 23:53:08,131:INFO:Set up simple imputation.
2023-01-08 23:53:08,167:INFO:Finished creating preprocessing pipeline.
2023-01-08 23:53:08,170:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 23:53:08,170:INFO:Creating final display dataframe.
2023-01-08 23:53:08,349:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               4583
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               296d
2023-01-08 23:53:08,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:08,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:08,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:08,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:53:08,489:INFO:setup() successfully completed in 0.74s...............
2023-01-08 23:53:08,492:INFO:Initializing compare_models()
2023-01-08 23:53:08,492:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-08 23:53:08,492:INFO:Checking exceptions
2023-01-08 23:53:08,495:INFO:Preparing display monitor
2023-01-08 23:53:08,497:INFO:Initializing Logistic Regression
2023-01-08 23:53:08,497:INFO:Total runtime is 0.0 minutes
2023-01-08 23:53:08,497:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:08,497:INFO:Initializing create_model()
2023-01-08 23:53:08,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:08,497:INFO:Checking exceptions
2023-01-08 23:53:08,497:INFO:Importing libraries
2023-01-08 23:53:08,497:INFO:Copying training dataset
2023-01-08 23:53:08,499:INFO:Defining folds
2023-01-08 23:53:08,499:INFO:Declaring metric variables
2023-01-08 23:53:08,499:INFO:Importing untrained model
2023-01-08 23:53:08,500:INFO:Logistic Regression Imported successfully
2023-01-08 23:53:08,500:INFO:Starting cross validation
2023-01-08 23:53:08,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:08,799:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,800:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,800:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,803:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,809:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,810:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,812:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,813:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,815:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,816:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,817:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,818:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,821:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,821:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,823:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,824:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,824:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,824:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,825:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,827:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,827:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,828:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,830:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:08,833:INFO:Calculating mean and std
2023-01-08 23:53:08,833:INFO:Creating metrics dataframe
2023-01-08 23:53:08,837:INFO:Uploading results into container
2023-01-08 23:53:08,838:INFO:Uploading model into container now
2023-01-08 23:53:08,838:INFO:_master_model_container: 1
2023-01-08 23:53:08,838:INFO:_display_container: 2
2023-01-08 23:53:08,838:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4583, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-08 23:53:08,838:INFO:create_model() successfully completed......................................
2023-01-08 23:53:08,927:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:08,927:INFO:Creating metrics dataframe
2023-01-08 23:53:08,931:INFO:Initializing K Neighbors Classifier
2023-01-08 23:53:08,931:INFO:Total runtime is 0.007230051358540853 minutes
2023-01-08 23:53:08,932:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:08,932:INFO:Initializing create_model()
2023-01-08 23:53:08,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:08,932:INFO:Checking exceptions
2023-01-08 23:53:08,932:INFO:Importing libraries
2023-01-08 23:53:08,932:INFO:Copying training dataset
2023-01-08 23:53:08,934:INFO:Defining folds
2023-01-08 23:53:08,934:INFO:Declaring metric variables
2023-01-08 23:53:08,934:INFO:Importing untrained model
2023-01-08 23:53:08,935:INFO:K Neighbors Classifier Imported successfully
2023-01-08 23:53:08,935:INFO:Starting cross validation
2023-01-08 23:53:08,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:09,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,059:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,061:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,061:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,075:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,077:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,079:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,080:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,081:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,081:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,082:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,083:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,087:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,087:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,089:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,089:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,091:INFO:Calculating mean and std
2023-01-08 23:53:09,092:INFO:Creating metrics dataframe
2023-01-08 23:53:09,095:INFO:Uploading results into container
2023-01-08 23:53:09,095:INFO:Uploading model into container now
2023-01-08 23:53:09,096:INFO:_master_model_container: 2
2023-01-08 23:53:09,096:INFO:_display_container: 2
2023-01-08 23:53:09,096:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-08 23:53:09,096:INFO:create_model() successfully completed......................................
2023-01-08 23:53:09,174:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:09,174:INFO:Creating metrics dataframe
2023-01-08 23:53:09,178:INFO:Initializing Naive Bayes
2023-01-08 23:53:09,178:INFO:Total runtime is 0.011352336406707762 minutes
2023-01-08 23:53:09,178:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:09,178:INFO:Initializing create_model()
2023-01-08 23:53:09,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:09,178:INFO:Checking exceptions
2023-01-08 23:53:09,178:INFO:Importing libraries
2023-01-08 23:53:09,178:INFO:Copying training dataset
2023-01-08 23:53:09,180:INFO:Defining folds
2023-01-08 23:53:09,180:INFO:Declaring metric variables
2023-01-08 23:53:09,180:INFO:Importing untrained model
2023-01-08 23:53:09,180:INFO:Naive Bayes Imported successfully
2023-01-08 23:53:09,181:INFO:Starting cross validation
2023-01-08 23:53:09,181:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:09,240:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,243:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,244:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,247:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,249:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,250:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,254:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,259:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,260:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,265:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,269:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,270:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,270:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,271:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,271:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,272:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,272:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,275:INFO:Calculating mean and std
2023-01-08 23:53:09,276:INFO:Creating metrics dataframe
2023-01-08 23:53:09,279:INFO:Uploading results into container
2023-01-08 23:53:09,279:INFO:Uploading model into container now
2023-01-08 23:53:09,279:INFO:_master_model_container: 3
2023-01-08 23:53:09,279:INFO:_display_container: 2
2023-01-08 23:53:09,280:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-08 23:53:09,280:INFO:create_model() successfully completed......................................
2023-01-08 23:53:09,354:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:09,354:INFO:Creating metrics dataframe
2023-01-08 23:53:09,359:INFO:Initializing Decision Tree Classifier
2023-01-08 23:53:09,359:INFO:Total runtime is 0.014366976420084634 minutes
2023-01-08 23:53:09,359:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:09,360:INFO:Initializing create_model()
2023-01-08 23:53:09,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:09,360:INFO:Checking exceptions
2023-01-08 23:53:09,360:INFO:Importing libraries
2023-01-08 23:53:09,360:INFO:Copying training dataset
2023-01-08 23:53:09,361:INFO:Defining folds
2023-01-08 23:53:09,361:INFO:Declaring metric variables
2023-01-08 23:53:09,361:INFO:Importing untrained model
2023-01-08 23:53:09,362:INFO:Decision Tree Classifier Imported successfully
2023-01-08 23:53:09,362:INFO:Starting cross validation
2023-01-08 23:53:09,362:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:09,429:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,435:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,437:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,437:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,438:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,441:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,450:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,450:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,453:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,453:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,454:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,454:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,455:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,458:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,459:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,459:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,462:INFO:Calculating mean and std
2023-01-08 23:53:09,463:INFO:Creating metrics dataframe
2023-01-08 23:53:09,466:INFO:Uploading results into container
2023-01-08 23:53:09,466:INFO:Uploading model into container now
2023-01-08 23:53:09,466:INFO:_master_model_container: 4
2023-01-08 23:53:09,467:INFO:_display_container: 2
2023-01-08 23:53:09,467:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4583, splitter='best')
2023-01-08 23:53:09,467:INFO:create_model() successfully completed......................................
2023-01-08 23:53:09,547:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:09,547:INFO:Creating metrics dataframe
2023-01-08 23:53:09,553:INFO:Initializing SVM - Linear Kernel
2023-01-08 23:53:09,553:INFO:Total runtime is 0.017608300844828288 minutes
2023-01-08 23:53:09,553:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:09,554:INFO:Initializing create_model()
2023-01-08 23:53:09,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:09,554:INFO:Checking exceptions
2023-01-08 23:53:09,554:INFO:Importing libraries
2023-01-08 23:53:09,555:INFO:Copying training dataset
2023-01-08 23:53:09,558:INFO:Defining folds
2023-01-08 23:53:09,558:INFO:Declaring metric variables
2023-01-08 23:53:09,558:INFO:Importing untrained model
2023-01-08 23:53:09,559:INFO:SVM - Linear Kernel Imported successfully
2023-01-08 23:53:09,559:INFO:Starting cross validation
2023-01-08 23:53:09,560:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:09,632:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,635:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,637:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,646:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,647:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,648:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,649:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,650:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,651:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,652:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,652:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,654:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:09,655:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,655:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,657:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:09,658:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,667:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:09,668:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,672:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,674:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,675:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,675:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:09,677:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,677:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:09,677:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,678:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,678:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,679:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,682:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,685:INFO:Calculating mean and std
2023-01-08 23:53:09,685:INFO:Creating metrics dataframe
2023-01-08 23:53:09,689:INFO:Uploading results into container
2023-01-08 23:53:09,689:INFO:Uploading model into container now
2023-01-08 23:53:09,689:INFO:_master_model_container: 5
2023-01-08 23:53:09,689:INFO:_display_container: 2
2023-01-08 23:53:09,690:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4583, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-08 23:53:09,690:INFO:create_model() successfully completed......................................
2023-01-08 23:53:09,773:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:09,773:INFO:Creating metrics dataframe
2023-01-08 23:53:09,778:INFO:Initializing Ridge Classifier
2023-01-08 23:53:09,778:INFO:Total runtime is 0.021358195940653482 minutes
2023-01-08 23:53:09,778:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:09,778:INFO:Initializing create_model()
2023-01-08 23:53:09,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:09,778:INFO:Checking exceptions
2023-01-08 23:53:09,778:INFO:Importing libraries
2023-01-08 23:53:09,778:INFO:Copying training dataset
2023-01-08 23:53:09,780:INFO:Defining folds
2023-01-08 23:53:09,780:INFO:Declaring metric variables
2023-01-08 23:53:09,780:INFO:Importing untrained model
2023-01-08 23:53:09,781:INFO:Ridge Classifier Imported successfully
2023-01-08 23:53:09,781:INFO:Starting cross validation
2023-01-08 23:53:09,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:09,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,832:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,832:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,833:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:09,834:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,834:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,840:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,842:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,844:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,844:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,844:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,846:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,846:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,851:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,851:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,853:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,853:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,855:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,857:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,857:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,860:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,861:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:09,864:INFO:Calculating mean and std
2023-01-08 23:53:09,865:INFO:Creating metrics dataframe
2023-01-08 23:53:09,868:INFO:Uploading results into container
2023-01-08 23:53:09,869:INFO:Uploading model into container now
2023-01-08 23:53:09,869:INFO:_master_model_container: 6
2023-01-08 23:53:09,869:INFO:_display_container: 2
2023-01-08 23:53:09,869:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4583, solver='auto', tol=0.001)
2023-01-08 23:53:09,869:INFO:create_model() successfully completed......................................
2023-01-08 23:53:09,939:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:09,940:INFO:Creating metrics dataframe
2023-01-08 23:53:09,943:INFO:Initializing Random Forest Classifier
2023-01-08 23:53:09,943:INFO:Total runtime is 0.02411005894343058 minutes
2023-01-08 23:53:09,944:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:09,944:INFO:Initializing create_model()
2023-01-08 23:53:09,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:09,944:INFO:Checking exceptions
2023-01-08 23:53:09,944:INFO:Importing libraries
2023-01-08 23:53:09,944:INFO:Copying training dataset
2023-01-08 23:53:09,946:INFO:Defining folds
2023-01-08 23:53:09,946:INFO:Declaring metric variables
2023-01-08 23:53:09,946:INFO:Importing untrained model
2023-01-08 23:53:09,946:INFO:Random Forest Classifier Imported successfully
2023-01-08 23:53:09,946:INFO:Starting cross validation
2023-01-08 23:53:09,947:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:10,343:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,345:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,348:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,352:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,355:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,357:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,359:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,359:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,361:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,361:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,361:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,363:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,363:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,364:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,366:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,374:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,377:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,378:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,379:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,380:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,381:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,384:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,386:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,394:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,396:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,396:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,397:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,397:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,400:INFO:Calculating mean and std
2023-01-08 23:53:10,401:INFO:Creating metrics dataframe
2023-01-08 23:53:10,404:INFO:Uploading results into container
2023-01-08 23:53:10,405:INFO:Uploading model into container now
2023-01-08 23:53:10,405:INFO:_master_model_container: 7
2023-01-08 23:53:10,405:INFO:_display_container: 2
2023-01-08 23:53:10,406:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4583, verbose=0, warm_start=False)
2023-01-08 23:53:10,406:INFO:create_model() successfully completed......................................
2023-01-08 23:53:10,485:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:10,485:INFO:Creating metrics dataframe
2023-01-08 23:53:10,490:INFO:Initializing Quadratic Discriminant Analysis
2023-01-08 23:53:10,491:INFO:Total runtime is 0.03323471546173096 minutes
2023-01-08 23:53:10,491:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:10,491:INFO:Initializing create_model()
2023-01-08 23:53:10,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:10,491:INFO:Checking exceptions
2023-01-08 23:53:10,491:INFO:Importing libraries
2023-01-08 23:53:10,491:INFO:Copying training dataset
2023-01-08 23:53:10,493:INFO:Defining folds
2023-01-08 23:53:10,493:INFO:Declaring metric variables
2023-01-08 23:53:10,494:INFO:Importing untrained model
2023-01-08 23:53:10,494:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 23:53:10,494:INFO:Starting cross validation
2023-01-08 23:53:10,495:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:10,557:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,559:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,561:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,562:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,564:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,566:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,567:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,569:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,572:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,573:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,573:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,575:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,575:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,577:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,578:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,580:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,581:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,582:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,582:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,584:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,585:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,589:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,589:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,593:INFO:Calculating mean and std
2023-01-08 23:53:10,594:INFO:Creating metrics dataframe
2023-01-08 23:53:10,597:INFO:Uploading results into container
2023-01-08 23:53:10,597:INFO:Uploading model into container now
2023-01-08 23:53:10,597:INFO:_master_model_container: 8
2023-01-08 23:53:10,597:INFO:_display_container: 2
2023-01-08 23:53:10,598:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:53:10,598:INFO:create_model() successfully completed......................................
2023-01-08 23:53:10,670:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:10,670:INFO:Creating metrics dataframe
2023-01-08 23:53:10,674:INFO:Initializing Ada Boost Classifier
2023-01-08 23:53:10,674:INFO:Total runtime is 0.0362933079401652 minutes
2023-01-08 23:53:10,674:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:10,674:INFO:Initializing create_model()
2023-01-08 23:53:10,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:10,674:INFO:Checking exceptions
2023-01-08 23:53:10,674:INFO:Importing libraries
2023-01-08 23:53:10,674:INFO:Copying training dataset
2023-01-08 23:53:10,676:INFO:Defining folds
2023-01-08 23:53:10,676:INFO:Declaring metric variables
2023-01-08 23:53:10,676:INFO:Importing untrained model
2023-01-08 23:53:10,676:INFO:Ada Boost Classifier Imported successfully
2023-01-08 23:53:10,676:INFO:Starting cross validation
2023-01-08 23:53:10,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:10,879:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,881:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,890:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,908:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,909:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,911:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,916:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,917:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,920:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,922:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,924:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,924:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,925:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,925:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,932:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,933:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,935:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,936:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,938:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:10,941:INFO:Calculating mean and std
2023-01-08 23:53:10,942:INFO:Creating metrics dataframe
2023-01-08 23:53:10,945:INFO:Uploading results into container
2023-01-08 23:53:10,945:INFO:Uploading model into container now
2023-01-08 23:53:10,946:INFO:_master_model_container: 9
2023-01-08 23:53:10,946:INFO:_display_container: 2
2023-01-08 23:53:10,946:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4583)
2023-01-08 23:53:10,946:INFO:create_model() successfully completed......................................
2023-01-08 23:53:11,017:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:11,017:INFO:Creating metrics dataframe
2023-01-08 23:53:11,021:INFO:Initializing Gradient Boosting Classifier
2023-01-08 23:53:11,021:INFO:Total runtime is 0.042072574297587075 minutes
2023-01-08 23:53:11,021:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:11,021:INFO:Initializing create_model()
2023-01-08 23:53:11,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:11,021:INFO:Checking exceptions
2023-01-08 23:53:11,021:INFO:Importing libraries
2023-01-08 23:53:11,022:INFO:Copying training dataset
2023-01-08 23:53:11,023:INFO:Defining folds
2023-01-08 23:53:11,023:INFO:Declaring metric variables
2023-01-08 23:53:11,023:INFO:Importing untrained model
2023-01-08 23:53:11,024:INFO:Gradient Boosting Classifier Imported successfully
2023-01-08 23:53:11,024:INFO:Starting cross validation
2023-01-08 23:53:11,025:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:11,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,410:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,413:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,413:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,418:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,418:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,421:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,425:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,425:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,429:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,431:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,433:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,450:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,450:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,454:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,454:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,455:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,455:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,458:INFO:Calculating mean and std
2023-01-08 23:53:11,459:INFO:Creating metrics dataframe
2023-01-08 23:53:11,462:INFO:Uploading results into container
2023-01-08 23:53:11,463:INFO:Uploading model into container now
2023-01-08 23:53:11,463:INFO:_master_model_container: 10
2023-01-08 23:53:11,463:INFO:_display_container: 2
2023-01-08 23:53:11,463:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4583, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-08 23:53:11,464:INFO:create_model() successfully completed......................................
2023-01-08 23:53:11,542:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:11,543:INFO:Creating metrics dataframe
2023-01-08 23:53:11,547:INFO:Initializing Linear Discriminant Analysis
2023-01-08 23:53:11,547:INFO:Total runtime is 0.050840739409128824 minutes
2023-01-08 23:53:11,547:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:11,547:INFO:Initializing create_model()
2023-01-08 23:53:11,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:11,547:INFO:Checking exceptions
2023-01-08 23:53:11,547:INFO:Importing libraries
2023-01-08 23:53:11,547:INFO:Copying training dataset
2023-01-08 23:53:11,549:INFO:Defining folds
2023-01-08 23:53:11,549:INFO:Declaring metric variables
2023-01-08 23:53:11,549:INFO:Importing untrained model
2023-01-08 23:53:11,550:INFO:Linear Discriminant Analysis Imported successfully
2023-01-08 23:53:11,550:INFO:Starting cross validation
2023-01-08 23:53:11,550:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:11,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,617:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,619:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,621:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,624:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,624:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,626:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,628:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,629:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,630:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,630:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,632:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,632:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,633:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,633:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,635:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,635:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,640:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,641:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,642:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,645:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,646:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,646:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,647:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,648:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,648:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,649:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,650:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:11,652:INFO:Calculating mean and std
2023-01-08 23:53:11,653:INFO:Creating metrics dataframe
2023-01-08 23:53:11,657:INFO:Uploading results into container
2023-01-08 23:53:11,657:INFO:Uploading model into container now
2023-01-08 23:53:11,658:INFO:_master_model_container: 11
2023-01-08 23:53:11,658:INFO:_display_container: 2
2023-01-08 23:53:11,658:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-08 23:53:11,658:INFO:create_model() successfully completed......................................
2023-01-08 23:53:11,732:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:11,733:INFO:Creating metrics dataframe
2023-01-08 23:53:11,737:INFO:Initializing Extra Trees Classifier
2023-01-08 23:53:11,737:INFO:Total runtime is 0.05399895906448364 minutes
2023-01-08 23:53:11,737:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:11,737:INFO:Initializing create_model()
2023-01-08 23:53:11,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:11,737:INFO:Checking exceptions
2023-01-08 23:53:11,737:INFO:Importing libraries
2023-01-08 23:53:11,737:INFO:Copying training dataset
2023-01-08 23:53:11,739:INFO:Defining folds
2023-01-08 23:53:11,739:INFO:Declaring metric variables
2023-01-08 23:53:11,739:INFO:Importing untrained model
2023-01-08 23:53:11,740:INFO:Extra Trees Classifier Imported successfully
2023-01-08 23:53:11,740:INFO:Starting cross validation
2023-01-08 23:53:11,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:12,062:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,067:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,070:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,070:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,075:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,078:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,082:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,087:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,093:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,097:INFO:Calculating mean and std
2023-01-08 23:53:12,098:INFO:Creating metrics dataframe
2023-01-08 23:53:12,101:INFO:Uploading results into container
2023-01-08 23:53:12,101:INFO:Uploading model into container now
2023-01-08 23:53:12,101:INFO:_master_model_container: 12
2023-01-08 23:53:12,101:INFO:_display_container: 2
2023-01-08 23:53:12,102:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4583, verbose=0, warm_start=False)
2023-01-08 23:53:12,102:INFO:create_model() successfully completed......................................
2023-01-08 23:53:12,176:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:12,176:INFO:Creating metrics dataframe
2023-01-08 23:53:12,180:INFO:Initializing Light Gradient Boosting Machine
2023-01-08 23:53:12,180:INFO:Total runtime is 0.06138761043548584 minutes
2023-01-08 23:53:12,180:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:12,180:INFO:Initializing create_model()
2023-01-08 23:53:12,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:12,180:INFO:Checking exceptions
2023-01-08 23:53:12,181:INFO:Importing libraries
2023-01-08 23:53:12,181:INFO:Copying training dataset
2023-01-08 23:53:12,182:INFO:Defining folds
2023-01-08 23:53:12,182:INFO:Declaring metric variables
2023-01-08 23:53:12,183:INFO:Importing untrained model
2023-01-08 23:53:12,183:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-08 23:53:12,183:INFO:Starting cross validation
2023-01-08 23:53:12,184:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:12,280:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,289:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,289:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,289:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,292:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,292:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,292:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,293:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,297:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,300:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,301:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,306:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,307:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,308:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,309:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,313:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,325:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,327:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,329:INFO:Calculating mean and std
2023-01-08 23:53:12,330:INFO:Creating metrics dataframe
2023-01-08 23:53:12,333:INFO:Uploading results into container
2023-01-08 23:53:12,333:INFO:Uploading model into container now
2023-01-08 23:53:12,334:INFO:_master_model_container: 13
2023-01-08 23:53:12,334:INFO:_display_container: 2
2023-01-08 23:53:12,334:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4583, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-08 23:53:12,334:INFO:create_model() successfully completed......................................
2023-01-08 23:53:12,409:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:12,409:INFO:Creating metrics dataframe
2023-01-08 23:53:12,413:INFO:Initializing Dummy Classifier
2023-01-08 23:53:12,413:INFO:Total runtime is 0.06527663866678873 minutes
2023-01-08 23:53:12,413:INFO:SubProcess create_model() called ==================================
2023-01-08 23:53:12,414:INFO:Initializing create_model()
2023-01-08 23:53:12,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3DD240A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:12,414:INFO:Checking exceptions
2023-01-08 23:53:12,414:INFO:Importing libraries
2023-01-08 23:53:12,414:INFO:Copying training dataset
2023-01-08 23:53:12,415:INFO:Defining folds
2023-01-08 23:53:12,416:INFO:Declaring metric variables
2023-01-08 23:53:12,416:INFO:Importing untrained model
2023-01-08 23:53:12,416:INFO:Dummy Classifier Imported successfully
2023-01-08 23:53:12,416:INFO:Starting cross validation
2023-01-08 23:53:12,417:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-08 23:53:12,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,470:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,472:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:12,472:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,473:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,474:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:12,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,478:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,482:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:12,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,486:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:12,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,488:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,488:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,490:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,490:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,491:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:12,491:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:12,491:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,492:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,495:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,496:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,497:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,497:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,498:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:12,499:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:12,499:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,500:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,502:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,504:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,505:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:12,506:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,506:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,508:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,508:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-08 23:53:12,509:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-08 23:53:12,512:INFO:Calculating mean and std
2023-01-08 23:53:12,512:INFO:Creating metrics dataframe
2023-01-08 23:53:12,515:INFO:Uploading results into container
2023-01-08 23:53:12,516:INFO:Uploading model into container now
2023-01-08 23:53:12,516:INFO:_master_model_container: 14
2023-01-08 23:53:12,516:INFO:_display_container: 2
2023-01-08 23:53:12,516:INFO:DummyClassifier(constant=None, random_state=4583, strategy='prior')
2023-01-08 23:53:12,516:INFO:create_model() successfully completed......................................
2023-01-08 23:53:12,591:INFO:SubProcess create_model() end ==================================
2023-01-08 23:53:12,591:INFO:Creating metrics dataframe
2023-01-08 23:53:12,596:INFO:Initializing create_model()
2023-01-08 23:53:12,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A1CBDDC10>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-08 23:53:12,596:INFO:Checking exceptions
2023-01-08 23:53:12,596:INFO:Importing libraries
2023-01-08 23:53:12,597:INFO:Copying training dataset
2023-01-08 23:53:12,598:INFO:Defining folds
2023-01-08 23:53:12,598:INFO:Declaring metric variables
2023-01-08 23:53:12,598:INFO:Importing untrained model
2023-01-08 23:53:12,598:INFO:Declaring custom model
2023-01-08 23:53:12,599:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-08 23:53:12,599:INFO:Cross validation set to False
2023-01-08 23:53:12,599:INFO:Fitting Model
2023-01-08 23:53:12,628:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:53:12,628:INFO:create_model() successfully completed......................................
2023-01-08 23:53:12,719:INFO:_master_model_container: 14
2023-01-08 23:53:12,720:INFO:_display_container: 2
2023-01-08 23:53:12,720:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-08 23:53:12,720:INFO:compare_models() successfully completed......................................
2023-01-08 23:53:12,727:INFO:Initializing save_model()
2023-01-08 23:53:12,727:INFO:save_model(model=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), model_name=best_model.pkl, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-08 23:53:12,727:INFO:Adding model into prep_pipe
2023-01-08 23:53:12,731:INFO:best_model.pkl.pkl saved in current working directory
2023-01-08 23:53:12,735:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2023-01-08 23:53:12,735:INFO:save_model() successfully completed......................................
2023-01-08 23:59:59,384:INFO:PyCaret ClassificationExperiment
2023-01-08 23:59:59,384:INFO:Logging name: clf-default-name
2023-01-08 23:59:59,384:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-08 23:59:59,384:INFO:version 3.0.0.rc6
2023-01-08 23:59:59,384:INFO:Initializing setup()
2023-01-08 23:59:59,384:INFO:self.USI: 6ca0
2023-01-08 23:59:59,384:INFO:self._variable_keys: {'memory', 'X', 'gpu_param', 'pipeline', 'data', 'y_test', 'target_param', 'fold_groups_param', 'n_jobs_param', 'X_test', 'y_train', 'idx', 'seed', 'X_train', 'exp_id', '_available_plots', 'fold_shuffle_param', '_ml_usecase', 'y', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_generator', 'html_param', 'USI', 'log_plots_param', 'is_multiclass', 'logging_param', 'exp_name_log'}
2023-01-08 23:59:59,384:INFO:Checking environment
2023-01-08 23:59:59,384:INFO:python_version: 3.9.15
2023-01-08 23:59:59,384:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-08 23:59:59,384:INFO:machine: AMD64
2023-01-08 23:59:59,385:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-08 23:59:59,385:INFO:Memory: svmem(total=17010110464, available=3430559744, percent=79.8, used=13579550720, free=3430559744)
2023-01-08 23:59:59,385:INFO:Physical Core: 6
2023-01-08 23:59:59,385:INFO:Logical Core: 12
2023-01-08 23:59:59,385:INFO:Checking libraries
2023-01-08 23:59:59,385:INFO:System:
2023-01-08 23:59:59,385:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-08 23:59:59,385:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-08 23:59:59,385:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-08 23:59:59,385:INFO:PyCaret required dependencies:
2023-01-08 23:59:59,386:INFO:                 pip: 22.3.1
2023-01-08 23:59:59,386:INFO:          setuptools: 65.6.3
2023-01-08 23:59:59,386:INFO:             pycaret: 3.0.0rc6
2023-01-08 23:59:59,386:INFO:             IPython: 8.8.0
2023-01-08 23:59:59,386:INFO:          ipywidgets: 8.0.4
2023-01-08 23:59:59,386:INFO:                tqdm: 4.64.1
2023-01-08 23:59:59,386:INFO:               numpy: 1.22.4
2023-01-08 23:59:59,386:INFO:              pandas: 1.5.2
2023-01-08 23:59:59,386:INFO:              jinja2: 3.1.2
2023-01-08 23:59:59,386:INFO:               scipy: 1.9.3
2023-01-08 23:59:59,386:INFO:              joblib: 1.2.0
2023-01-08 23:59:59,386:INFO:             sklearn: 1.1.3
2023-01-08 23:59:59,386:INFO:                pyod: 1.0.7
2023-01-08 23:59:59,386:INFO:            imblearn: 0.10.1
2023-01-08 23:59:59,386:INFO:   category_encoders: 2.5.1.post0
2023-01-08 23:59:59,387:INFO:            lightgbm: 3.3.4
2023-01-08 23:59:59,387:INFO:               numba: 0.56.4
2023-01-08 23:59:59,387:INFO:            requests: 2.28.1
2023-01-08 23:59:59,387:INFO:          matplotlib: 3.6.2
2023-01-08 23:59:59,387:INFO:          scikitplot: 0.3.7
2023-01-08 23:59:59,387:INFO:         yellowbrick: 1.5
2023-01-08 23:59:59,387:INFO:              plotly: 5.11.0
2023-01-08 23:59:59,387:INFO:             kaleido: 0.2.1
2023-01-08 23:59:59,387:INFO:         statsmodels: 0.13.5
2023-01-08 23:59:59,387:INFO:              sktime: 0.14.1
2023-01-08 23:59:59,387:INFO:               tbats: 1.1.2
2023-01-08 23:59:59,387:INFO:            pmdarima: 2.0.2
2023-01-08 23:59:59,387:INFO:              psutil: 5.9.0
2023-01-08 23:59:59,387:INFO:PyCaret optional dependencies:
2023-01-08 23:59:59,387:INFO:                shap: Not installed
2023-01-08 23:59:59,387:INFO:           interpret: Not installed
2023-01-08 23:59:59,388:INFO:                umap: Not installed
2023-01-08 23:59:59,388:INFO:    pandas_profiling: 3.6.2
2023-01-08 23:59:59,388:INFO:  explainerdashboard: Not installed
2023-01-08 23:59:59,388:INFO:             autoviz: Not installed
2023-01-08 23:59:59,388:INFO:           fairlearn: Not installed
2023-01-08 23:59:59,388:INFO:             xgboost: Not installed
2023-01-08 23:59:59,388:INFO:            catboost: Not installed
2023-01-08 23:59:59,388:INFO:              kmodes: Not installed
2023-01-08 23:59:59,388:INFO:             mlxtend: Not installed
2023-01-08 23:59:59,388:INFO:       statsforecast: Not installed
2023-01-08 23:59:59,388:INFO:        tune_sklearn: Not installed
2023-01-08 23:59:59,388:INFO:                 ray: Not installed
2023-01-08 23:59:59,388:INFO:            hyperopt: Not installed
2023-01-08 23:59:59,388:INFO:              optuna: Not installed
2023-01-08 23:59:59,389:INFO:               skopt: Not installed
2023-01-08 23:59:59,389:INFO:              mlflow: Not installed
2023-01-08 23:59:59,389:INFO:              gradio: Not installed
2023-01-08 23:59:59,389:INFO:             fastapi: Not installed
2023-01-08 23:59:59,389:INFO:             uvicorn: Not installed
2023-01-08 23:59:59,389:INFO:              m2cgen: Not installed
2023-01-08 23:59:59,389:INFO:           evidently: Not installed
2023-01-08 23:59:59,389:INFO:                nltk: Not installed
2023-01-08 23:59:59,389:INFO:            pyLDAvis: Not installed
2023-01-08 23:59:59,389:INFO:              gensim: Not installed
2023-01-08 23:59:59,389:INFO:               spacy: Not installed
2023-01-08 23:59:59,389:INFO:           wordcloud: Not installed
2023-01-08 23:59:59,389:INFO:            textblob: Not installed
2023-01-08 23:59:59,389:INFO:               fugue: Not installed
2023-01-08 23:59:59,390:INFO:           streamlit: 1.16.0
2023-01-08 23:59:59,390:INFO:             prophet: Not installed
2023-01-08 23:59:59,390:INFO:None
2023-01-08 23:59:59,390:INFO:Set up data.
2023-01-08 23:59:59,394:INFO:Set up train/test split.
2023-01-08 23:59:59,398:INFO:Set up index.
2023-01-08 23:59:59,398:INFO:Set up folding strategy.
2023-01-08 23:59:59,398:INFO:Assigning column types.
2023-01-08 23:59:59,402:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-08 23:59:59,444:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:59:59,445:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:59:59,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-08 23:59:59,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:59:59,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,536:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-08 23:59:59,577:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:59:59,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,644:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-08 23:59:59,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,670:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-08 23:59:59,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-08 23:59:59,791:INFO:Preparing preprocessing pipeline...
2023-01-08 23:59:59,792:INFO:Set up label encoding.
2023-01-08 23:59:59,792:INFO:Set up simple imputation.
2023-01-08 23:59:59,827:INFO:Finished creating preprocessing pipeline.
2023-01-08 23:59:59,830:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-08 23:59:59,830:INFO:Creating final display dataframe.
2023-01-08 23:59:59,999:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               4197
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               6ca0
2023-01-09 00:00:00,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:00:00,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:00:00,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:00:00,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:00:00,138:INFO:setup() successfully completed in 0.76s...............
2023-01-09 00:00:00,142:INFO:Initializing compare_models()
2023-01-09 00:00:00,142:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 00:00:00,143:INFO:Checking exceptions
2023-01-09 00:00:00,145:INFO:Preparing display monitor
2023-01-09 00:00:00,147:INFO:Initializing Logistic Regression
2023-01-09 00:00:00,147:INFO:Total runtime is 0.0 minutes
2023-01-09 00:00:00,147:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:00,147:INFO:Initializing create_model()
2023-01-09 00:00:00,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:00,147:INFO:Checking exceptions
2023-01-09 00:00:00,147:INFO:Importing libraries
2023-01-09 00:00:00,147:INFO:Copying training dataset
2023-01-09 00:00:00,149:INFO:Defining folds
2023-01-09 00:00:00,149:INFO:Declaring metric variables
2023-01-09 00:00:00,150:INFO:Importing untrained model
2023-01-09 00:00:00,150:INFO:Logistic Regression Imported successfully
2023-01-09 00:00:00,150:INFO:Starting cross validation
2023-01-09 00:00:00,151:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:05,821:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,823:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,829:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,831:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,841:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,844:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,857:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,860:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,860:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,863:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,863:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,865:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,866:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,869:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,871:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,872:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,873:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,874:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,875:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,875:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,878:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,878:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,881:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,883:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:05,888:INFO:Calculating mean and std
2023-01-09 00:00:05,889:INFO:Creating metrics dataframe
2023-01-09 00:00:05,895:INFO:Uploading results into container
2023-01-09 00:00:05,897:INFO:Uploading model into container now
2023-01-09 00:00:05,897:INFO:_master_model_container: 1
2023-01-09 00:00:05,897:INFO:_display_container: 2
2023-01-09 00:00:05,898:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4197, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 00:00:05,898:INFO:create_model() successfully completed......................................
2023-01-09 00:00:06,013:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:06,013:INFO:Creating metrics dataframe
2023-01-09 00:00:06,016:INFO:Initializing K Neighbors Classifier
2023-01-09 00:00:06,017:INFO:Total runtime is 0.09780093828837076 minutes
2023-01-09 00:00:06,017:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:06,017:INFO:Initializing create_model()
2023-01-09 00:00:06,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:06,017:INFO:Checking exceptions
2023-01-09 00:00:06,017:INFO:Importing libraries
2023-01-09 00:00:06,017:INFO:Copying training dataset
2023-01-09 00:00:06,019:INFO:Defining folds
2023-01-09 00:00:06,019:INFO:Declaring metric variables
2023-01-09 00:00:06,019:INFO:Importing untrained model
2023-01-09 00:00:06,019:INFO:K Neighbors Classifier Imported successfully
2023-01-09 00:00:06,020:INFO:Starting cross validation
2023-01-09 00:00:06,020:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:06,142:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,142:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,144:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,144:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,146:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,147:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,147:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,148:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,151:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,157:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,159:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,160:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,164:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,164:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,165:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,167:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,167:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,168:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,173:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:06,175:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,744:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,748:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,750:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,753:INFO:Calculating mean and std
2023-01-09 00:00:07,754:INFO:Creating metrics dataframe
2023-01-09 00:00:07,757:INFO:Uploading results into container
2023-01-09 00:00:07,758:INFO:Uploading model into container now
2023-01-09 00:00:07,758:INFO:_master_model_container: 2
2023-01-09 00:00:07,758:INFO:_display_container: 2
2023-01-09 00:00:07,758:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:00:07,758:INFO:create_model() successfully completed......................................
2023-01-09 00:00:07,840:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:07,840:INFO:Creating metrics dataframe
2023-01-09 00:00:07,844:INFO:Initializing Naive Bayes
2023-01-09 00:00:07,844:INFO:Total runtime is 0.12827527125676472 minutes
2023-01-09 00:00:07,844:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:07,844:INFO:Initializing create_model()
2023-01-09 00:00:07,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:07,844:INFO:Checking exceptions
2023-01-09 00:00:07,844:INFO:Importing libraries
2023-01-09 00:00:07,844:INFO:Copying training dataset
2023-01-09 00:00:07,846:INFO:Defining folds
2023-01-09 00:00:07,846:INFO:Declaring metric variables
2023-01-09 00:00:07,846:INFO:Importing untrained model
2023-01-09 00:00:07,846:INFO:Naive Bayes Imported successfully
2023-01-09 00:00:07,847:INFO:Starting cross validation
2023-01-09 00:00:07,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:07,913:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,916:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,919:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,921:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,921:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,925:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,928:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,928:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,931:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,932:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,933:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,936:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,938:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,941:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,941:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,945:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:07,948:INFO:Calculating mean and std
2023-01-09 00:00:07,949:INFO:Creating metrics dataframe
2023-01-09 00:00:07,952:INFO:Uploading results into container
2023-01-09 00:00:07,952:INFO:Uploading model into container now
2023-01-09 00:00:07,952:INFO:_master_model_container: 3
2023-01-09 00:00:07,952:INFO:_display_container: 2
2023-01-09 00:00:07,952:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 00:00:07,952:INFO:create_model() successfully completed......................................
2023-01-09 00:00:08,026:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:08,026:INFO:Creating metrics dataframe
2023-01-09 00:00:08,030:INFO:Initializing Decision Tree Classifier
2023-01-09 00:00:08,030:INFO:Total runtime is 0.13136833508809406 minutes
2023-01-09 00:00:08,030:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:08,030:INFO:Initializing create_model()
2023-01-09 00:00:08,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:08,030:INFO:Checking exceptions
2023-01-09 00:00:08,030:INFO:Importing libraries
2023-01-09 00:00:08,030:INFO:Copying training dataset
2023-01-09 00:00:08,032:INFO:Defining folds
2023-01-09 00:00:08,032:INFO:Declaring metric variables
2023-01-09 00:00:08,032:INFO:Importing untrained model
2023-01-09 00:00:08,032:INFO:Decision Tree Classifier Imported successfully
2023-01-09 00:00:08,032:INFO:Starting cross validation
2023-01-09 00:00:08,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:08,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,089:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,090:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,093:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,109:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,109:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,111:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,116:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,116:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,119:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,122:INFO:Calculating mean and std
2023-01-09 00:00:08,122:INFO:Creating metrics dataframe
2023-01-09 00:00:08,125:INFO:Uploading results into container
2023-01-09 00:00:08,126:INFO:Uploading model into container now
2023-01-09 00:00:08,126:INFO:_master_model_container: 4
2023-01-09 00:00:08,126:INFO:_display_container: 2
2023-01-09 00:00:08,126:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4197, splitter='best')
2023-01-09 00:00:08,126:INFO:create_model() successfully completed......................................
2023-01-09 00:00:08,196:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:08,196:INFO:Creating metrics dataframe
2023-01-09 00:00:08,202:INFO:Initializing SVM - Linear Kernel
2023-01-09 00:00:08,202:INFO:Total runtime is 0.1342429439226786 minutes
2023-01-09 00:00:08,202:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:08,202:INFO:Initializing create_model()
2023-01-09 00:00:08,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:08,203:INFO:Checking exceptions
2023-01-09 00:00:08,203:INFO:Importing libraries
2023-01-09 00:00:08,203:INFO:Copying training dataset
2023-01-09 00:00:08,204:INFO:Defining folds
2023-01-09 00:00:08,204:INFO:Declaring metric variables
2023-01-09 00:00:08,204:INFO:Importing untrained model
2023-01-09 00:00:08,205:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 00:00:08,205:INFO:Starting cross validation
2023-01-09 00:00:08,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:08,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,261:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,262:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,264:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,266:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,269:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,271:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,277:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,278:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,280:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:08,280:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,281:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:08,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,286:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:08,286:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,288:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,288:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,289:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:08,289:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,292:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,293:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:08,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,295:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,296:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,298:INFO:Calculating mean and std
2023-01-09 00:00:08,299:INFO:Creating metrics dataframe
2023-01-09 00:00:08,302:INFO:Uploading results into container
2023-01-09 00:00:08,302:INFO:Uploading model into container now
2023-01-09 00:00:08,303:INFO:_master_model_container: 5
2023-01-09 00:00:08,303:INFO:_display_container: 2
2023-01-09 00:00:08,303:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4197, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 00:00:08,303:INFO:create_model() successfully completed......................................
2023-01-09 00:00:08,374:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:08,375:INFO:Creating metrics dataframe
2023-01-09 00:00:08,379:INFO:Initializing Ridge Classifier
2023-01-09 00:00:08,379:INFO:Total runtime is 0.13718593915303545 minutes
2023-01-09 00:00:08,379:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:08,379:INFO:Initializing create_model()
2023-01-09 00:00:08,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:08,379:INFO:Checking exceptions
2023-01-09 00:00:08,379:INFO:Importing libraries
2023-01-09 00:00:08,379:INFO:Copying training dataset
2023-01-09 00:00:08,381:INFO:Defining folds
2023-01-09 00:00:08,381:INFO:Declaring metric variables
2023-01-09 00:00:08,381:INFO:Importing untrained model
2023-01-09 00:00:08,381:INFO:Ridge Classifier Imported successfully
2023-01-09 00:00:08,382:INFO:Starting cross validation
2023-01-09 00:00:08,382:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:08,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,426:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,429:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,431:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,433:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,438:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,441:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,445:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,445:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,446:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,450:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,450:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,453:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,454:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,455:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,458:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,459:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,462:INFO:Calculating mean and std
2023-01-09 00:00:08,463:INFO:Creating metrics dataframe
2023-01-09 00:00:08,466:INFO:Uploading results into container
2023-01-09 00:00:08,466:INFO:Uploading model into container now
2023-01-09 00:00:08,466:INFO:_master_model_container: 6
2023-01-09 00:00:08,466:INFO:_display_container: 2
2023-01-09 00:00:08,467:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4197, solver='auto', tol=0.001)
2023-01-09 00:00:08,467:INFO:create_model() successfully completed......................................
2023-01-09 00:00:08,540:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:08,540:INFO:Creating metrics dataframe
2023-01-09 00:00:08,545:INFO:Initializing Random Forest Classifier
2023-01-09 00:00:08,545:INFO:Total runtime is 0.13995342254638668 minutes
2023-01-09 00:00:08,545:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:08,545:INFO:Initializing create_model()
2023-01-09 00:00:08,545:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:08,545:INFO:Checking exceptions
2023-01-09 00:00:08,546:INFO:Importing libraries
2023-01-09 00:00:08,546:INFO:Copying training dataset
2023-01-09 00:00:08,547:INFO:Defining folds
2023-01-09 00:00:08,547:INFO:Declaring metric variables
2023-01-09 00:00:08,547:INFO:Importing untrained model
2023-01-09 00:00:08,548:INFO:Random Forest Classifier Imported successfully
2023-01-09 00:00:08,548:INFO:Starting cross validation
2023-01-09 00:00:08,548:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:08,927:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,929:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,929:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,931:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,932:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,936:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,941:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,945:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,946:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,947:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,947:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,957:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,958:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,958:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,959:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,959:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,962:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,963:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:08,966:INFO:Calculating mean and std
2023-01-09 00:00:08,967:INFO:Creating metrics dataframe
2023-01-09 00:00:08,970:INFO:Uploading results into container
2023-01-09 00:00:08,971:INFO:Uploading model into container now
2023-01-09 00:00:08,971:INFO:_master_model_container: 7
2023-01-09 00:00:08,971:INFO:_display_container: 2
2023-01-09 00:00:08,971:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4197, verbose=0, warm_start=False)
2023-01-09 00:00:08,971:INFO:create_model() successfully completed......................................
2023-01-09 00:00:09,047:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:09,048:INFO:Creating metrics dataframe
2023-01-09 00:00:09,051:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 00:00:09,051:INFO:Total runtime is 0.1483926177024841 minutes
2023-01-09 00:00:09,052:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:09,052:INFO:Initializing create_model()
2023-01-09 00:00:09,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:09,052:INFO:Checking exceptions
2023-01-09 00:00:09,052:INFO:Importing libraries
2023-01-09 00:00:09,052:INFO:Copying training dataset
2023-01-09 00:00:09,053:INFO:Defining folds
2023-01-09 00:00:09,053:INFO:Declaring metric variables
2023-01-09 00:00:09,054:INFO:Importing untrained model
2023-01-09 00:00:09,054:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 00:00:09,055:INFO:Starting cross validation
2023-01-09 00:00:09,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:09,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,124:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,126:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,130:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,130:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,131:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,131:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,133:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,133:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,134:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,134:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,136:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,138:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,142:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,144:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,144:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,145:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,145:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,146:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,147:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,149:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,149:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,152:INFO:Calculating mean and std
2023-01-09 00:00:09,153:INFO:Creating metrics dataframe
2023-01-09 00:00:09,155:INFO:Uploading results into container
2023-01-09 00:00:09,156:INFO:Uploading model into container now
2023-01-09 00:00:09,156:INFO:_master_model_container: 8
2023-01-09 00:00:09,156:INFO:_display_container: 2
2023-01-09 00:00:09,156:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:00:09,156:INFO:create_model() successfully completed......................................
2023-01-09 00:00:09,229:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:09,229:INFO:Creating metrics dataframe
2023-01-09 00:00:09,233:INFO:Initializing Ada Boost Classifier
2023-01-09 00:00:09,233:INFO:Total runtime is 0.15141780376434325 minutes
2023-01-09 00:00:09,233:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:09,233:INFO:Initializing create_model()
2023-01-09 00:00:09,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:09,234:INFO:Checking exceptions
2023-01-09 00:00:09,234:INFO:Importing libraries
2023-01-09 00:00:09,234:INFO:Copying training dataset
2023-01-09 00:00:09,235:INFO:Defining folds
2023-01-09 00:00:09,235:INFO:Declaring metric variables
2023-01-09 00:00:09,235:INFO:Importing untrained model
2023-01-09 00:00:09,236:INFO:Ada Boost Classifier Imported successfully
2023-01-09 00:00:09,236:INFO:Starting cross validation
2023-01-09 00:00:09,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:09,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,424:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,427:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,428:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,429:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,429:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,433:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,435:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,437:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,437:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,441:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,442:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,443:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,445:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,449:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,450:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,451:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,453:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,455:INFO:Calculating mean and std
2023-01-09 00:00:09,456:INFO:Creating metrics dataframe
2023-01-09 00:00:09,459:INFO:Uploading results into container
2023-01-09 00:00:09,459:INFO:Uploading model into container now
2023-01-09 00:00:09,460:INFO:_master_model_container: 9
2023-01-09 00:00:09,460:INFO:_display_container: 2
2023-01-09 00:00:09,460:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4197)
2023-01-09 00:00:09,460:INFO:create_model() successfully completed......................................
2023-01-09 00:00:09,531:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:09,531:INFO:Creating metrics dataframe
2023-01-09 00:00:09,535:INFO:Initializing Gradient Boosting Classifier
2023-01-09 00:00:09,535:INFO:Total runtime is 0.15645356973012287 minutes
2023-01-09 00:00:09,535:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:09,535:INFO:Initializing create_model()
2023-01-09 00:00:09,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:09,536:INFO:Checking exceptions
2023-01-09 00:00:09,536:INFO:Importing libraries
2023-01-09 00:00:09,536:INFO:Copying training dataset
2023-01-09 00:00:09,538:INFO:Defining folds
2023-01-09 00:00:09,538:INFO:Declaring metric variables
2023-01-09 00:00:09,538:INFO:Importing untrained model
2023-01-09 00:00:09,538:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 00:00:09,538:INFO:Starting cross validation
2023-01-09 00:00:09,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:09,869:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,872:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,874:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,909:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,909:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,911:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,916:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,918:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,920:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,925:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,927:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,928:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,928:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,934:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,936:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,941:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,941:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,945:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:09,947:INFO:Calculating mean and std
2023-01-09 00:00:09,947:INFO:Creating metrics dataframe
2023-01-09 00:00:09,950:INFO:Uploading results into container
2023-01-09 00:00:09,950:INFO:Uploading model into container now
2023-01-09 00:00:09,951:INFO:_master_model_container: 10
2023-01-09 00:00:09,951:INFO:_display_container: 2
2023-01-09 00:00:09,951:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4197, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 00:00:09,951:INFO:create_model() successfully completed......................................
2023-01-09 00:00:10,025:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:10,026:INFO:Creating metrics dataframe
2023-01-09 00:00:10,030:INFO:Initializing Linear Discriminant Analysis
2023-01-09 00:00:10,030:INFO:Total runtime is 0.16470655997594197 minutes
2023-01-09 00:00:10,030:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:10,030:INFO:Initializing create_model()
2023-01-09 00:00:10,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:10,030:INFO:Checking exceptions
2023-01-09 00:00:10,030:INFO:Importing libraries
2023-01-09 00:00:10,030:INFO:Copying training dataset
2023-01-09 00:00:10,032:INFO:Defining folds
2023-01-09 00:00:10,032:INFO:Declaring metric variables
2023-01-09 00:00:10,032:INFO:Importing untrained model
2023-01-09 00:00:10,032:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 00:00:10,032:INFO:Starting cross validation
2023-01-09 00:00:10,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:10,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,097:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,105:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,107:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,107:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,109:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,109:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,111:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,111:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,113:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,116:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,121:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,121:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,123:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,125:INFO:Calculating mean and std
2023-01-09 00:00:10,126:INFO:Creating metrics dataframe
2023-01-09 00:00:10,129:INFO:Uploading results into container
2023-01-09 00:00:10,129:INFO:Uploading model into container now
2023-01-09 00:00:10,129:INFO:_master_model_container: 11
2023-01-09 00:00:10,129:INFO:_display_container: 2
2023-01-09 00:00:10,130:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:00:10,130:INFO:create_model() successfully completed......................................
2023-01-09 00:00:10,202:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:10,202:INFO:Creating metrics dataframe
2023-01-09 00:00:10,206:INFO:Initializing Extra Trees Classifier
2023-01-09 00:00:10,206:INFO:Total runtime is 0.1676339864730835 minutes
2023-01-09 00:00:10,206:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:10,206:INFO:Initializing create_model()
2023-01-09 00:00:10,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:10,206:INFO:Checking exceptions
2023-01-09 00:00:10,206:INFO:Importing libraries
2023-01-09 00:00:10,206:INFO:Copying training dataset
2023-01-09 00:00:10,208:INFO:Defining folds
2023-01-09 00:00:10,208:INFO:Declaring metric variables
2023-01-09 00:00:10,208:INFO:Importing untrained model
2023-01-09 00:00:10,208:INFO:Extra Trees Classifier Imported successfully
2023-01-09 00:00:10,209:INFO:Starting cross validation
2023-01-09 00:00:10,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:10,520:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,522:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,523:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,525:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,527:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,527:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,537:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,539:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,539:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,541:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,543:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,548:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,548:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,549:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,550:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,554:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,555:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,565:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,566:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,567:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,569:INFO:Calculating mean and std
2023-01-09 00:00:10,569:INFO:Creating metrics dataframe
2023-01-09 00:00:10,572:INFO:Uploading results into container
2023-01-09 00:00:10,572:INFO:Uploading model into container now
2023-01-09 00:00:10,573:INFO:_master_model_container: 12
2023-01-09 00:00:10,573:INFO:_display_container: 2
2023-01-09 00:00:10,573:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4197, verbose=0, warm_start=False)
2023-01-09 00:00:10,573:INFO:create_model() successfully completed......................................
2023-01-09 00:00:10,645:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:10,645:INFO:Creating metrics dataframe
2023-01-09 00:00:10,650:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 00:00:10,650:INFO:Total runtime is 0.1750487526257833 minutes
2023-01-09 00:00:10,650:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:10,650:INFO:Initializing create_model()
2023-01-09 00:00:10,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:10,650:INFO:Checking exceptions
2023-01-09 00:00:10,650:INFO:Importing libraries
2023-01-09 00:00:10,650:INFO:Copying training dataset
2023-01-09 00:00:10,651:INFO:Defining folds
2023-01-09 00:00:10,652:INFO:Declaring metric variables
2023-01-09 00:00:10,652:INFO:Importing untrained model
2023-01-09 00:00:10,652:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 00:00:10,652:INFO:Starting cross validation
2023-01-09 00:00:10,653:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:10,792:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,799:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,799:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,800:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,801:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,803:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,803:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,809:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,809:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,809:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,810:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,812:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,812:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,812:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,813:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,814:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,815:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,815:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,818:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,819:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,822:INFO:Calculating mean and std
2023-01-09 00:00:10,823:INFO:Creating metrics dataframe
2023-01-09 00:00:10,827:INFO:Uploading results into container
2023-01-09 00:00:10,828:INFO:Uploading model into container now
2023-01-09 00:00:10,828:INFO:_master_model_container: 13
2023-01-09 00:00:10,828:INFO:_display_container: 2
2023-01-09 00:00:10,828:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4197, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 00:00:10,829:INFO:create_model() successfully completed......................................
2023-01-09 00:00:10,900:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:10,900:INFO:Creating metrics dataframe
2023-01-09 00:00:10,904:INFO:Initializing Dummy Classifier
2023-01-09 00:00:10,904:INFO:Total runtime is 0.17926984628041587 minutes
2023-01-09 00:00:10,904:INFO:SubProcess create_model() called ==================================
2023-01-09 00:00:10,904:INFO:Initializing create_model()
2023-01-09 00:00:10,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BBF44C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:10,904:INFO:Checking exceptions
2023-01-09 00:00:10,904:INFO:Importing libraries
2023-01-09 00:00:10,904:INFO:Copying training dataset
2023-01-09 00:00:10,906:INFO:Defining folds
2023-01-09 00:00:10,906:INFO:Declaring metric variables
2023-01-09 00:00:10,906:INFO:Importing untrained model
2023-01-09 00:00:10,906:INFO:Dummy Classifier Imported successfully
2023-01-09 00:00:10,906:INFO:Starting cross validation
2023-01-09 00:00:10,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:00:10,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,958:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,959:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,960:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:10,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,962:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:10,963:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,974:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,974:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,975:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:10,976:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,976:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,978:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,978:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:10,979:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,979:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:10,981:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,981:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,981:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,982:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,983:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,983:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:10,983:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,983:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:10,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,985:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,985:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:10,985:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,986:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,986:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,986:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:10,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:00:10,989:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:00:10,992:INFO:Calculating mean and std
2023-01-09 00:00:10,993:INFO:Creating metrics dataframe
2023-01-09 00:00:10,996:INFO:Uploading results into container
2023-01-09 00:00:10,996:INFO:Uploading model into container now
2023-01-09 00:00:10,997:INFO:_master_model_container: 14
2023-01-09 00:00:10,997:INFO:_display_container: 2
2023-01-09 00:00:10,997:INFO:DummyClassifier(constant=None, random_state=4197, strategy='prior')
2023-01-09 00:00:10,997:INFO:create_model() successfully completed......................................
2023-01-09 00:00:11,066:INFO:SubProcess create_model() end ==================================
2023-01-09 00:00:11,066:INFO:Creating metrics dataframe
2023-01-09 00:00:11,071:INFO:Initializing create_model()
2023-01-09 00:00:11,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B799AC0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:00:11,072:INFO:Checking exceptions
2023-01-09 00:00:11,072:INFO:Importing libraries
2023-01-09 00:00:11,072:INFO:Copying training dataset
2023-01-09 00:00:11,074:INFO:Defining folds
2023-01-09 00:00:11,074:INFO:Declaring metric variables
2023-01-09 00:00:11,074:INFO:Importing untrained model
2023-01-09 00:00:11,074:INFO:Declaring custom model
2023-01-09 00:00:11,074:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 00:00:11,075:INFO:Cross validation set to False
2023-01-09 00:00:11,075:INFO:Fitting Model
2023-01-09 00:00:11,097:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:00:11,097:INFO:create_model() successfully completed......................................
2023-01-09 00:00:11,182:INFO:_master_model_container: 14
2023-01-09 00:00:11,182:INFO:_display_container: 2
2023-01-09 00:00:11,182:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:00:11,182:INFO:compare_models() successfully completed......................................
2023-01-09 00:01:03,985:INFO:PyCaret ClassificationExperiment
2023-01-09 00:01:03,985:INFO:Logging name: clf-default-name
2023-01-09 00:01:03,985:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 00:01:03,985:INFO:version 3.0.0.rc6
2023-01-09 00:01:03,985:INFO:Initializing setup()
2023-01-09 00:01:03,985:INFO:self.USI: 7890
2023-01-09 00:01:03,985:INFO:self._variable_keys: {'memory', 'X', 'gpu_param', 'pipeline', 'data', 'y_test', 'target_param', 'fold_groups_param', 'n_jobs_param', 'X_test', 'y_train', 'idx', 'seed', 'X_train', 'exp_id', '_available_plots', 'fold_shuffle_param', '_ml_usecase', 'y', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_generator', 'html_param', 'USI', 'log_plots_param', 'is_multiclass', 'logging_param', 'exp_name_log'}
2023-01-09 00:01:03,986:INFO:Checking environment
2023-01-09 00:01:03,986:INFO:python_version: 3.9.15
2023-01-09 00:01:03,986:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-09 00:01:03,986:INFO:machine: AMD64
2023-01-09 00:01:03,986:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-09 00:01:03,986:INFO:Memory: svmem(total=17010110464, available=1878040576, percent=89.0, used=15132069888, free=1878040576)
2023-01-09 00:01:03,986:INFO:Physical Core: 6
2023-01-09 00:01:03,986:INFO:Logical Core: 12
2023-01-09 00:01:03,986:INFO:Checking libraries
2023-01-09 00:01:03,986:INFO:System:
2023-01-09 00:01:03,986:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-09 00:01:03,986:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-09 00:01:03,986:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-09 00:01:03,986:INFO:PyCaret required dependencies:
2023-01-09 00:01:03,986:INFO:                 pip: 22.3.1
2023-01-09 00:01:03,986:INFO:          setuptools: 65.6.3
2023-01-09 00:01:03,986:INFO:             pycaret: 3.0.0rc6
2023-01-09 00:01:03,986:INFO:             IPython: 8.8.0
2023-01-09 00:01:03,986:INFO:          ipywidgets: 8.0.4
2023-01-09 00:01:03,986:INFO:                tqdm: 4.64.1
2023-01-09 00:01:03,987:INFO:               numpy: 1.22.4
2023-01-09 00:01:03,987:INFO:              pandas: 1.5.2
2023-01-09 00:01:03,987:INFO:              jinja2: 3.1.2
2023-01-09 00:01:03,987:INFO:               scipy: 1.9.3
2023-01-09 00:01:03,987:INFO:              joblib: 1.2.0
2023-01-09 00:01:03,987:INFO:             sklearn: 1.1.3
2023-01-09 00:01:03,987:INFO:                pyod: 1.0.7
2023-01-09 00:01:03,987:INFO:            imblearn: 0.10.1
2023-01-09 00:01:03,987:INFO:   category_encoders: 2.5.1.post0
2023-01-09 00:01:03,987:INFO:            lightgbm: 3.3.4
2023-01-09 00:01:03,987:INFO:               numba: 0.56.4
2023-01-09 00:01:03,987:INFO:            requests: 2.28.1
2023-01-09 00:01:03,987:INFO:          matplotlib: 3.6.2
2023-01-09 00:01:03,987:INFO:          scikitplot: 0.3.7
2023-01-09 00:01:03,987:INFO:         yellowbrick: 1.5
2023-01-09 00:01:03,988:INFO:              plotly: 5.11.0
2023-01-09 00:01:03,988:INFO:             kaleido: 0.2.1
2023-01-09 00:01:03,988:INFO:         statsmodels: 0.13.5
2023-01-09 00:01:03,988:INFO:              sktime: 0.14.1
2023-01-09 00:01:03,988:INFO:               tbats: 1.1.2
2023-01-09 00:01:03,988:INFO:            pmdarima: 2.0.2
2023-01-09 00:01:03,988:INFO:              psutil: 5.9.0
2023-01-09 00:01:03,988:INFO:PyCaret optional dependencies:
2023-01-09 00:01:03,988:INFO:                shap: Not installed
2023-01-09 00:01:03,988:INFO:           interpret: Not installed
2023-01-09 00:01:03,988:INFO:                umap: Not installed
2023-01-09 00:01:03,988:INFO:    pandas_profiling: 3.6.2
2023-01-09 00:01:03,988:INFO:  explainerdashboard: Not installed
2023-01-09 00:01:03,988:INFO:             autoviz: Not installed
2023-01-09 00:01:03,988:INFO:           fairlearn: Not installed
2023-01-09 00:01:03,988:INFO:             xgboost: Not installed
2023-01-09 00:01:03,988:INFO:            catboost: Not installed
2023-01-09 00:01:03,988:INFO:              kmodes: Not installed
2023-01-09 00:01:03,988:INFO:             mlxtend: Not installed
2023-01-09 00:01:03,988:INFO:       statsforecast: Not installed
2023-01-09 00:01:03,989:INFO:        tune_sklearn: Not installed
2023-01-09 00:01:03,989:INFO:                 ray: Not installed
2023-01-09 00:01:03,989:INFO:            hyperopt: Not installed
2023-01-09 00:01:03,989:INFO:              optuna: Not installed
2023-01-09 00:01:03,989:INFO:               skopt: Not installed
2023-01-09 00:01:03,989:INFO:              mlflow: Not installed
2023-01-09 00:01:03,989:INFO:              gradio: Not installed
2023-01-09 00:01:03,989:INFO:             fastapi: Not installed
2023-01-09 00:01:03,989:INFO:             uvicorn: Not installed
2023-01-09 00:01:03,989:INFO:              m2cgen: Not installed
2023-01-09 00:01:03,989:INFO:           evidently: Not installed
2023-01-09 00:01:03,989:INFO:                nltk: Not installed
2023-01-09 00:01:03,989:INFO:            pyLDAvis: Not installed
2023-01-09 00:01:03,989:INFO:              gensim: Not installed
2023-01-09 00:01:03,989:INFO:               spacy: Not installed
2023-01-09 00:01:03,989:INFO:           wordcloud: Not installed
2023-01-09 00:01:03,989:INFO:            textblob: Not installed
2023-01-09 00:01:03,989:INFO:               fugue: Not installed
2023-01-09 00:01:03,989:INFO:           streamlit: 1.16.0
2023-01-09 00:01:03,989:INFO:             prophet: Not installed
2023-01-09 00:01:03,989:INFO:None
2023-01-09 00:01:03,989:INFO:Set up data.
2023-01-09 00:01:03,993:INFO:Set up train/test split.
2023-01-09 00:01:03,997:INFO:Set up index.
2023-01-09 00:01:03,998:INFO:Set up folding strategy.
2023-01-09 00:01:03,998:INFO:Assigning column types.
2023-01-09 00:01:04,002:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 00:01:04,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:01:04,072:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:01:04,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,137:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:01:04,138:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:01:04,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,162:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 00:01:04,201:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:01:04,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,265:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:01:04,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,288:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 00:01:04,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,417:INFO:Preparing preprocessing pipeline...
2023-01-09 00:01:04,418:INFO:Set up label encoding.
2023-01-09 00:01:04,418:INFO:Set up simple imputation.
2023-01-09 00:01:04,453:INFO:Finished creating preprocessing pipeline.
2023-01-09 00:01:04,456:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 00:01:04,456:INFO:Creating final display dataframe.
2023-01-09 00:01:04,627:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                                726
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               7890
2023-01-09 00:01:04,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,702:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:01:04,762:INFO:setup() successfully completed in 0.78s...............
2023-01-09 00:01:04,764:INFO:Initializing compare_models()
2023-01-09 00:01:04,764:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 00:01:04,764:INFO:Checking exceptions
2023-01-09 00:01:04,766:INFO:Preparing display monitor
2023-01-09 00:01:04,768:INFO:Initializing Logistic Regression
2023-01-09 00:01:04,769:INFO:Total runtime is 1.5846888224283855e-05 minutes
2023-01-09 00:01:04,769:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:04,769:INFO:Initializing create_model()
2023-01-09 00:01:04,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:04,769:INFO:Checking exceptions
2023-01-09 00:01:04,769:INFO:Importing libraries
2023-01-09 00:01:04,769:INFO:Copying training dataset
2023-01-09 00:01:04,771:INFO:Defining folds
2023-01-09 00:01:04,771:INFO:Declaring metric variables
2023-01-09 00:01:04,771:INFO:Importing untrained model
2023-01-09 00:01:04,771:INFO:Logistic Regression Imported successfully
2023-01-09 00:01:04,772:INFO:Starting cross validation
2023-01-09 00:01:04,772:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:05,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,087:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,090:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,091:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,093:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,097:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,100:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,107:INFO:Calculating mean and std
2023-01-09 00:01:05,108:INFO:Creating metrics dataframe
2023-01-09 00:01:05,111:INFO:Uploading results into container
2023-01-09 00:01:05,111:INFO:Uploading model into container now
2023-01-09 00:01:05,111:INFO:_master_model_container: 1
2023-01-09 00:01:05,111:INFO:_display_container: 2
2023-01-09 00:01:05,112:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=726, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 00:01:05,112:INFO:create_model() successfully completed......................................
2023-01-09 00:01:05,187:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:05,187:INFO:Creating metrics dataframe
2023-01-09 00:01:05,190:INFO:Initializing K Neighbors Classifier
2023-01-09 00:01:05,190:INFO:Total runtime is 0.007032855351765951 minutes
2023-01-09 00:01:05,191:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:05,191:INFO:Initializing create_model()
2023-01-09 00:01:05,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:05,191:INFO:Checking exceptions
2023-01-09 00:01:05,191:INFO:Importing libraries
2023-01-09 00:01:05,191:INFO:Copying training dataset
2023-01-09 00:01:05,193:INFO:Defining folds
2023-01-09 00:01:05,193:INFO:Declaring metric variables
2023-01-09 00:01:05,193:INFO:Importing untrained model
2023-01-09 00:01:05,193:INFO:K Neighbors Classifier Imported successfully
2023-01-09 00:01:05,194:INFO:Starting cross validation
2023-01-09 00:01:05,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:05,307:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,308:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,311:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,315:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,317:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,317:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,320:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,322:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,328:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,328:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,329:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,329:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,329:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,331:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,331:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,332:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,336:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,339:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,340:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,340:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,341:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,342:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,343:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,345:INFO:Calculating mean and std
2023-01-09 00:01:05,346:INFO:Creating metrics dataframe
2023-01-09 00:01:05,348:INFO:Uploading results into container
2023-01-09 00:01:05,349:INFO:Uploading model into container now
2023-01-09 00:01:05,349:INFO:_master_model_container: 2
2023-01-09 00:01:05,349:INFO:_display_container: 2
2023-01-09 00:01:05,349:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:01:05,349:INFO:create_model() successfully completed......................................
2023-01-09 00:01:05,436:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:05,436:INFO:Creating metrics dataframe
2023-01-09 00:01:05,440:INFO:Initializing Naive Bayes
2023-01-09 00:01:05,440:INFO:Total runtime is 0.01119922399520874 minutes
2023-01-09 00:01:05,441:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:05,441:INFO:Initializing create_model()
2023-01-09 00:01:05,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:05,441:INFO:Checking exceptions
2023-01-09 00:01:05,441:INFO:Importing libraries
2023-01-09 00:01:05,441:INFO:Copying training dataset
2023-01-09 00:01:05,442:INFO:Defining folds
2023-01-09 00:01:05,442:INFO:Declaring metric variables
2023-01-09 00:01:05,443:INFO:Importing untrained model
2023-01-09 00:01:05,443:INFO:Naive Bayes Imported successfully
2023-01-09 00:01:05,443:INFO:Starting cross validation
2023-01-09 00:01:05,443:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:05,505:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,508:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,508:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,510:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,510:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,518:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,519:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,521:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,523:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,524:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,525:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,525:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,533:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,533:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,533:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,543:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,545:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,547:INFO:Calculating mean and std
2023-01-09 00:01:05,548:INFO:Creating metrics dataframe
2023-01-09 00:01:05,551:INFO:Uploading results into container
2023-01-09 00:01:05,552:INFO:Uploading model into container now
2023-01-09 00:01:05,552:INFO:_master_model_container: 3
2023-01-09 00:01:05,552:INFO:_display_container: 2
2023-01-09 00:01:05,552:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 00:01:05,552:INFO:create_model() successfully completed......................................
2023-01-09 00:01:05,628:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:05,628:INFO:Creating metrics dataframe
2023-01-09 00:01:05,632:INFO:Initializing Decision Tree Classifier
2023-01-09 00:01:05,632:INFO:Total runtime is 0.014393170674641926 minutes
2023-01-09 00:01:05,633:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:05,633:INFO:Initializing create_model()
2023-01-09 00:01:05,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:05,633:INFO:Checking exceptions
2023-01-09 00:01:05,633:INFO:Importing libraries
2023-01-09 00:01:05,633:INFO:Copying training dataset
2023-01-09 00:01:05,635:INFO:Defining folds
2023-01-09 00:01:05,635:INFO:Declaring metric variables
2023-01-09 00:01:05,635:INFO:Importing untrained model
2023-01-09 00:01:05,635:INFO:Decision Tree Classifier Imported successfully
2023-01-09 00:01:05,636:INFO:Starting cross validation
2023-01-09 00:01:05,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:05,694:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,694:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,695:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,699:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,707:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,710:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,714:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,714:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,715:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,716:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,719:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,719:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,722:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,723:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,729:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,730:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,731:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,733:INFO:Calculating mean and std
2023-01-09 00:01:05,734:INFO:Creating metrics dataframe
2023-01-09 00:01:05,737:INFO:Uploading results into container
2023-01-09 00:01:05,737:INFO:Uploading model into container now
2023-01-09 00:01:05,737:INFO:_master_model_container: 4
2023-01-09 00:01:05,737:INFO:_display_container: 2
2023-01-09 00:01:05,738:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=726, splitter='best')
2023-01-09 00:01:05,738:INFO:create_model() successfully completed......................................
2023-01-09 00:01:05,812:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:05,812:INFO:Creating metrics dataframe
2023-01-09 00:01:05,816:INFO:Initializing SVM - Linear Kernel
2023-01-09 00:01:05,816:INFO:Total runtime is 0.01746834913889567 minutes
2023-01-09 00:01:05,816:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:05,817:INFO:Initializing create_model()
2023-01-09 00:01:05,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:05,817:INFO:Checking exceptions
2023-01-09 00:01:05,817:INFO:Importing libraries
2023-01-09 00:01:05,817:INFO:Copying training dataset
2023-01-09 00:01:05,819:INFO:Defining folds
2023-01-09 00:01:05,819:INFO:Declaring metric variables
2023-01-09 00:01:05,819:INFO:Importing untrained model
2023-01-09 00:01:05,819:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 00:01:05,819:INFO:Starting cross validation
2023-01-09 00:01:05,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:05,873:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,874:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,875:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,877:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,877:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,879:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,881:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,884:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,885:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,885:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:05,886:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,889:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,891:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,893:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,895:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,896:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,896:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:05,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,899:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,900:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,900:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,901:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,903:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,904:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,905:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,906:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:05,909:INFO:Calculating mean and std
2023-01-09 00:01:05,910:INFO:Creating metrics dataframe
2023-01-09 00:01:05,913:INFO:Uploading results into container
2023-01-09 00:01:05,913:INFO:Uploading model into container now
2023-01-09 00:01:05,913:INFO:_master_model_container: 5
2023-01-09 00:01:05,914:INFO:_display_container: 2
2023-01-09 00:01:05,914:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=726, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 00:01:05,914:INFO:create_model() successfully completed......................................
2023-01-09 00:01:05,985:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:05,985:INFO:Creating metrics dataframe
2023-01-09 00:01:05,989:INFO:Initializing Ridge Classifier
2023-01-09 00:01:05,990:INFO:Total runtime is 0.020360151926676433 minutes
2023-01-09 00:01:05,990:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:05,990:INFO:Initializing create_model()
2023-01-09 00:01:05,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:05,990:INFO:Checking exceptions
2023-01-09 00:01:05,990:INFO:Importing libraries
2023-01-09 00:01:05,990:INFO:Copying training dataset
2023-01-09 00:01:05,992:INFO:Defining folds
2023-01-09 00:01:05,992:INFO:Declaring metric variables
2023-01-09 00:01:05,992:INFO:Importing untrained model
2023-01-09 00:01:05,992:INFO:Ridge Classifier Imported successfully
2023-01-09 00:01:05,993:INFO:Starting cross validation
2023-01-09 00:01:05,993:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:06,037:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,039:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,041:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,042:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,042:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,043:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,047:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,049:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,051:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,054:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,055:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,055:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,055:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,059:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,064:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,067:INFO:Calculating mean and std
2023-01-09 00:01:06,068:INFO:Creating metrics dataframe
2023-01-09 00:01:06,071:INFO:Uploading results into container
2023-01-09 00:01:06,071:INFO:Uploading model into container now
2023-01-09 00:01:06,072:INFO:_master_model_container: 6
2023-01-09 00:01:06,072:INFO:_display_container: 2
2023-01-09 00:01:06,072:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=726, solver='auto', tol=0.001)
2023-01-09 00:01:06,072:INFO:create_model() successfully completed......................................
2023-01-09 00:01:06,140:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:06,140:INFO:Creating metrics dataframe
2023-01-09 00:01:06,144:INFO:Initializing Random Forest Classifier
2023-01-09 00:01:06,144:INFO:Total runtime is 0.02293736537297567 minutes
2023-01-09 00:01:06,144:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:06,145:INFO:Initializing create_model()
2023-01-09 00:01:06,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:06,145:INFO:Checking exceptions
2023-01-09 00:01:06,145:INFO:Importing libraries
2023-01-09 00:01:06,145:INFO:Copying training dataset
2023-01-09 00:01:06,146:INFO:Defining folds
2023-01-09 00:01:06,146:INFO:Declaring metric variables
2023-01-09 00:01:06,146:INFO:Importing untrained model
2023-01-09 00:01:06,147:INFO:Random Forest Classifier Imported successfully
2023-01-09 00:01:06,147:INFO:Starting cross validation
2023-01-09 00:01:06,147:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:06,494:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,497:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,499:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,500:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,502:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,505:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,510:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,513:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,515:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,533:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,537:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,538:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,539:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,540:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,541:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,545:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,547:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,548:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,550:INFO:Calculating mean and std
2023-01-09 00:01:06,551:INFO:Creating metrics dataframe
2023-01-09 00:01:06,553:INFO:Uploading results into container
2023-01-09 00:01:06,554:INFO:Uploading model into container now
2023-01-09 00:01:06,554:INFO:_master_model_container: 7
2023-01-09 00:01:06,554:INFO:_display_container: 2
2023-01-09 00:01:06,554:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=726, verbose=0, warm_start=False)
2023-01-09 00:01:06,555:INFO:create_model() successfully completed......................................
2023-01-09 00:01:06,628:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:06,628:INFO:Creating metrics dataframe
2023-01-09 00:01:06,632:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 00:01:06,632:INFO:Total runtime is 0.031061792373657228 minutes
2023-01-09 00:01:06,632:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:06,632:INFO:Initializing create_model()
2023-01-09 00:01:06,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:06,632:INFO:Checking exceptions
2023-01-09 00:01:06,633:INFO:Importing libraries
2023-01-09 00:01:06,633:INFO:Copying training dataset
2023-01-09 00:01:06,634:INFO:Defining folds
2023-01-09 00:01:06,634:INFO:Declaring metric variables
2023-01-09 00:01:06,635:INFO:Importing untrained model
2023-01-09 00:01:06,635:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 00:01:06,635:INFO:Starting cross validation
2023-01-09 00:01:06,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:06,694:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,695:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,698:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,699:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,707:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,711:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,714:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,714:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,716:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,716:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,719:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,720:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,722:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,722:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,723:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,727:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,728:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,731:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,732:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,733:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:06,736:INFO:Calculating mean and std
2023-01-09 00:01:06,737:INFO:Creating metrics dataframe
2023-01-09 00:01:06,739:INFO:Uploading results into container
2023-01-09 00:01:06,740:INFO:Uploading model into container now
2023-01-09 00:01:06,740:INFO:_master_model_container: 8
2023-01-09 00:01:06,740:INFO:_display_container: 2
2023-01-09 00:01:06,740:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:01:06,740:INFO:create_model() successfully completed......................................
2023-01-09 00:01:06,812:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:06,812:INFO:Creating metrics dataframe
2023-01-09 00:01:06,816:INFO:Initializing Ada Boost Classifier
2023-01-09 00:01:06,817:INFO:Total runtime is 0.03412868976593018 minutes
2023-01-09 00:01:06,817:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:06,817:INFO:Initializing create_model()
2023-01-09 00:01:06,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:06,817:INFO:Checking exceptions
2023-01-09 00:01:06,817:INFO:Importing libraries
2023-01-09 00:01:06,817:INFO:Copying training dataset
2023-01-09 00:01:06,819:INFO:Defining folds
2023-01-09 00:01:06,819:INFO:Declaring metric variables
2023-01-09 00:01:06,819:INFO:Importing untrained model
2023-01-09 00:01:06,819:INFO:Ada Boost Classifier Imported successfully
2023-01-09 00:01:06,819:INFO:Starting cross validation
2023-01-09 00:01:06,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:06,999:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,002:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,004:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,009:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,010:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,013:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,014:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,015:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,017:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,017:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,021:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,021:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,025:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,026:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,027:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,033:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,034:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,035:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,035:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,037:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,038:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,038:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,040:INFO:Calculating mean and std
2023-01-09 00:01:07,041:INFO:Creating metrics dataframe
2023-01-09 00:01:07,044:INFO:Uploading results into container
2023-01-09 00:01:07,045:INFO:Uploading model into container now
2023-01-09 00:01:07,045:INFO:_master_model_container: 9
2023-01-09 00:01:07,045:INFO:_display_container: 2
2023-01-09 00:01:07,045:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=726)
2023-01-09 00:01:07,045:INFO:create_model() successfully completed......................................
2023-01-09 00:01:07,120:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:07,120:INFO:Creating metrics dataframe
2023-01-09 00:01:07,124:INFO:Initializing Gradient Boosting Classifier
2023-01-09 00:01:07,124:INFO:Total runtime is 0.03927372694015503 minutes
2023-01-09 00:01:07,124:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:07,124:INFO:Initializing create_model()
2023-01-09 00:01:07,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:07,124:INFO:Checking exceptions
2023-01-09 00:01:07,124:INFO:Importing libraries
2023-01-09 00:01:07,124:INFO:Copying training dataset
2023-01-09 00:01:07,126:INFO:Defining folds
2023-01-09 00:01:07,126:INFO:Declaring metric variables
2023-01-09 00:01:07,126:INFO:Importing untrained model
2023-01-09 00:01:07,126:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 00:01:07,127:INFO:Starting cross validation
2023-01-09 00:01:07,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:07,502:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,504:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,506:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,514:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,516:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,516:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,517:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,518:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,519:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,520:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,521:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,522:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,523:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,524:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,533:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,533:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,537:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,539:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,541:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,543:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,544:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,545:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,548:INFO:Calculating mean and std
2023-01-09 00:01:07,549:INFO:Creating metrics dataframe
2023-01-09 00:01:07,552:INFO:Uploading results into container
2023-01-09 00:01:07,552:INFO:Uploading model into container now
2023-01-09 00:01:07,552:INFO:_master_model_container: 10
2023-01-09 00:01:07,552:INFO:_display_container: 2
2023-01-09 00:01:07,553:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=726, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 00:01:07,553:INFO:create_model() successfully completed......................................
2023-01-09 00:01:07,627:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:07,627:INFO:Creating metrics dataframe
2023-01-09 00:01:07,631:INFO:Initializing Linear Discriminant Analysis
2023-01-09 00:01:07,631:INFO:Total runtime is 0.04771778583526612 minutes
2023-01-09 00:01:07,631:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:07,631:INFO:Initializing create_model()
2023-01-09 00:01:07,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:07,631:INFO:Checking exceptions
2023-01-09 00:01:07,631:INFO:Importing libraries
2023-01-09 00:01:07,631:INFO:Copying training dataset
2023-01-09 00:01:07,633:INFO:Defining folds
2023-01-09 00:01:07,633:INFO:Declaring metric variables
2023-01-09 00:01:07,633:INFO:Importing untrained model
2023-01-09 00:01:07,634:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 00:01:07,634:INFO:Starting cross validation
2023-01-09 00:01:07,634:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:07,691:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,693:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,695:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,698:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,702:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,703:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,706:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,707:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,707:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,715:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,716:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,719:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,719:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,719:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,720:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,720:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,723:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:07,727:INFO:Calculating mean and std
2023-01-09 00:01:07,728:INFO:Creating metrics dataframe
2023-01-09 00:01:07,731:INFO:Uploading results into container
2023-01-09 00:01:07,731:INFO:Uploading model into container now
2023-01-09 00:01:07,732:INFO:_master_model_container: 11
2023-01-09 00:01:07,732:INFO:_display_container: 2
2023-01-09 00:01:07,732:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:01:07,732:INFO:create_model() successfully completed......................................
2023-01-09 00:01:07,803:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:07,803:INFO:Creating metrics dataframe
2023-01-09 00:01:07,807:INFO:Initializing Extra Trees Classifier
2023-01-09 00:01:07,807:INFO:Total runtime is 0.050643583138783775 minutes
2023-01-09 00:01:07,807:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:07,807:INFO:Initializing create_model()
2023-01-09 00:01:07,807:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:07,807:INFO:Checking exceptions
2023-01-09 00:01:07,807:INFO:Importing libraries
2023-01-09 00:01:07,807:INFO:Copying training dataset
2023-01-09 00:01:07,809:INFO:Defining folds
2023-01-09 00:01:07,809:INFO:Declaring metric variables
2023-01-09 00:01:07,809:INFO:Importing untrained model
2023-01-09 00:01:07,809:INFO:Extra Trees Classifier Imported successfully
2023-01-09 00:01:07,810:INFO:Starting cross validation
2023-01-09 00:01:07,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:08,111:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,116:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,123:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,125:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,127:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,128:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,129:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,130:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,132:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,134:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,139:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,141:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,142:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,146:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,146:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,147:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,148:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,148:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,149:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,156:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,157:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,160:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,161:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,164:INFO:Calculating mean and std
2023-01-09 00:01:08,164:INFO:Creating metrics dataframe
2023-01-09 00:01:08,167:INFO:Uploading results into container
2023-01-09 00:01:08,167:INFO:Uploading model into container now
2023-01-09 00:01:08,168:INFO:_master_model_container: 12
2023-01-09 00:01:08,168:INFO:_display_container: 2
2023-01-09 00:01:08,168:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=726, verbose=0, warm_start=False)
2023-01-09 00:01:08,168:INFO:create_model() successfully completed......................................
2023-01-09 00:01:08,241:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:08,241:INFO:Creating metrics dataframe
2023-01-09 00:01:08,246:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 00:01:08,246:INFO:Total runtime is 0.05797317822774251 minutes
2023-01-09 00:01:08,246:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:08,246:INFO:Initializing create_model()
2023-01-09 00:01:08,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:08,246:INFO:Checking exceptions
2023-01-09 00:01:08,246:INFO:Importing libraries
2023-01-09 00:01:08,246:INFO:Copying training dataset
2023-01-09 00:01:08,248:INFO:Defining folds
2023-01-09 00:01:08,248:INFO:Declaring metric variables
2023-01-09 00:01:08,249:INFO:Importing untrained model
2023-01-09 00:01:08,249:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 00:01:08,249:INFO:Starting cross validation
2023-01-09 00:01:08,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:08,347:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,349:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,350:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,350:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,353:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,355:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,355:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,358:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,358:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,359:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,360:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,361:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,362:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,363:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,365:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,368:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,368:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,369:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,370:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,370:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,372:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,374:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,375:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,375:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,376:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,376:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,377:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,382:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,384:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,384:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,387:INFO:Calculating mean and std
2023-01-09 00:01:08,388:INFO:Creating metrics dataframe
2023-01-09 00:01:08,391:INFO:Uploading results into container
2023-01-09 00:01:08,392:INFO:Uploading model into container now
2023-01-09 00:01:08,392:INFO:_master_model_container: 13
2023-01-09 00:01:08,392:INFO:_display_container: 2
2023-01-09 00:01:08,392:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=726, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 00:01:08,392:INFO:create_model() successfully completed......................................
2023-01-09 00:01:08,465:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:08,465:INFO:Creating metrics dataframe
2023-01-09 00:01:08,469:INFO:Initializing Dummy Classifier
2023-01-09 00:01:08,469:INFO:Total runtime is 0.06167585452397664 minutes
2023-01-09 00:01:08,469:INFO:SubProcess create_model() called ==================================
2023-01-09 00:01:08,469:INFO:Initializing create_model()
2023-01-09 00:01:08,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3BA69B50>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:08,469:INFO:Checking exceptions
2023-01-09 00:01:08,469:INFO:Importing libraries
2023-01-09 00:01:08,470:INFO:Copying training dataset
2023-01-09 00:01:08,471:INFO:Defining folds
2023-01-09 00:01:08,471:INFO:Declaring metric variables
2023-01-09 00:01:08,471:INFO:Importing untrained model
2023-01-09 00:01:08,471:INFO:Dummy Classifier Imported successfully
2023-01-09 00:01:08,471:INFO:Starting cross validation
2023-01-09 00:01:08,471:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:01:08,525:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,527:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,529:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:08,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:08,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:08,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,533:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,533:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:08,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,537:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:08,538:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,543:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,543:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,545:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,545:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,545:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:08,545:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:08,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,546:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,547:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,548:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:08,548:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,549:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,549:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,551:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,551:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,551:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:08,551:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:01:08,552:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,552:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:01:08,554:INFO:Calculating mean and std
2023-01-09 00:01:08,556:INFO:Creating metrics dataframe
2023-01-09 00:01:08,559:INFO:Uploading results into container
2023-01-09 00:01:08,559:INFO:Uploading model into container now
2023-01-09 00:01:08,560:INFO:_master_model_container: 14
2023-01-09 00:01:08,560:INFO:_display_container: 2
2023-01-09 00:01:08,560:INFO:DummyClassifier(constant=None, random_state=726, strategy='prior')
2023-01-09 00:01:08,560:INFO:create_model() successfully completed......................................
2023-01-09 00:01:08,631:INFO:SubProcess create_model() end ==================================
2023-01-09 00:01:08,631:INFO:Creating metrics dataframe
2023-01-09 00:01:08,636:INFO:Initializing create_model()
2023-01-09 00:01:08,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3DC719A0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:01:08,636:INFO:Checking exceptions
2023-01-09 00:01:08,636:INFO:Importing libraries
2023-01-09 00:01:08,637:INFO:Copying training dataset
2023-01-09 00:01:08,638:INFO:Defining folds
2023-01-09 00:01:08,638:INFO:Declaring metric variables
2023-01-09 00:01:08,638:INFO:Importing untrained model
2023-01-09 00:01:08,638:INFO:Declaring custom model
2023-01-09 00:01:08,639:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 00:01:08,639:INFO:Cross validation set to False
2023-01-09 00:01:08,639:INFO:Fitting Model
2023-01-09 00:01:08,662:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:01:08,662:INFO:create_model() successfully completed......................................
2023-01-09 00:01:08,752:INFO:_master_model_container: 14
2023-01-09 00:01:08,752:INFO:_display_container: 2
2023-01-09 00:01:08,753:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:01:08,753:INFO:compare_models() successfully completed......................................
2023-01-09 00:01:08,759:INFO:Initializing save_model()
2023-01-09 00:01:08,759:INFO:save_model(model=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), model_name=best_model, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-09 00:01:08,759:INFO:Adding model into prep_pipe
2023-01-09 00:01:08,762:INFO:best_model.pkl saved in current working directory
2023-01-09 00:01:08,765:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2023-01-09 00:01:08,766:INFO:save_model() successfully completed......................................
2023-01-09 00:02:19,187:INFO:PyCaret ClassificationExperiment
2023-01-09 00:02:19,188:INFO:Logging name: clf-default-name
2023-01-09 00:02:19,188:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 00:02:19,188:INFO:version 3.0.0.rc6
2023-01-09 00:02:19,188:INFO:Initializing setup()
2023-01-09 00:02:19,188:INFO:self.USI: b024
2023-01-09 00:02:19,188:INFO:self._variable_keys: {'memory', 'X', 'gpu_param', 'pipeline', 'data', 'y_test', 'target_param', 'fold_groups_param', 'n_jobs_param', 'X_test', 'y_train', 'idx', 'seed', 'X_train', 'exp_id', '_available_plots', 'fold_shuffle_param', '_ml_usecase', 'y', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_generator', 'html_param', 'USI', 'log_plots_param', 'is_multiclass', 'logging_param', 'exp_name_log'}
2023-01-09 00:02:19,188:INFO:Checking environment
2023-01-09 00:02:19,188:INFO:python_version: 3.9.15
2023-01-09 00:02:19,188:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-09 00:02:19,188:INFO:machine: AMD64
2023-01-09 00:02:19,189:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-09 00:02:19,189:INFO:Memory: svmem(total=17010110464, available=1902182400, percent=88.8, used=15107928064, free=1902182400)
2023-01-09 00:02:19,189:INFO:Physical Core: 6
2023-01-09 00:02:19,189:INFO:Logical Core: 12
2023-01-09 00:02:19,189:INFO:Checking libraries
2023-01-09 00:02:19,189:INFO:System:
2023-01-09 00:02:19,189:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-09 00:02:19,189:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-09 00:02:19,189:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-09 00:02:19,189:INFO:PyCaret required dependencies:
2023-01-09 00:02:19,190:INFO:                 pip: 22.3.1
2023-01-09 00:02:19,190:INFO:          setuptools: 65.6.3
2023-01-09 00:02:19,190:INFO:             pycaret: 3.0.0rc6
2023-01-09 00:02:19,190:INFO:             IPython: 8.8.0
2023-01-09 00:02:19,190:INFO:          ipywidgets: 8.0.4
2023-01-09 00:02:19,190:INFO:                tqdm: 4.64.1
2023-01-09 00:02:19,190:INFO:               numpy: 1.22.4
2023-01-09 00:02:19,190:INFO:              pandas: 1.5.2
2023-01-09 00:02:19,190:INFO:              jinja2: 3.1.2
2023-01-09 00:02:19,190:INFO:               scipy: 1.9.3
2023-01-09 00:02:19,190:INFO:              joblib: 1.2.0
2023-01-09 00:02:19,191:INFO:             sklearn: 1.1.3
2023-01-09 00:02:19,191:INFO:                pyod: 1.0.7
2023-01-09 00:02:19,191:INFO:            imblearn: 0.10.1
2023-01-09 00:02:19,191:INFO:   category_encoders: 2.5.1.post0
2023-01-09 00:02:19,191:INFO:            lightgbm: 3.3.4
2023-01-09 00:02:19,191:INFO:               numba: 0.56.4
2023-01-09 00:02:19,191:INFO:            requests: 2.28.1
2023-01-09 00:02:19,191:INFO:          matplotlib: 3.6.2
2023-01-09 00:02:19,191:INFO:          scikitplot: 0.3.7
2023-01-09 00:02:19,191:INFO:         yellowbrick: 1.5
2023-01-09 00:02:19,191:INFO:              plotly: 5.11.0
2023-01-09 00:02:19,191:INFO:             kaleido: 0.2.1
2023-01-09 00:02:19,191:INFO:         statsmodels: 0.13.5
2023-01-09 00:02:19,191:INFO:              sktime: 0.14.1
2023-01-09 00:02:19,191:INFO:               tbats: 1.1.2
2023-01-09 00:02:19,191:INFO:            pmdarima: 2.0.2
2023-01-09 00:02:19,191:INFO:              psutil: 5.9.0
2023-01-09 00:02:19,192:INFO:PyCaret optional dependencies:
2023-01-09 00:02:19,192:INFO:                shap: Not installed
2023-01-09 00:02:19,192:INFO:           interpret: Not installed
2023-01-09 00:02:19,192:INFO:                umap: Not installed
2023-01-09 00:02:19,192:INFO:    pandas_profiling: 3.6.2
2023-01-09 00:02:19,192:INFO:  explainerdashboard: Not installed
2023-01-09 00:02:19,192:INFO:             autoviz: Not installed
2023-01-09 00:02:19,192:INFO:           fairlearn: Not installed
2023-01-09 00:02:19,192:INFO:             xgboost: Not installed
2023-01-09 00:02:19,192:INFO:            catboost: Not installed
2023-01-09 00:02:19,192:INFO:              kmodes: Not installed
2023-01-09 00:02:19,192:INFO:             mlxtend: Not installed
2023-01-09 00:02:19,192:INFO:       statsforecast: Not installed
2023-01-09 00:02:19,192:INFO:        tune_sklearn: Not installed
2023-01-09 00:02:19,192:INFO:                 ray: Not installed
2023-01-09 00:02:19,193:INFO:            hyperopt: Not installed
2023-01-09 00:02:19,193:INFO:              optuna: Not installed
2023-01-09 00:02:19,193:INFO:               skopt: Not installed
2023-01-09 00:02:19,193:INFO:              mlflow: Not installed
2023-01-09 00:02:19,193:INFO:              gradio: Not installed
2023-01-09 00:02:19,193:INFO:             fastapi: Not installed
2023-01-09 00:02:19,193:INFO:             uvicorn: Not installed
2023-01-09 00:02:19,193:INFO:              m2cgen: Not installed
2023-01-09 00:02:19,193:INFO:           evidently: Not installed
2023-01-09 00:02:19,193:INFO:                nltk: Not installed
2023-01-09 00:02:19,193:INFO:            pyLDAvis: Not installed
2023-01-09 00:02:19,193:INFO:              gensim: Not installed
2023-01-09 00:02:19,193:INFO:               spacy: Not installed
2023-01-09 00:02:19,193:INFO:           wordcloud: Not installed
2023-01-09 00:02:19,193:INFO:            textblob: Not installed
2023-01-09 00:02:19,193:INFO:               fugue: Not installed
2023-01-09 00:02:19,193:INFO:           streamlit: 1.16.0
2023-01-09 00:02:19,194:INFO:             prophet: Not installed
2023-01-09 00:02:19,194:INFO:None
2023-01-09 00:02:19,194:INFO:Set up data.
2023-01-09 00:02:19,198:INFO:Set up train/test split.
2023-01-09 00:02:19,201:INFO:Set up index.
2023-01-09 00:02:19,202:INFO:Set up folding strategy.
2023-01-09 00:02:19,202:INFO:Assigning column types.
2023-01-09 00:02:19,205:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 00:02:19,246:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:02:19,247:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:02:19,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,313:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:02:19,314:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:02:19,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,354:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 00:02:19,403:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:02:19,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,462:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:02:19,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,484:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 00:02:19,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,604:INFO:Preparing preprocessing pipeline...
2023-01-09 00:02:19,605:INFO:Set up label encoding.
2023-01-09 00:02:19,605:INFO:Set up simple imputation.
2023-01-09 00:02:19,639:INFO:Finished creating preprocessing pipeline.
2023-01-09 00:02:19,642:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 00:02:19,642:INFO:Creating final display dataframe.
2023-01-09 00:02:19,813:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               4419
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               b024
2023-01-09 00:02:19,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:02:19,941:INFO:setup() successfully completed in 0.76s...............
2023-01-09 00:02:19,944:INFO:Initializing compare_models()
2023-01-09 00:02:19,944:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 00:02:19,944:INFO:Checking exceptions
2023-01-09 00:02:19,947:INFO:Preparing display monitor
2023-01-09 00:02:19,949:INFO:Initializing Logistic Regression
2023-01-09 00:02:19,949:INFO:Total runtime is 0.0 minutes
2023-01-09 00:02:19,949:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:19,949:INFO:Initializing create_model()
2023-01-09 00:02:19,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:19,949:INFO:Checking exceptions
2023-01-09 00:02:19,950:INFO:Importing libraries
2023-01-09 00:02:19,950:INFO:Copying training dataset
2023-01-09 00:02:19,951:INFO:Defining folds
2023-01-09 00:02:19,951:INFO:Declaring metric variables
2023-01-09 00:02:19,951:INFO:Importing untrained model
2023-01-09 00:02:19,952:INFO:Logistic Regression Imported successfully
2023-01-09 00:02:19,952:INFO:Starting cross validation
2023-01-09 00:02:19,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:20,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,268:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,270:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,270:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,271:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,272:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,272:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,273:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,273:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,275:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,278:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,284:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,284:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,288:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,292:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,293:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,293:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,297:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,302:INFO:Calculating mean and std
2023-01-09 00:02:20,302:INFO:Creating metrics dataframe
2023-01-09 00:02:20,305:INFO:Uploading results into container
2023-01-09 00:02:20,306:INFO:Uploading model into container now
2023-01-09 00:02:20,306:INFO:_master_model_container: 1
2023-01-09 00:02:20,306:INFO:_display_container: 2
2023-01-09 00:02:20,307:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4419, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 00:02:20,307:INFO:create_model() successfully completed......................................
2023-01-09 00:02:20,380:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:20,380:INFO:Creating metrics dataframe
2023-01-09 00:02:20,384:INFO:Initializing K Neighbors Classifier
2023-01-09 00:02:20,384:INFO:Total runtime is 0.007247161865234375 minutes
2023-01-09 00:02:20,384:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:20,384:INFO:Initializing create_model()
2023-01-09 00:02:20,384:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:20,384:INFO:Checking exceptions
2023-01-09 00:02:20,384:INFO:Importing libraries
2023-01-09 00:02:20,384:INFO:Copying training dataset
2023-01-09 00:02:20,386:INFO:Defining folds
2023-01-09 00:02:20,386:INFO:Declaring metric variables
2023-01-09 00:02:20,386:INFO:Importing untrained model
2023-01-09 00:02:20,386:INFO:K Neighbors Classifier Imported successfully
2023-01-09 00:02:20,386:INFO:Starting cross validation
2023-01-09 00:02:20,387:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:20,494:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,496:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,496:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,498:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,500:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,501:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,508:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,510:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,511:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,513:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,513:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,513:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,515:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,515:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,516:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,517:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,518:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,518:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,520:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,522:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,523:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,529:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,534:INFO:Calculating mean and std
2023-01-09 00:02:20,535:INFO:Creating metrics dataframe
2023-01-09 00:02:20,538:INFO:Uploading results into container
2023-01-09 00:02:20,539:INFO:Uploading model into container now
2023-01-09 00:02:20,539:INFO:_master_model_container: 2
2023-01-09 00:02:20,539:INFO:_display_container: 2
2023-01-09 00:02:20,539:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:02:20,539:INFO:create_model() successfully completed......................................
2023-01-09 00:02:20,615:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:20,615:INFO:Creating metrics dataframe
2023-01-09 00:02:20,620:INFO:Initializing Naive Bayes
2023-01-09 00:02:20,620:INFO:Total runtime is 0.01117019255956014 minutes
2023-01-09 00:02:20,620:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:20,620:INFO:Initializing create_model()
2023-01-09 00:02:20,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:20,620:INFO:Checking exceptions
2023-01-09 00:02:20,620:INFO:Importing libraries
2023-01-09 00:02:20,620:INFO:Copying training dataset
2023-01-09 00:02:20,622:INFO:Defining folds
2023-01-09 00:02:20,622:INFO:Declaring metric variables
2023-01-09 00:02:20,622:INFO:Importing untrained model
2023-01-09 00:02:20,623:INFO:Naive Bayes Imported successfully
2023-01-09 00:02:20,623:INFO:Starting cross validation
2023-01-09 00:02:20,624:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:20,691:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,694:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,698:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,702:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,703:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,703:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,706:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,706:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,711:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,711:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,715:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,716:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,720:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,723:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,726:INFO:Calculating mean and std
2023-01-09 00:02:20,727:INFO:Creating metrics dataframe
2023-01-09 00:02:20,729:INFO:Uploading results into container
2023-01-09 00:02:20,730:INFO:Uploading model into container now
2023-01-09 00:02:20,730:INFO:_master_model_container: 3
2023-01-09 00:02:20,730:INFO:_display_container: 2
2023-01-09 00:02:20,730:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 00:02:20,730:INFO:create_model() successfully completed......................................
2023-01-09 00:02:20,807:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:20,807:INFO:Creating metrics dataframe
2023-01-09 00:02:20,811:INFO:Initializing Decision Tree Classifier
2023-01-09 00:02:20,811:INFO:Total runtime is 0.01435990333557129 minutes
2023-01-09 00:02:20,811:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:20,812:INFO:Initializing create_model()
2023-01-09 00:02:20,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:20,812:INFO:Checking exceptions
2023-01-09 00:02:20,812:INFO:Importing libraries
2023-01-09 00:02:20,812:INFO:Copying training dataset
2023-01-09 00:02:20,814:INFO:Defining folds
2023-01-09 00:02:20,814:INFO:Declaring metric variables
2023-01-09 00:02:20,814:INFO:Importing untrained model
2023-01-09 00:02:20,814:INFO:Decision Tree Classifier Imported successfully
2023-01-09 00:02:20,815:INFO:Starting cross validation
2023-01-09 00:02:20,815:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:20,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,871:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,873:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,875:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,877:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,879:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,884:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,886:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,889:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,890:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,893:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,895:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,896:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,900:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,901:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,903:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,903:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,904:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,904:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,905:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,905:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,906:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,906:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,906:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,908:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:20,911:INFO:Calculating mean and std
2023-01-09 00:02:20,912:INFO:Creating metrics dataframe
2023-01-09 00:02:20,914:INFO:Uploading results into container
2023-01-09 00:02:20,915:INFO:Uploading model into container now
2023-01-09 00:02:20,915:INFO:_master_model_container: 4
2023-01-09 00:02:20,915:INFO:_display_container: 2
2023-01-09 00:02:20,915:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4419, splitter='best')
2023-01-09 00:02:20,915:INFO:create_model() successfully completed......................................
2023-01-09 00:02:20,987:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:20,987:INFO:Creating metrics dataframe
2023-01-09 00:02:20,991:INFO:Initializing SVM - Linear Kernel
2023-01-09 00:02:20,991:INFO:Total runtime is 0.017351758480072022 minutes
2023-01-09 00:02:20,991:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:20,991:INFO:Initializing create_model()
2023-01-09 00:02:20,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:20,991:INFO:Checking exceptions
2023-01-09 00:02:20,991:INFO:Importing libraries
2023-01-09 00:02:20,991:INFO:Copying training dataset
2023-01-09 00:02:20,993:INFO:Defining folds
2023-01-09 00:02:20,993:INFO:Declaring metric variables
2023-01-09 00:02:20,993:INFO:Importing untrained model
2023-01-09 00:02:20,993:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 00:02:20,994:INFO:Starting cross validation
2023-01-09 00:02:20,994:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:21,045:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,047:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,049:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:21,050:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,051:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,052:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:21,054:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,054:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,055:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:21,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,059:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,065:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:21,067:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,067:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,069:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,073:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:21,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,075:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:21,075:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,075:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,077:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,079:INFO:Calculating mean and std
2023-01-09 00:02:21,080:INFO:Creating metrics dataframe
2023-01-09 00:02:21,083:INFO:Uploading results into container
2023-01-09 00:02:21,083:INFO:Uploading model into container now
2023-01-09 00:02:21,083:INFO:_master_model_container: 5
2023-01-09 00:02:21,084:INFO:_display_container: 2
2023-01-09 00:02:21,084:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4419, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 00:02:21,084:INFO:create_model() successfully completed......................................
2023-01-09 00:02:21,156:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:21,156:INFO:Creating metrics dataframe
2023-01-09 00:02:21,160:INFO:Initializing Ridge Classifier
2023-01-09 00:02:21,160:INFO:Total runtime is 0.020171308517456056 minutes
2023-01-09 00:02:21,160:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:21,160:INFO:Initializing create_model()
2023-01-09 00:02:21,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:21,160:INFO:Checking exceptions
2023-01-09 00:02:21,160:INFO:Importing libraries
2023-01-09 00:02:21,160:INFO:Copying training dataset
2023-01-09 00:02:21,162:INFO:Defining folds
2023-01-09 00:02:21,162:INFO:Declaring metric variables
2023-01-09 00:02:21,162:INFO:Importing untrained model
2023-01-09 00:02:21,162:INFO:Ridge Classifier Imported successfully
2023-01-09 00:02:21,163:INFO:Starting cross validation
2023-01-09 00:02:21,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:21,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,207:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,210:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,212:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,214:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,223:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,224:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,226:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,226:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,227:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,228:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,230:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,230:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,231:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,231:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,232:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,232:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,232:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,234:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,236:INFO:Calculating mean and std
2023-01-09 00:02:21,237:INFO:Creating metrics dataframe
2023-01-09 00:02:21,240:INFO:Uploading results into container
2023-01-09 00:02:21,240:INFO:Uploading model into container now
2023-01-09 00:02:21,240:INFO:_master_model_container: 6
2023-01-09 00:02:21,240:INFO:_display_container: 2
2023-01-09 00:02:21,240:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4419, solver='auto', tol=0.001)
2023-01-09 00:02:21,240:INFO:create_model() successfully completed......................................
2023-01-09 00:02:21,314:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:21,314:INFO:Creating metrics dataframe
2023-01-09 00:02:21,318:INFO:Initializing Random Forest Classifier
2023-01-09 00:02:21,318:INFO:Total runtime is 0.022814206282297772 minutes
2023-01-09 00:02:21,318:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:21,318:INFO:Initializing create_model()
2023-01-09 00:02:21,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:21,318:INFO:Checking exceptions
2023-01-09 00:02:21,318:INFO:Importing libraries
2023-01-09 00:02:21,319:INFO:Copying training dataset
2023-01-09 00:02:21,320:INFO:Defining folds
2023-01-09 00:02:21,320:INFO:Declaring metric variables
2023-01-09 00:02:21,320:INFO:Importing untrained model
2023-01-09 00:02:21,321:INFO:Random Forest Classifier Imported successfully
2023-01-09 00:02:21,321:INFO:Starting cross validation
2023-01-09 00:02:21,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:21,683:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,686:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,687:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,690:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,691:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,696:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,698:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,703:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,706:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,715:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,716:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,719:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,723:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,723:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,723:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,728:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,729:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,730:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,732:INFO:Calculating mean and std
2023-01-09 00:02:21,732:INFO:Creating metrics dataframe
2023-01-09 00:02:21,735:INFO:Uploading results into container
2023-01-09 00:02:21,736:INFO:Uploading model into container now
2023-01-09 00:02:21,736:INFO:_master_model_container: 7
2023-01-09 00:02:21,736:INFO:_display_container: 2
2023-01-09 00:02:21,736:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4419, verbose=0, warm_start=False)
2023-01-09 00:02:21,736:INFO:create_model() successfully completed......................................
2023-01-09 00:02:21,815:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:21,815:INFO:Creating metrics dataframe
2023-01-09 00:02:21,819:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 00:02:21,819:INFO:Total runtime is 0.031164181232452397 minutes
2023-01-09 00:02:21,819:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:21,819:INFO:Initializing create_model()
2023-01-09 00:02:21,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:21,819:INFO:Checking exceptions
2023-01-09 00:02:21,819:INFO:Importing libraries
2023-01-09 00:02:21,819:INFO:Copying training dataset
2023-01-09 00:02:21,821:INFO:Defining folds
2023-01-09 00:02:21,822:INFO:Declaring metric variables
2023-01-09 00:02:21,822:INFO:Importing untrained model
2023-01-09 00:02:21,822:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 00:02:21,822:INFO:Starting cross validation
2023-01-09 00:02:21,823:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:21,883:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,886:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,888:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,890:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,890:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,892:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,893:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,893:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,894:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,895:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,896:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,897:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,897:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,899:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,903:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,905:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,908:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,911:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,911:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,911:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,917:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,919:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,920:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:21,923:INFO:Calculating mean and std
2023-01-09 00:02:21,923:INFO:Creating metrics dataframe
2023-01-09 00:02:21,926:INFO:Uploading results into container
2023-01-09 00:02:21,927:INFO:Uploading model into container now
2023-01-09 00:02:21,927:INFO:_master_model_container: 8
2023-01-09 00:02:21,927:INFO:_display_container: 2
2023-01-09 00:02:21,927:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:02:21,927:INFO:create_model() successfully completed......................................
2023-01-09 00:02:22,006:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:22,006:INFO:Creating metrics dataframe
2023-01-09 00:02:22,011:INFO:Initializing Ada Boost Classifier
2023-01-09 00:02:22,011:INFO:Total runtime is 0.03435642719268799 minutes
2023-01-09 00:02:22,011:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:22,011:INFO:Initializing create_model()
2023-01-09 00:02:22,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:22,011:INFO:Checking exceptions
2023-01-09 00:02:22,011:INFO:Importing libraries
2023-01-09 00:02:22,011:INFO:Copying training dataset
2023-01-09 00:02:22,013:INFO:Defining folds
2023-01-09 00:02:22,013:INFO:Declaring metric variables
2023-01-09 00:02:22,013:INFO:Importing untrained model
2023-01-09 00:02:22,013:INFO:Ada Boost Classifier Imported successfully
2023-01-09 00:02:22,013:INFO:Starting cross validation
2023-01-09 00:02:22,014:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:22,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,211:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,214:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,218:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,224:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,227:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,229:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,230:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,232:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,232:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,234:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,235:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,237:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,239:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,240:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,242:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,243:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,243:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,244:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,244:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,245:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,247:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,249:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,251:INFO:Calculating mean and std
2023-01-09 00:02:22,252:INFO:Creating metrics dataframe
2023-01-09 00:02:22,254:INFO:Uploading results into container
2023-01-09 00:02:22,255:INFO:Uploading model into container now
2023-01-09 00:02:22,255:INFO:_master_model_container: 9
2023-01-09 00:02:22,255:INFO:_display_container: 2
2023-01-09 00:02:22,255:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4419)
2023-01-09 00:02:22,255:INFO:create_model() successfully completed......................................
2023-01-09 00:02:22,335:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:22,336:INFO:Creating metrics dataframe
2023-01-09 00:02:22,341:INFO:Initializing Gradient Boosting Classifier
2023-01-09 00:02:22,341:INFO:Total runtime is 0.039853294690450035 minutes
2023-01-09 00:02:22,341:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:22,341:INFO:Initializing create_model()
2023-01-09 00:02:22,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:22,342:INFO:Checking exceptions
2023-01-09 00:02:22,342:INFO:Importing libraries
2023-01-09 00:02:22,342:INFO:Copying training dataset
2023-01-09 00:02:22,343:INFO:Defining folds
2023-01-09 00:02:22,343:INFO:Declaring metric variables
2023-01-09 00:02:22,343:INFO:Importing untrained model
2023-01-09 00:02:22,344:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 00:02:22,344:INFO:Starting cross validation
2023-01-09 00:02:22,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:22,748:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,750:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,753:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,763:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,764:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,765:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,766:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,767:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,768:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,771:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,773:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,773:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,783:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,784:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,784:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,785:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,789:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,791:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,792:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,793:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,796:INFO:Calculating mean and std
2023-01-09 00:02:22,796:INFO:Creating metrics dataframe
2023-01-09 00:02:22,799:INFO:Uploading results into container
2023-01-09 00:02:22,800:INFO:Uploading model into container now
2023-01-09 00:02:22,800:INFO:_master_model_container: 10
2023-01-09 00:02:22,800:INFO:_display_container: 2
2023-01-09 00:02:22,800:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4419, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 00:02:22,801:INFO:create_model() successfully completed......................................
2023-01-09 00:02:22,883:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:22,883:INFO:Creating metrics dataframe
2023-01-09 00:02:22,887:INFO:Initializing Linear Discriminant Analysis
2023-01-09 00:02:22,887:INFO:Total runtime is 0.04895530144373576 minutes
2023-01-09 00:02:22,887:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:22,887:INFO:Initializing create_model()
2023-01-09 00:02:22,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:22,887:INFO:Checking exceptions
2023-01-09 00:02:22,887:INFO:Importing libraries
2023-01-09 00:02:22,887:INFO:Copying training dataset
2023-01-09 00:02:22,889:INFO:Defining folds
2023-01-09 00:02:22,889:INFO:Declaring metric variables
2023-01-09 00:02:22,890:INFO:Importing untrained model
2023-01-09 00:02:22,890:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 00:02:22,890:INFO:Starting cross validation
2023-01-09 00:02:22,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:22,952:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,954:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,957:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,958:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,959:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,959:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,961:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,962:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,964:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,972:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,974:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,974:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,974:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,976:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,976:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,976:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,977:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,978:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,978:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,979:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,980:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,981:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,982:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,982:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,983:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:22,987:INFO:Calculating mean and std
2023-01-09 00:02:22,987:INFO:Creating metrics dataframe
2023-01-09 00:02:22,990:INFO:Uploading results into container
2023-01-09 00:02:22,991:INFO:Uploading model into container now
2023-01-09 00:02:22,991:INFO:_master_model_container: 11
2023-01-09 00:02:22,991:INFO:_display_container: 2
2023-01-09 00:02:22,991:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:02:22,991:INFO:create_model() successfully completed......................................
2023-01-09 00:02:23,067:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:23,067:INFO:Creating metrics dataframe
2023-01-09 00:02:23,071:INFO:Initializing Extra Trees Classifier
2023-01-09 00:02:23,071:INFO:Total runtime is 0.05201819737752279 minutes
2023-01-09 00:02:23,071:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:23,071:INFO:Initializing create_model()
2023-01-09 00:02:23,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:23,071:INFO:Checking exceptions
2023-01-09 00:02:23,071:INFO:Importing libraries
2023-01-09 00:02:23,071:INFO:Copying training dataset
2023-01-09 00:02:23,072:INFO:Defining folds
2023-01-09 00:02:23,072:INFO:Declaring metric variables
2023-01-09 00:02:23,072:INFO:Importing untrained model
2023-01-09 00:02:23,072:INFO:Extra Trees Classifier Imported successfully
2023-01-09 00:02:23,073:INFO:Starting cross validation
2023-01-09 00:02:23,073:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:23,379:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,382:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,386:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,386:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,389:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,390:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,392:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,392:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,393:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,395:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,398:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,402:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,403:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,404:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,405:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,405:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,406:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,408:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,412:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,413:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,415:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,416:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,417:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,418:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,421:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,422:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,424:INFO:Calculating mean and std
2023-01-09 00:02:23,425:INFO:Creating metrics dataframe
2023-01-09 00:02:23,428:INFO:Uploading results into container
2023-01-09 00:02:23,428:INFO:Uploading model into container now
2023-01-09 00:02:23,428:INFO:_master_model_container: 12
2023-01-09 00:02:23,428:INFO:_display_container: 2
2023-01-09 00:02:23,429:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4419, verbose=0, warm_start=False)
2023-01-09 00:02:23,429:INFO:create_model() successfully completed......................................
2023-01-09 00:02:23,501:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:23,502:INFO:Creating metrics dataframe
2023-01-09 00:02:23,507:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 00:02:23,507:INFO:Total runtime is 0.059289872646331794 minutes
2023-01-09 00:02:23,507:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:23,507:INFO:Initializing create_model()
2023-01-09 00:02:23,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:23,507:INFO:Checking exceptions
2023-01-09 00:02:23,508:INFO:Importing libraries
2023-01-09 00:02:23,508:INFO:Copying training dataset
2023-01-09 00:02:23,510:INFO:Defining folds
2023-01-09 00:02:23,510:INFO:Declaring metric variables
2023-01-09 00:02:23,510:INFO:Importing untrained model
2023-01-09 00:02:23,510:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 00:02:23,511:INFO:Starting cross validation
2023-01-09 00:02:23,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:23,597:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,599:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,601:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,606:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,608:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,609:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,609:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,611:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,613:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,615:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,619:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,621:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,623:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,624:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,627:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,628:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,629:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,630:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,630:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,631:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,634:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,635:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,636:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,637:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,639:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,641:INFO:Calculating mean and std
2023-01-09 00:02:23,642:INFO:Creating metrics dataframe
2023-01-09 00:02:23,645:INFO:Uploading results into container
2023-01-09 00:02:23,645:INFO:Uploading model into container now
2023-01-09 00:02:23,646:INFO:_master_model_container: 13
2023-01-09 00:02:23,646:INFO:_display_container: 2
2023-01-09 00:02:23,646:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4419, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 00:02:23,646:INFO:create_model() successfully completed......................................
2023-01-09 00:02:23,718:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:23,718:INFO:Creating metrics dataframe
2023-01-09 00:02:23,722:INFO:Initializing Dummy Classifier
2023-01-09 00:02:23,722:INFO:Total runtime is 0.06288270552953085 minutes
2023-01-09 00:02:23,722:INFO:SubProcess create_model() called ==================================
2023-01-09 00:02:23,723:INFO:Initializing create_model()
2023-01-09 00:02:23,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7D9F70>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:23,723:INFO:Checking exceptions
2023-01-09 00:02:23,723:INFO:Importing libraries
2023-01-09 00:02:23,723:INFO:Copying training dataset
2023-01-09 00:02:23,724:INFO:Defining folds
2023-01-09 00:02:23,724:INFO:Declaring metric variables
2023-01-09 00:02:23,724:INFO:Importing untrained model
2023-01-09 00:02:23,725:INFO:Dummy Classifier Imported successfully
2023-01-09 00:02:23,725:INFO:Starting cross validation
2023-01-09 00:02:23,725:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:02:23,777:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,780:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,781:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:23,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,784:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,785:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,786:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:23,787:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,787:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:23,788:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,789:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,790:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,792:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:23,793:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,795:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,796:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:23,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,797:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,798:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:23,799:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,800:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:23,803:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,803:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,804:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,804:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,804:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:23,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:23,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:02:23,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,806:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:02:23,810:INFO:Calculating mean and std
2023-01-09 00:02:23,810:INFO:Creating metrics dataframe
2023-01-09 00:02:23,813:INFO:Uploading results into container
2023-01-09 00:02:23,814:INFO:Uploading model into container now
2023-01-09 00:02:23,814:INFO:_master_model_container: 14
2023-01-09 00:02:23,814:INFO:_display_container: 2
2023-01-09 00:02:23,814:INFO:DummyClassifier(constant=None, random_state=4419, strategy='prior')
2023-01-09 00:02:23,814:INFO:create_model() successfully completed......................................
2023-01-09 00:02:23,888:INFO:SubProcess create_model() end ==================================
2023-01-09 00:02:23,888:INFO:Creating metrics dataframe
2023-01-09 00:02:23,893:INFO:Initializing create_model()
2023-01-09 00:02:23,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3B7938B0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:02:23,894:INFO:Checking exceptions
2023-01-09 00:02:23,894:INFO:Importing libraries
2023-01-09 00:02:23,894:INFO:Copying training dataset
2023-01-09 00:02:23,896:INFO:Defining folds
2023-01-09 00:02:23,896:INFO:Declaring metric variables
2023-01-09 00:02:23,896:INFO:Importing untrained model
2023-01-09 00:02:23,896:INFO:Declaring custom model
2023-01-09 00:02:23,896:INFO:K Neighbors Classifier Imported successfully
2023-01-09 00:02:23,897:INFO:Cross validation set to False
2023-01-09 00:02:23,897:INFO:Fitting Model
2023-01-09 00:02:23,922:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:02:23,922:INFO:create_model() successfully completed......................................
2023-01-09 00:02:24,012:INFO:_master_model_container: 14
2023-01-09 00:02:24,012:INFO:_display_container: 2
2023-01-09 00:02:24,012:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:02:24,013:INFO:compare_models() successfully completed......................................
2023-01-09 00:02:24,019:INFO:Initializing save_model()
2023-01-09 00:02:24,020:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=best_model, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-09 00:02:24,020:INFO:Adding model into prep_pipe
2023-01-09 00:02:24,025:INFO:best_model.pkl saved in current working directory
2023-01-09 00:02:24,029:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2023-01-09 00:02:24,030:INFO:save_model() successfully completed......................................
2023-01-09 00:03:08,126:INFO:PyCaret ClassificationExperiment
2023-01-09 00:03:08,126:INFO:Logging name: clf-default-name
2023-01-09 00:03:08,127:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 00:03:08,127:INFO:version 3.0.0.rc6
2023-01-09 00:03:08,127:INFO:Initializing setup()
2023-01-09 00:03:08,127:INFO:self.USI: abc4
2023-01-09 00:03:08,127:INFO:self._variable_keys: {'memory', 'X', 'gpu_param', 'pipeline', 'data', 'y_test', 'target_param', 'fold_groups_param', 'n_jobs_param', 'X_test', 'y_train', 'idx', 'seed', 'X_train', 'exp_id', '_available_plots', 'fold_shuffle_param', '_ml_usecase', 'y', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_generator', 'html_param', 'USI', 'log_plots_param', 'is_multiclass', 'logging_param', 'exp_name_log'}
2023-01-09 00:03:08,128:INFO:Checking environment
2023-01-09 00:03:08,128:INFO:python_version: 3.9.15
2023-01-09 00:03:08,128:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-09 00:03:08,128:INFO:machine: AMD64
2023-01-09 00:03:08,128:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-09 00:03:08,128:INFO:Memory: svmem(total=17010110464, available=1849671680, percent=89.1, used=15160438784, free=1849671680)
2023-01-09 00:03:08,128:INFO:Physical Core: 6
2023-01-09 00:03:08,128:INFO:Logical Core: 12
2023-01-09 00:03:08,128:INFO:Checking libraries
2023-01-09 00:03:08,128:INFO:System:
2023-01-09 00:03:08,129:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-09 00:03:08,129:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-09 00:03:08,129:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-09 00:03:08,129:INFO:PyCaret required dependencies:
2023-01-09 00:03:08,129:INFO:                 pip: 22.3.1
2023-01-09 00:03:08,129:INFO:          setuptools: 65.6.3
2023-01-09 00:03:08,129:INFO:             pycaret: 3.0.0rc6
2023-01-09 00:03:08,129:INFO:             IPython: 8.8.0
2023-01-09 00:03:08,129:INFO:          ipywidgets: 8.0.4
2023-01-09 00:03:08,129:INFO:                tqdm: 4.64.1
2023-01-09 00:03:08,129:INFO:               numpy: 1.22.4
2023-01-09 00:03:08,129:INFO:              pandas: 1.5.2
2023-01-09 00:03:08,129:INFO:              jinja2: 3.1.2
2023-01-09 00:03:08,129:INFO:               scipy: 1.9.3
2023-01-09 00:03:08,129:INFO:              joblib: 1.2.0
2023-01-09 00:03:08,129:INFO:             sklearn: 1.1.3
2023-01-09 00:03:08,129:INFO:                pyod: 1.0.7
2023-01-09 00:03:08,129:INFO:            imblearn: 0.10.1
2023-01-09 00:03:08,130:INFO:   category_encoders: 2.5.1.post0
2023-01-09 00:03:08,130:INFO:            lightgbm: 3.3.4
2023-01-09 00:03:08,130:INFO:               numba: 0.56.4
2023-01-09 00:03:08,130:INFO:            requests: 2.28.1
2023-01-09 00:03:08,130:INFO:          matplotlib: 3.6.2
2023-01-09 00:03:08,130:INFO:          scikitplot: 0.3.7
2023-01-09 00:03:08,130:INFO:         yellowbrick: 1.5
2023-01-09 00:03:08,130:INFO:              plotly: 5.11.0
2023-01-09 00:03:08,130:INFO:             kaleido: 0.2.1
2023-01-09 00:03:08,130:INFO:         statsmodels: 0.13.5
2023-01-09 00:03:08,130:INFO:              sktime: 0.14.1
2023-01-09 00:03:08,130:INFO:               tbats: 1.1.2
2023-01-09 00:03:08,130:INFO:            pmdarima: 2.0.2
2023-01-09 00:03:08,130:INFO:              psutil: 5.9.0
2023-01-09 00:03:08,130:INFO:PyCaret optional dependencies:
2023-01-09 00:03:08,130:INFO:                shap: Not installed
2023-01-09 00:03:08,130:INFO:           interpret: Not installed
2023-01-09 00:03:08,130:INFO:                umap: Not installed
2023-01-09 00:03:08,130:INFO:    pandas_profiling: 3.6.2
2023-01-09 00:03:08,130:INFO:  explainerdashboard: Not installed
2023-01-09 00:03:08,131:INFO:             autoviz: Not installed
2023-01-09 00:03:08,131:INFO:           fairlearn: Not installed
2023-01-09 00:03:08,131:INFO:             xgboost: Not installed
2023-01-09 00:03:08,131:INFO:            catboost: Not installed
2023-01-09 00:03:08,131:INFO:              kmodes: Not installed
2023-01-09 00:03:08,131:INFO:             mlxtend: Not installed
2023-01-09 00:03:08,131:INFO:       statsforecast: Not installed
2023-01-09 00:03:08,131:INFO:        tune_sklearn: Not installed
2023-01-09 00:03:08,131:INFO:                 ray: Not installed
2023-01-09 00:03:08,131:INFO:            hyperopt: Not installed
2023-01-09 00:03:08,131:INFO:              optuna: Not installed
2023-01-09 00:03:08,131:INFO:               skopt: Not installed
2023-01-09 00:03:08,131:INFO:              mlflow: Not installed
2023-01-09 00:03:08,131:INFO:              gradio: Not installed
2023-01-09 00:03:08,131:INFO:             fastapi: Not installed
2023-01-09 00:03:08,131:INFO:             uvicorn: Not installed
2023-01-09 00:03:08,131:INFO:              m2cgen: Not installed
2023-01-09 00:03:08,131:INFO:           evidently: Not installed
2023-01-09 00:03:08,131:INFO:                nltk: Not installed
2023-01-09 00:03:08,132:INFO:            pyLDAvis: Not installed
2023-01-09 00:03:08,132:INFO:              gensim: Not installed
2023-01-09 00:03:08,132:INFO:               spacy: Not installed
2023-01-09 00:03:08,132:INFO:           wordcloud: Not installed
2023-01-09 00:03:08,132:INFO:            textblob: Not installed
2023-01-09 00:03:08,132:INFO:               fugue: Not installed
2023-01-09 00:03:08,132:INFO:           streamlit: 1.16.0
2023-01-09 00:03:08,132:INFO:             prophet: Not installed
2023-01-09 00:03:08,132:INFO:None
2023-01-09 00:03:08,132:INFO:Set up data.
2023-01-09 00:03:08,149:INFO:Set up train/test split.
2023-01-09 00:03:08,156:INFO:Set up index.
2023-01-09 00:03:08,156:INFO:Set up folding strategy.
2023-01-09 00:03:08,156:INFO:Assigning column types.
2023-01-09 00:03:08,161:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 00:03:08,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:03:08,223:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:03:08,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,288:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:03:08,289:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:03:08,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,315:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 00:03:08,353:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:03:08,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,419:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:03:08,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,444:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 00:03:08,506:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,506:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:08,566:INFO:Preparing preprocessing pipeline...
2023-01-09 00:03:08,567:INFO:Set up label encoding.
2023-01-09 00:03:08,567:INFO:Set up simple imputation.
2023-01-09 00:03:08,643:INFO:Finished creating preprocessing pipeline.
2023-01-09 00:03:08,646:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'con...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 00:03:08,646:INFO:Creating final display dataframe.
2023-01-09 00:03:08,955:INFO:Setup _display_container:                     Description             Value
0                    Session id              5899
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 33)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                32
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              abc4
2023-01-09 00:03:09,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:09,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:09,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:09,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:03:09,081:INFO:setup() successfully completed in 0.96s...............
2023-01-09 00:03:09,085:INFO:Initializing compare_models()
2023-01-09 00:03:09,085:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 00:03:09,085:INFO:Checking exceptions
2023-01-09 00:03:09,088:INFO:Preparing display monitor
2023-01-09 00:03:09,091:INFO:Initializing Logistic Regression
2023-01-09 00:03:09,091:INFO:Total runtime is 0.0 minutes
2023-01-09 00:03:09,091:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:09,091:INFO:Initializing create_model()
2023-01-09 00:03:09,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:09,091:INFO:Checking exceptions
2023-01-09 00:03:09,091:INFO:Importing libraries
2023-01-09 00:03:09,091:INFO:Copying training dataset
2023-01-09 00:03:09,093:INFO:Defining folds
2023-01-09 00:03:09,093:INFO:Declaring metric variables
2023-01-09 00:03:09,094:INFO:Importing untrained model
2023-01-09 00:03:09,094:INFO:Logistic Regression Imported successfully
2023-01-09 00:03:09,094:INFO:Starting cross validation
2023-01-09 00:03:09,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:09,892:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:09,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:09,924:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:09,933:INFO:Calculating mean and std
2023-01-09 00:03:09,934:INFO:Creating metrics dataframe
2023-01-09 00:03:09,937:INFO:Uploading results into container
2023-01-09 00:03:09,937:INFO:Uploading model into container now
2023-01-09 00:03:09,938:INFO:_master_model_container: 1
2023-01-09 00:03:09,938:INFO:_display_container: 2
2023-01-09 00:03:09,938:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5899, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 00:03:09,938:INFO:create_model() successfully completed......................................
2023-01-09 00:03:10,014:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:10,014:INFO:Creating metrics dataframe
2023-01-09 00:03:10,017:INFO:Initializing K Neighbors Classifier
2023-01-09 00:03:10,017:INFO:Total runtime is 0.01544419527053833 minutes
2023-01-09 00:03:10,017:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:10,018:INFO:Initializing create_model()
2023-01-09 00:03:10,018:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:10,018:INFO:Checking exceptions
2023-01-09 00:03:10,018:INFO:Importing libraries
2023-01-09 00:03:10,018:INFO:Copying training dataset
2023-01-09 00:03:10,019:INFO:Defining folds
2023-01-09 00:03:10,020:INFO:Declaring metric variables
2023-01-09 00:03:10,020:INFO:Importing untrained model
2023-01-09 00:03:10,020:INFO:K Neighbors Classifier Imported successfully
2023-01-09 00:03:10,020:INFO:Starting cross validation
2023-01-09 00:03:10,021:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:10,286:INFO:Calculating mean and std
2023-01-09 00:03:10,287:INFO:Creating metrics dataframe
2023-01-09 00:03:10,290:INFO:Uploading results into container
2023-01-09 00:03:10,290:INFO:Uploading model into container now
2023-01-09 00:03:10,291:INFO:_master_model_container: 2
2023-01-09 00:03:10,291:INFO:_display_container: 2
2023-01-09 00:03:10,291:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:03:10,291:INFO:create_model() successfully completed......................................
2023-01-09 00:03:10,371:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:10,371:INFO:Creating metrics dataframe
2023-01-09 00:03:10,375:INFO:Initializing Naive Bayes
2023-01-09 00:03:10,375:INFO:Total runtime is 0.021401643753051758 minutes
2023-01-09 00:03:10,375:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:10,376:INFO:Initializing create_model()
2023-01-09 00:03:10,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:10,376:INFO:Checking exceptions
2023-01-09 00:03:10,376:INFO:Importing libraries
2023-01-09 00:03:10,376:INFO:Copying training dataset
2023-01-09 00:03:10,379:INFO:Defining folds
2023-01-09 00:03:10,379:INFO:Declaring metric variables
2023-01-09 00:03:10,379:INFO:Importing untrained model
2023-01-09 00:03:10,379:INFO:Naive Bayes Imported successfully
2023-01-09 00:03:10,379:INFO:Starting cross validation
2023-01-09 00:03:10,380:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:10,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:10,466:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:10,471:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:10,479:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:10,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:10,483:INFO:Calculating mean and std
2023-01-09 00:03:10,485:INFO:Creating metrics dataframe
2023-01-09 00:03:10,487:INFO:Uploading results into container
2023-01-09 00:03:10,488:INFO:Uploading model into container now
2023-01-09 00:03:10,488:INFO:_master_model_container: 3
2023-01-09 00:03:10,488:INFO:_display_container: 2
2023-01-09 00:03:10,488:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 00:03:10,488:INFO:create_model() successfully completed......................................
2023-01-09 00:03:10,562:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:10,562:INFO:Creating metrics dataframe
2023-01-09 00:03:10,565:INFO:Initializing Decision Tree Classifier
2023-01-09 00:03:10,565:INFO:Total runtime is 0.02458162307739258 minutes
2023-01-09 00:03:10,565:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:10,565:INFO:Initializing create_model()
2023-01-09 00:03:10,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:10,565:INFO:Checking exceptions
2023-01-09 00:03:10,565:INFO:Importing libraries
2023-01-09 00:03:10,565:INFO:Copying training dataset
2023-01-09 00:03:10,567:INFO:Defining folds
2023-01-09 00:03:10,567:INFO:Declaring metric variables
2023-01-09 00:03:10,568:INFO:Importing untrained model
2023-01-09 00:03:10,568:INFO:Decision Tree Classifier Imported successfully
2023-01-09 00:03:10,568:INFO:Starting cross validation
2023-01-09 00:03:10,569:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:10,681:INFO:Calculating mean and std
2023-01-09 00:03:10,681:INFO:Creating metrics dataframe
2023-01-09 00:03:10,684:INFO:Uploading results into container
2023-01-09 00:03:10,685:INFO:Uploading model into container now
2023-01-09 00:03:10,685:INFO:_master_model_container: 4
2023-01-09 00:03:10,685:INFO:_display_container: 2
2023-01-09 00:03:10,685:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5899, splitter='best')
2023-01-09 00:03:10,685:INFO:create_model() successfully completed......................................
2023-01-09 00:03:10,763:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:10,763:INFO:Creating metrics dataframe
2023-01-09 00:03:10,767:INFO:Initializing SVM - Linear Kernel
2023-01-09 00:03:10,767:INFO:Total runtime is 0.027946182092030845 minutes
2023-01-09 00:03:10,767:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:10,767:INFO:Initializing create_model()
2023-01-09 00:03:10,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:10,767:INFO:Checking exceptions
2023-01-09 00:03:10,767:INFO:Importing libraries
2023-01-09 00:03:10,767:INFO:Copying training dataset
2023-01-09 00:03:10,769:INFO:Defining folds
2023-01-09 00:03:10,769:INFO:Declaring metric variables
2023-01-09 00:03:10,769:INFO:Importing untrained model
2023-01-09 00:03:10,770:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 00:03:10,770:INFO:Starting cross validation
2023-01-09 00:03:10,771:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:10,838:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:10,840:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:10,845:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:10,849:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:10,862:INFO:Calculating mean and std
2023-01-09 00:03:10,862:INFO:Creating metrics dataframe
2023-01-09 00:03:10,865:INFO:Uploading results into container
2023-01-09 00:03:10,866:INFO:Uploading model into container now
2023-01-09 00:03:10,866:INFO:_master_model_container: 5
2023-01-09 00:03:10,866:INFO:_display_container: 2
2023-01-09 00:03:10,867:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5899, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 00:03:10,867:INFO:create_model() successfully completed......................................
2023-01-09 00:03:10,943:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:10,943:INFO:Creating metrics dataframe
2023-01-09 00:03:10,947:INFO:Initializing Ridge Classifier
2023-01-09 00:03:10,947:INFO:Total runtime is 0.030939451853434247 minutes
2023-01-09 00:03:10,947:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:10,948:INFO:Initializing create_model()
2023-01-09 00:03:10,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:10,948:INFO:Checking exceptions
2023-01-09 00:03:10,948:INFO:Importing libraries
2023-01-09 00:03:10,948:INFO:Copying training dataset
2023-01-09 00:03:10,950:INFO:Defining folds
2023-01-09 00:03:10,950:INFO:Declaring metric variables
2023-01-09 00:03:10,950:INFO:Importing untrained model
2023-01-09 00:03:10,950:INFO:Ridge Classifier Imported successfully
2023-01-09 00:03:10,950:INFO:Starting cross validation
2023-01-09 00:03:10,951:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:10,990:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.61561e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 00:03:10,990:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.34602e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 00:03:10,992:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.98451e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 00:03:10,994:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.41529e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 00:03:10,999:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.62206e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 00:03:11,007:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.41002e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 00:03:11,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.72063e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 00:03:11,009:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.72328e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 00:03:11,014:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.70787e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 00:03:11,023:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.9159e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 00:03:11,038:INFO:Calculating mean and std
2023-01-09 00:03:11,039:INFO:Creating metrics dataframe
2023-01-09 00:03:11,041:INFO:Uploading results into container
2023-01-09 00:03:11,042:INFO:Uploading model into container now
2023-01-09 00:03:11,042:INFO:_master_model_container: 6
2023-01-09 00:03:11,042:INFO:_display_container: 2
2023-01-09 00:03:11,042:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=5899, solver='auto', tol=0.001)
2023-01-09 00:03:11,043:INFO:create_model() successfully completed......................................
2023-01-09 00:03:11,115:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:11,115:INFO:Creating metrics dataframe
2023-01-09 00:03:11,119:INFO:Initializing Random Forest Classifier
2023-01-09 00:03:11,119:INFO:Total runtime is 0.03380597829818726 minutes
2023-01-09 00:03:11,119:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:11,119:INFO:Initializing create_model()
2023-01-09 00:03:11,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:11,119:INFO:Checking exceptions
2023-01-09 00:03:11,119:INFO:Importing libraries
2023-01-09 00:03:11,119:INFO:Copying training dataset
2023-01-09 00:03:11,121:INFO:Defining folds
2023-01-09 00:03:11,121:INFO:Declaring metric variables
2023-01-09 00:03:11,121:INFO:Importing untrained model
2023-01-09 00:03:11,121:INFO:Random Forest Classifier Imported successfully
2023-01-09 00:03:11,122:INFO:Starting cross validation
2023-01-09 00:03:11,122:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:11,612:INFO:Calculating mean and std
2023-01-09 00:03:11,613:INFO:Creating metrics dataframe
2023-01-09 00:03:11,616:INFO:Uploading results into container
2023-01-09 00:03:11,616:INFO:Uploading model into container now
2023-01-09 00:03:11,616:INFO:_master_model_container: 7
2023-01-09 00:03:11,616:INFO:_display_container: 2
2023-01-09 00:03:11,617:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5899, verbose=0, warm_start=False)
2023-01-09 00:03:11,617:INFO:create_model() successfully completed......................................
2023-01-09 00:03:11,695:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:11,696:INFO:Creating metrics dataframe
2023-01-09 00:03:11,700:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 00:03:11,700:INFO:Total runtime is 0.043496112028757736 minutes
2023-01-09 00:03:11,700:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:11,700:INFO:Initializing create_model()
2023-01-09 00:03:11,700:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:11,700:INFO:Checking exceptions
2023-01-09 00:03:11,700:INFO:Importing libraries
2023-01-09 00:03:11,700:INFO:Copying training dataset
2023-01-09 00:03:11,702:INFO:Defining folds
2023-01-09 00:03:11,702:INFO:Declaring metric variables
2023-01-09 00:03:11,702:INFO:Importing untrained model
2023-01-09 00:03:11,703:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 00:03:11,703:INFO:Starting cross validation
2023-01-09 00:03:11,704:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:11,815:INFO:Calculating mean and std
2023-01-09 00:03:11,816:INFO:Creating metrics dataframe
2023-01-09 00:03:11,819:INFO:Uploading results into container
2023-01-09 00:03:11,820:INFO:Uploading model into container now
2023-01-09 00:03:11,820:INFO:_master_model_container: 8
2023-01-09 00:03:11,820:INFO:_display_container: 2
2023-01-09 00:03:11,820:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:03:11,820:INFO:create_model() successfully completed......................................
2023-01-09 00:03:11,894:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:11,894:INFO:Creating metrics dataframe
2023-01-09 00:03:11,899:INFO:Initializing Ada Boost Classifier
2023-01-09 00:03:11,899:INFO:Total runtime is 0.04680570761362712 minutes
2023-01-09 00:03:11,899:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:11,899:INFO:Initializing create_model()
2023-01-09 00:03:11,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:11,899:INFO:Checking exceptions
2023-01-09 00:03:11,899:INFO:Importing libraries
2023-01-09 00:03:11,899:INFO:Copying training dataset
2023-01-09 00:03:11,901:INFO:Defining folds
2023-01-09 00:03:11,901:INFO:Declaring metric variables
2023-01-09 00:03:11,901:INFO:Importing untrained model
2023-01-09 00:03:11,901:INFO:Ada Boost Classifier Imported successfully
2023-01-09 00:03:11,902:INFO:Starting cross validation
2023-01-09 00:03:11,902:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:12,230:INFO:Calculating mean and std
2023-01-09 00:03:12,230:INFO:Creating metrics dataframe
2023-01-09 00:03:12,233:INFO:Uploading results into container
2023-01-09 00:03:12,233:INFO:Uploading model into container now
2023-01-09 00:03:12,234:INFO:_master_model_container: 9
2023-01-09 00:03:12,234:INFO:_display_container: 2
2023-01-09 00:03:12,234:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5899)
2023-01-09 00:03:12,234:INFO:create_model() successfully completed......................................
2023-01-09 00:03:12,308:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:12,308:INFO:Creating metrics dataframe
2023-01-09 00:03:12,313:INFO:Initializing Gradient Boosting Classifier
2023-01-09 00:03:12,313:INFO:Total runtime is 0.053710043430328376 minutes
2023-01-09 00:03:12,313:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:12,313:INFO:Initializing create_model()
2023-01-09 00:03:12,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:12,313:INFO:Checking exceptions
2023-01-09 00:03:12,313:INFO:Importing libraries
2023-01-09 00:03:12,313:INFO:Copying training dataset
2023-01-09 00:03:12,315:INFO:Defining folds
2023-01-09 00:03:12,315:INFO:Declaring metric variables
2023-01-09 00:03:12,315:INFO:Importing untrained model
2023-01-09 00:03:12,316:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 00:03:12,316:INFO:Starting cross validation
2023-01-09 00:03:12,317:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:12,877:INFO:Calculating mean and std
2023-01-09 00:03:12,878:INFO:Creating metrics dataframe
2023-01-09 00:03:12,881:INFO:Uploading results into container
2023-01-09 00:03:12,881:INFO:Uploading model into container now
2023-01-09 00:03:12,881:INFO:_master_model_container: 10
2023-01-09 00:03:12,881:INFO:_display_container: 2
2023-01-09 00:03:12,882:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5899, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 00:03:12,882:INFO:create_model() successfully completed......................................
2023-01-09 00:03:12,953:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:12,954:INFO:Creating metrics dataframe
2023-01-09 00:03:12,957:INFO:Initializing Linear Discriminant Analysis
2023-01-09 00:03:12,958:INFO:Total runtime is 0.06444799900054932 minutes
2023-01-09 00:03:12,958:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:12,958:INFO:Initializing create_model()
2023-01-09 00:03:12,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:12,958:INFO:Checking exceptions
2023-01-09 00:03:12,958:INFO:Importing libraries
2023-01-09 00:03:12,958:INFO:Copying training dataset
2023-01-09 00:03:12,960:INFO:Defining folds
2023-01-09 00:03:12,960:INFO:Declaring metric variables
2023-01-09 00:03:12,960:INFO:Importing untrained model
2023-01-09 00:03:12,960:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 00:03:12,961:INFO:Starting cross validation
2023-01-09 00:03:12,961:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:13,075:INFO:Calculating mean and std
2023-01-09 00:03:13,075:INFO:Creating metrics dataframe
2023-01-09 00:03:13,079:INFO:Uploading results into container
2023-01-09 00:03:13,079:INFO:Uploading model into container now
2023-01-09 00:03:13,079:INFO:_master_model_container: 11
2023-01-09 00:03:13,079:INFO:_display_container: 2
2023-01-09 00:03:13,080:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:03:13,080:INFO:create_model() successfully completed......................................
2023-01-09 00:03:13,159:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:13,159:INFO:Creating metrics dataframe
2023-01-09 00:03:13,164:INFO:Initializing Extra Trees Classifier
2023-01-09 00:03:13,164:INFO:Total runtime is 0.06789040565490723 minutes
2023-01-09 00:03:13,164:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:13,165:INFO:Initializing create_model()
2023-01-09 00:03:13,165:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:13,165:INFO:Checking exceptions
2023-01-09 00:03:13,165:INFO:Importing libraries
2023-01-09 00:03:13,165:INFO:Copying training dataset
2023-01-09 00:03:13,167:INFO:Defining folds
2023-01-09 00:03:13,167:INFO:Declaring metric variables
2023-01-09 00:03:13,167:INFO:Importing untrained model
2023-01-09 00:03:13,167:INFO:Extra Trees Classifier Imported successfully
2023-01-09 00:03:13,167:INFO:Starting cross validation
2023-01-09 00:03:13,168:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:13,565:INFO:Calculating mean and std
2023-01-09 00:03:13,565:INFO:Creating metrics dataframe
2023-01-09 00:03:13,568:INFO:Uploading results into container
2023-01-09 00:03:13,568:INFO:Uploading model into container now
2023-01-09 00:03:13,569:INFO:_master_model_container: 12
2023-01-09 00:03:13,569:INFO:_display_container: 2
2023-01-09 00:03:13,569:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5899, verbose=0, warm_start=False)
2023-01-09 00:03:13,569:INFO:create_model() successfully completed......................................
2023-01-09 00:03:13,647:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:13,648:INFO:Creating metrics dataframe
2023-01-09 00:03:13,652:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 00:03:13,652:INFO:Total runtime is 0.07602723836898803 minutes
2023-01-09 00:03:13,652:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:13,652:INFO:Initializing create_model()
2023-01-09 00:03:13,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:13,653:INFO:Checking exceptions
2023-01-09 00:03:13,653:INFO:Importing libraries
2023-01-09 00:03:13,653:INFO:Copying training dataset
2023-01-09 00:03:13,655:INFO:Defining folds
2023-01-09 00:03:13,655:INFO:Declaring metric variables
2023-01-09 00:03:13,655:INFO:Importing untrained model
2023-01-09 00:03:13,655:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 00:03:13,655:INFO:Starting cross validation
2023-01-09 00:03:13,656:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:13,908:INFO:Calculating mean and std
2023-01-09 00:03:13,909:INFO:Creating metrics dataframe
2023-01-09 00:03:13,912:INFO:Uploading results into container
2023-01-09 00:03:13,912:INFO:Uploading model into container now
2023-01-09 00:03:13,912:INFO:_master_model_container: 13
2023-01-09 00:03:13,912:INFO:_display_container: 2
2023-01-09 00:03:13,913:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5899, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 00:03:13,913:INFO:create_model() successfully completed......................................
2023-01-09 00:03:13,988:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:13,988:INFO:Creating metrics dataframe
2023-01-09 00:03:13,994:INFO:Initializing Dummy Classifier
2023-01-09 00:03:13,994:INFO:Total runtime is 0.08172789812088012 minutes
2023-01-09 00:03:13,994:INFO:SubProcess create_model() called ==================================
2023-01-09 00:03:13,994:INFO:Initializing create_model()
2023-01-09 00:03:13,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3B7FDF10>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:13,994:INFO:Checking exceptions
2023-01-09 00:03:13,994:INFO:Importing libraries
2023-01-09 00:03:13,994:INFO:Copying training dataset
2023-01-09 00:03:13,996:INFO:Defining folds
2023-01-09 00:03:13,996:INFO:Declaring metric variables
2023-01-09 00:03:13,996:INFO:Importing untrained model
2023-01-09 00:03:13,996:INFO:Dummy Classifier Imported successfully
2023-01-09 00:03:13,997:INFO:Starting cross validation
2023-01-09 00:03:13,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:03:14,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:14,072:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:14,077:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:14,081:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:14,083:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:14,083:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:14,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:14,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:14,091:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:03:14,094:INFO:Calculating mean and std
2023-01-09 00:03:14,095:INFO:Creating metrics dataframe
2023-01-09 00:03:14,097:INFO:Uploading results into container
2023-01-09 00:03:14,098:INFO:Uploading model into container now
2023-01-09 00:03:14,098:INFO:_master_model_container: 14
2023-01-09 00:03:14,098:INFO:_display_container: 2
2023-01-09 00:03:14,098:INFO:DummyClassifier(constant=None, random_state=5899, strategy='prior')
2023-01-09 00:03:14,098:INFO:create_model() successfully completed......................................
2023-01-09 00:03:14,174:INFO:SubProcess create_model() end ==================================
2023-01-09 00:03:14,174:INFO:Creating metrics dataframe
2023-01-09 00:03:14,179:INFO:Initializing create_model()
2023-01-09 00:03:14,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3BA75E50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5899, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:03:14,179:INFO:Checking exceptions
2023-01-09 00:03:14,180:INFO:Importing libraries
2023-01-09 00:03:14,180:INFO:Copying training dataset
2023-01-09 00:03:14,182:INFO:Defining folds
2023-01-09 00:03:14,182:INFO:Declaring metric variables
2023-01-09 00:03:14,182:INFO:Importing untrained model
2023-01-09 00:03:14,183:INFO:Declaring custom model
2023-01-09 00:03:14,183:INFO:Extra Trees Classifier Imported successfully
2023-01-09 00:03:14,184:INFO:Cross validation set to False
2023-01-09 00:03:14,184:INFO:Fitting Model
2023-01-09 00:03:14,310:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5899, verbose=0, warm_start=False)
2023-01-09 00:03:14,310:INFO:create_model() successfully completed......................................
2023-01-09 00:03:14,397:INFO:_master_model_container: 14
2023-01-09 00:03:14,397:INFO:_display_container: 2
2023-01-09 00:03:14,398:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5899, verbose=0, warm_start=False)
2023-01-09 00:03:14,398:INFO:compare_models() successfully completed......................................
2023-01-09 00:03:14,404:INFO:Initializing save_model()
2023-01-09 00:03:14,404:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5899, verbose=0, warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'con...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-09 00:03:14,405:INFO:Adding model into prep_pipe
2023-01-09 00:03:14,460:INFO:best_model.pkl saved in current working directory
2023-01-09 00:03:14,468:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'con...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=5899,
                                      verbose=0, warm_start=False))],
         verbose=False)
2023-01-09 00:03:14,469:INFO:save_model() successfully completed......................................
2023-01-09 00:07:56,329:INFO:Initializing load_model()
2023-01-09 00:07:56,329:INFO:load_model(model_name=trained_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:08:13,383:INFO:Initializing load_model()
2023-01-09 00:08:13,383:INFO:load_model(model_name=trained_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:08:18,949:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\multimethod\__init__.py:315: FutureWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`
  return func(*args, **kwargs)

2023-01-09 00:24:06,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 00:24:06,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 00:24:06,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 00:24:06,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 00:24:07,021:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-09 00:26:22,108:INFO:PyCaret ClassificationExperiment
2023-01-09 00:26:22,108:INFO:Logging name: clf-default-name
2023-01-09 00:26:22,108:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 00:26:22,108:INFO:version 3.0.0.rc6
2023-01-09 00:26:22,108:INFO:Initializing setup()
2023-01-09 00:26:22,108:INFO:self.USI: ab8c
2023-01-09 00:26:22,108:INFO:self._variable_keys: {'fold_groups_param', 'log_plots_param', 'is_multiclass', 'fold_generator', 'fix_imbalance', 'data', 'idx', 'y_train', 'pipeline', 'memory', 'target_param', 'fold_shuffle_param', 'gpu_param', 'X_test', 'y_test', 'gpu_n_jobs_param', 'USI', 'y', 'logging_param', 'html_param', 'seed', '_ml_usecase', 'X', 'n_jobs_param', '_available_plots', 'exp_name_log', 'exp_id', 'X_train'}
2023-01-09 00:26:22,109:INFO:Checking environment
2023-01-09 00:26:22,109:INFO:python_version: 3.9.15
2023-01-09 00:26:22,109:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-09 00:26:22,109:INFO:machine: AMD64
2023-01-09 00:26:22,122:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-09 00:26:22,122:INFO:Memory: svmem(total=17010110464, available=2657570816, percent=84.4, used=14352539648, free=2657570816)
2023-01-09 00:26:22,122:INFO:Physical Core: 6
2023-01-09 00:26:22,122:INFO:Logical Core: 12
2023-01-09 00:26:22,122:INFO:Checking libraries
2023-01-09 00:26:22,123:INFO:System:
2023-01-09 00:26:22,123:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-09 00:26:22,123:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-09 00:26:22,123:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-09 00:26:22,123:INFO:PyCaret required dependencies:
2023-01-09 00:26:22,123:INFO:                 pip: 22.3.1
2023-01-09 00:26:22,123:INFO:          setuptools: 65.6.3
2023-01-09 00:26:22,123:INFO:             pycaret: 3.0.0rc6
2023-01-09 00:26:22,123:INFO:             IPython: 8.8.0
2023-01-09 00:26:22,123:INFO:          ipywidgets: 8.0.4
2023-01-09 00:26:22,123:INFO:                tqdm: 4.64.1
2023-01-09 00:26:22,123:INFO:               numpy: 1.22.4
2023-01-09 00:26:22,123:INFO:              pandas: 1.5.2
2023-01-09 00:26:22,124:INFO:              jinja2: 3.1.2
2023-01-09 00:26:22,124:INFO:               scipy: 1.9.3
2023-01-09 00:26:22,124:INFO:              joblib: 1.2.0
2023-01-09 00:26:22,124:INFO:             sklearn: 1.1.3
2023-01-09 00:26:22,124:INFO:                pyod: 1.0.7
2023-01-09 00:26:22,124:INFO:            imblearn: 0.10.1
2023-01-09 00:26:22,124:INFO:   category_encoders: 2.5.1.post0
2023-01-09 00:26:22,124:INFO:            lightgbm: 3.3.4
2023-01-09 00:26:22,124:INFO:               numba: 0.56.4
2023-01-09 00:26:22,124:INFO:            requests: 2.28.1
2023-01-09 00:26:22,124:INFO:          matplotlib: 3.6.2
2023-01-09 00:26:22,124:INFO:          scikitplot: 0.3.7
2023-01-09 00:26:22,124:INFO:         yellowbrick: 1.5
2023-01-09 00:26:22,124:INFO:              plotly: 5.11.0
2023-01-09 00:26:22,124:INFO:             kaleido: 0.2.1
2023-01-09 00:26:22,124:INFO:         statsmodels: 0.13.5
2023-01-09 00:26:22,124:INFO:              sktime: 0.14.1
2023-01-09 00:26:22,124:INFO:               tbats: 1.1.2
2023-01-09 00:26:22,124:INFO:            pmdarima: 2.0.2
2023-01-09 00:26:22,124:INFO:              psutil: 5.9.0
2023-01-09 00:26:22,124:INFO:PyCaret optional dependencies:
2023-01-09 00:26:22,140:INFO:                shap: Not installed
2023-01-09 00:26:22,140:INFO:           interpret: Not installed
2023-01-09 00:26:22,140:INFO:                umap: Not installed
2023-01-09 00:26:22,140:INFO:    pandas_profiling: 3.6.2
2023-01-09 00:26:22,140:INFO:  explainerdashboard: Not installed
2023-01-09 00:26:22,140:INFO:             autoviz: Not installed
2023-01-09 00:26:22,140:INFO:           fairlearn: Not installed
2023-01-09 00:26:22,140:INFO:             xgboost: Not installed
2023-01-09 00:26:22,140:INFO:            catboost: Not installed
2023-01-09 00:26:22,140:INFO:              kmodes: Not installed
2023-01-09 00:26:22,140:INFO:             mlxtend: Not installed
2023-01-09 00:26:22,140:INFO:       statsforecast: Not installed
2023-01-09 00:26:22,140:INFO:        tune_sklearn: Not installed
2023-01-09 00:26:22,140:INFO:                 ray: Not installed
2023-01-09 00:26:22,140:INFO:            hyperopt: Not installed
2023-01-09 00:26:22,140:INFO:              optuna: Not installed
2023-01-09 00:26:22,140:INFO:               skopt: Not installed
2023-01-09 00:26:22,140:INFO:              mlflow: Not installed
2023-01-09 00:26:22,141:INFO:              gradio: Not installed
2023-01-09 00:26:22,141:INFO:             fastapi: Not installed
2023-01-09 00:26:22,141:INFO:             uvicorn: Not installed
2023-01-09 00:26:22,141:INFO:              m2cgen: Not installed
2023-01-09 00:26:22,141:INFO:           evidently: Not installed
2023-01-09 00:26:22,141:INFO:                nltk: Not installed
2023-01-09 00:26:22,141:INFO:            pyLDAvis: Not installed
2023-01-09 00:26:22,141:INFO:              gensim: Not installed
2023-01-09 00:26:22,141:INFO:               spacy: Not installed
2023-01-09 00:26:22,141:INFO:           wordcloud: Not installed
2023-01-09 00:26:22,141:INFO:            textblob: Not installed
2023-01-09 00:26:22,141:INFO:               fugue: Not installed
2023-01-09 00:26:22,141:INFO:           streamlit: 1.16.0
2023-01-09 00:26:22,141:INFO:             prophet: Not installed
2023-01-09 00:26:22,141:INFO:None
2023-01-09 00:26:22,141:INFO:Set up data.
2023-01-09 00:26:22,145:INFO:Set up train/test split.
2023-01-09 00:26:22,148:INFO:Set up index.
2023-01-09 00:26:22,148:INFO:Set up folding strategy.
2023-01-09 00:26:22,148:INFO:Assigning column types.
2023-01-09 00:26:22,151:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 00:26:22,191:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:26:22,193:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:26:22,226:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,282:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:26:22,283:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:26:22,311:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,312:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 00:26:22,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:26:22,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,376:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,417:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:26:22,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,442:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 00:26:22,505:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,569:INFO:Preparing preprocessing pipeline...
2023-01-09 00:26:22,570:INFO:Set up label encoding.
2023-01-09 00:26:22,570:INFO:Set up simple imputation.
2023-01-09 00:26:22,612:INFO:Finished creating preprocessing pipeline.
2023-01-09 00:26:22,616:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 00:26:22,616:INFO:Creating final display dataframe.
2023-01-09 00:26:22,795:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8292
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               ab8c
2023-01-09 00:26:22,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:26:22,936:INFO:setup() successfully completed in 0.83s...............
2023-01-09 00:26:22,938:INFO:Initializing compare_models()
2023-01-09 00:26:22,938:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 00:26:22,938:INFO:Checking exceptions
2023-01-09 00:26:22,941:INFO:Preparing display monitor
2023-01-09 00:26:22,944:INFO:Initializing Logistic Regression
2023-01-09 00:26:22,944:INFO:Total runtime is 0.0 minutes
2023-01-09 00:26:22,945:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:22,945:INFO:Initializing create_model()
2023-01-09 00:26:22,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:22,945:INFO:Checking exceptions
2023-01-09 00:26:22,945:INFO:Importing libraries
2023-01-09 00:26:22,945:INFO:Copying training dataset
2023-01-09 00:26:22,947:INFO:Defining folds
2023-01-09 00:26:22,947:INFO:Declaring metric variables
2023-01-09 00:26:22,947:INFO:Importing untrained model
2023-01-09 00:26:22,948:INFO:Logistic Regression Imported successfully
2023-01-09 00:26:22,948:INFO:Starting cross validation
2023-01-09 00:26:22,948:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:28,802:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,805:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,808:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,820:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,823:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,826:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,831:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,832:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,834:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,835:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,836:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,841:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,844:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,847:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,854:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,859:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,859:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,864:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,864:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,866:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,866:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,867:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,869:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,869:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,870:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:28,875:INFO:Calculating mean and std
2023-01-09 00:26:28,876:INFO:Creating metrics dataframe
2023-01-09 00:26:28,884:INFO:Uploading results into container
2023-01-09 00:26:28,886:INFO:Uploading model into container now
2023-01-09 00:26:28,886:INFO:_master_model_container: 1
2023-01-09 00:26:28,887:INFO:_display_container: 2
2023-01-09 00:26:28,887:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8292, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 00:26:28,887:INFO:create_model() successfully completed......................................
2023-01-09 00:26:29,004:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:29,004:INFO:Creating metrics dataframe
2023-01-09 00:26:29,009:INFO:Initializing K Neighbors Classifier
2023-01-09 00:26:29,009:INFO:Total runtime is 0.10107770760854086 minutes
2023-01-09 00:26:29,009:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:29,010:INFO:Initializing create_model()
2023-01-09 00:26:29,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:29,010:INFO:Checking exceptions
2023-01-09 00:26:29,010:INFO:Importing libraries
2023-01-09 00:26:29,010:INFO:Copying training dataset
2023-01-09 00:26:29,013:INFO:Defining folds
2023-01-09 00:26:29,013:INFO:Declaring metric variables
2023-01-09 00:26:29,013:INFO:Importing untrained model
2023-01-09 00:26:29,013:INFO:K Neighbors Classifier Imported successfully
2023-01-09 00:26:29,014:INFO:Starting cross validation
2023-01-09 00:26:29,015:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:29,147:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,150:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,153:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,153:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,158:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,164:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,165:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,166:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,167:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,170:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,170:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,172:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,173:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,175:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,178:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,178:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,180:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,183:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:29,184:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,729:INFO:Calculating mean and std
2023-01-09 00:26:30,729:INFO:Creating metrics dataframe
2023-01-09 00:26:30,733:INFO:Uploading results into container
2023-01-09 00:26:30,733:INFO:Uploading model into container now
2023-01-09 00:26:30,734:INFO:_master_model_container: 2
2023-01-09 00:26:30,734:INFO:_display_container: 2
2023-01-09 00:26:30,734:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:26:30,734:INFO:create_model() successfully completed......................................
2023-01-09 00:26:30,814:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:30,814:INFO:Creating metrics dataframe
2023-01-09 00:26:30,818:INFO:Initializing Naive Bayes
2023-01-09 00:26:30,818:INFO:Total runtime is 0.1312285304069519 minutes
2023-01-09 00:26:30,819:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:30,819:INFO:Initializing create_model()
2023-01-09 00:26:30,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:30,819:INFO:Checking exceptions
2023-01-09 00:26:30,819:INFO:Importing libraries
2023-01-09 00:26:30,819:INFO:Copying training dataset
2023-01-09 00:26:30,821:INFO:Defining folds
2023-01-09 00:26:30,821:INFO:Declaring metric variables
2023-01-09 00:26:30,821:INFO:Importing untrained model
2023-01-09 00:26:30,821:INFO:Naive Bayes Imported successfully
2023-01-09 00:26:30,821:INFO:Starting cross validation
2023-01-09 00:26:30,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:30,877:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,879:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,881:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,882:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,884:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,887:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,903:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,904:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,905:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,905:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,906:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,906:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,908:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,909:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,925:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,927:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,927:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,928:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,929:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:30,932:INFO:Calculating mean and std
2023-01-09 00:26:30,932:INFO:Creating metrics dataframe
2023-01-09 00:26:30,935:INFO:Uploading results into container
2023-01-09 00:26:30,936:INFO:Uploading model into container now
2023-01-09 00:26:30,936:INFO:_master_model_container: 3
2023-01-09 00:26:30,936:INFO:_display_container: 2
2023-01-09 00:26:30,936:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 00:26:30,936:INFO:create_model() successfully completed......................................
2023-01-09 00:26:31,008:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:31,008:INFO:Creating metrics dataframe
2023-01-09 00:26:31,012:INFO:Initializing Decision Tree Classifier
2023-01-09 00:26:31,012:INFO:Total runtime is 0.1344674547513326 minutes
2023-01-09 00:26:31,012:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:31,013:INFO:Initializing create_model()
2023-01-09 00:26:31,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:31,013:INFO:Checking exceptions
2023-01-09 00:26:31,013:INFO:Importing libraries
2023-01-09 00:26:31,013:INFO:Copying training dataset
2023-01-09 00:26:31,014:INFO:Defining folds
2023-01-09 00:26:31,014:INFO:Declaring metric variables
2023-01-09 00:26:31,014:INFO:Importing untrained model
2023-01-09 00:26:31,015:INFO:Decision Tree Classifier Imported successfully
2023-01-09 00:26:31,015:INFO:Starting cross validation
2023-01-09 00:26:31,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:31,069:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,071:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,074:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,081:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,083:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,090:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,092:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,093:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,098:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,099:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,101:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,102:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,103:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,105:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,105:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,111:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,112:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,113:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,115:INFO:Calculating mean and std
2023-01-09 00:26:31,117:INFO:Creating metrics dataframe
2023-01-09 00:26:31,119:INFO:Uploading results into container
2023-01-09 00:26:31,120:INFO:Uploading model into container now
2023-01-09 00:26:31,120:INFO:_master_model_container: 4
2023-01-09 00:26:31,120:INFO:_display_container: 2
2023-01-09 00:26:31,121:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8292, splitter='best')
2023-01-09 00:26:31,121:INFO:create_model() successfully completed......................................
2023-01-09 00:26:31,189:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:31,189:INFO:Creating metrics dataframe
2023-01-09 00:26:31,193:INFO:Initializing SVM - Linear Kernel
2023-01-09 00:26:31,193:INFO:Total runtime is 0.1374903678894043 minutes
2023-01-09 00:26:31,193:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:31,194:INFO:Initializing create_model()
2023-01-09 00:26:31,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:31,194:INFO:Checking exceptions
2023-01-09 00:26:31,194:INFO:Importing libraries
2023-01-09 00:26:31,194:INFO:Copying training dataset
2023-01-09 00:26:31,195:INFO:Defining folds
2023-01-09 00:26:31,195:INFO:Declaring metric variables
2023-01-09 00:26:31,195:INFO:Importing untrained model
2023-01-09 00:26:31,196:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 00:26:31,196:INFO:Starting cross validation
2023-01-09 00:26:31,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:31,247:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,249:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,251:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,252:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,254:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,256:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,258:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,261:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,263:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,267:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,269:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,270:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,273:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,274:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,276:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,281:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,281:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:31,281:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,282:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,283:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:31,284:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,285:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,287:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,288:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:31,288:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,288:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,288:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,289:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,290:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:31,291:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,293:INFO:Calculating mean and std
2023-01-09 00:26:31,294:INFO:Creating metrics dataframe
2023-01-09 00:26:31,296:INFO:Uploading results into container
2023-01-09 00:26:31,297:INFO:Uploading model into container now
2023-01-09 00:26:31,297:INFO:_master_model_container: 5
2023-01-09 00:26:31,297:INFO:_display_container: 2
2023-01-09 00:26:31,298:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8292, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 00:26:31,298:INFO:create_model() successfully completed......................................
2023-01-09 00:26:31,370:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:31,370:INFO:Creating metrics dataframe
2023-01-09 00:26:31,374:INFO:Initializing Ridge Classifier
2023-01-09 00:26:31,374:INFO:Total runtime is 0.14049214522043865 minutes
2023-01-09 00:26:31,374:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:31,374:INFO:Initializing create_model()
2023-01-09 00:26:31,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:31,374:INFO:Checking exceptions
2023-01-09 00:26:31,374:INFO:Importing libraries
2023-01-09 00:26:31,374:INFO:Copying training dataset
2023-01-09 00:26:31,376:INFO:Defining folds
2023-01-09 00:26:31,376:INFO:Declaring metric variables
2023-01-09 00:26:31,376:INFO:Importing untrained model
2023-01-09 00:26:31,376:INFO:Ridge Classifier Imported successfully
2023-01-09 00:26:31,377:INFO:Starting cross validation
2023-01-09 00:26:31,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:31,419:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,422:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,423:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,425:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,432:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,434:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,437:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,437:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,439:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,445:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,446:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,446:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,446:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,450:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,451:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,453:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,454:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,457:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,458:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,460:INFO:Calculating mean and std
2023-01-09 00:26:31,461:INFO:Creating metrics dataframe
2023-01-09 00:26:31,464:INFO:Uploading results into container
2023-01-09 00:26:31,464:INFO:Uploading model into container now
2023-01-09 00:26:31,464:INFO:_master_model_container: 6
2023-01-09 00:26:31,464:INFO:_display_container: 2
2023-01-09 00:26:31,464:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8292, solver='auto', tol=0.001)
2023-01-09 00:26:31,465:INFO:create_model() successfully completed......................................
2023-01-09 00:26:31,538:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:31,538:INFO:Creating metrics dataframe
2023-01-09 00:26:31,542:INFO:Initializing Random Forest Classifier
2023-01-09 00:26:31,542:INFO:Total runtime is 0.14330072402954103 minutes
2023-01-09 00:26:31,542:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:31,543:INFO:Initializing create_model()
2023-01-09 00:26:31,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:31,543:INFO:Checking exceptions
2023-01-09 00:26:31,543:INFO:Importing libraries
2023-01-09 00:26:31,543:INFO:Copying training dataset
2023-01-09 00:26:31,544:INFO:Defining folds
2023-01-09 00:26:31,544:INFO:Declaring metric variables
2023-01-09 00:26:31,544:INFO:Importing untrained model
2023-01-09 00:26:31,545:INFO:Random Forest Classifier Imported successfully
2023-01-09 00:26:31,545:INFO:Starting cross validation
2023-01-09 00:26:31,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:31,905:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,909:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,933:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,933:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,935:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,935:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,936:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,936:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,938:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,938:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,940:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,945:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,946:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,948:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,950:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,951:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,954:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,955:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,956:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,957:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,958:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,959:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:31,962:INFO:Calculating mean and std
2023-01-09 00:26:31,962:INFO:Creating metrics dataframe
2023-01-09 00:26:31,965:INFO:Uploading results into container
2023-01-09 00:26:31,966:INFO:Uploading model into container now
2023-01-09 00:26:31,966:INFO:_master_model_container: 7
2023-01-09 00:26:31,966:INFO:_display_container: 2
2023-01-09 00:26:31,967:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8292, verbose=0, warm_start=False)
2023-01-09 00:26:31,967:INFO:create_model() successfully completed......................................
2023-01-09 00:26:32,046:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:32,046:INFO:Creating metrics dataframe
2023-01-09 00:26:32,050:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 00:26:32,050:INFO:Total runtime is 0.1517725189526876 minutes
2023-01-09 00:26:32,050:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:32,051:INFO:Initializing create_model()
2023-01-09 00:26:32,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:32,051:INFO:Checking exceptions
2023-01-09 00:26:32,051:INFO:Importing libraries
2023-01-09 00:26:32,051:INFO:Copying training dataset
2023-01-09 00:26:32,052:INFO:Defining folds
2023-01-09 00:26:32,052:INFO:Declaring metric variables
2023-01-09 00:26:32,052:INFO:Importing untrained model
2023-01-09 00:26:32,053:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 00:26:32,053:INFO:Starting cross validation
2023-01-09 00:26:32,053:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:32,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,118:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,128:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,129:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,130:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,131:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,132:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,133:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,137:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,139:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,140:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,142:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,147:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,148:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,148:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,149:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,149:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,150:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,154:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,154:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,155:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,156:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,156:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,157:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,160:INFO:Calculating mean and std
2023-01-09 00:26:32,160:INFO:Creating metrics dataframe
2023-01-09 00:26:32,164:INFO:Uploading results into container
2023-01-09 00:26:32,164:INFO:Uploading model into container now
2023-01-09 00:26:32,165:INFO:_master_model_container: 8
2023-01-09 00:26:32,165:INFO:_display_container: 2
2023-01-09 00:26:32,165:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:26:32,165:INFO:create_model() successfully completed......................................
2023-01-09 00:26:32,242:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:32,242:INFO:Creating metrics dataframe
2023-01-09 00:26:32,246:INFO:Initializing Ada Boost Classifier
2023-01-09 00:26:32,246:INFO:Total runtime is 0.15502910614013674 minutes
2023-01-09 00:26:32,247:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:32,247:INFO:Initializing create_model()
2023-01-09 00:26:32,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:32,247:INFO:Checking exceptions
2023-01-09 00:26:32,247:INFO:Importing libraries
2023-01-09 00:26:32,247:INFO:Copying training dataset
2023-01-09 00:26:32,249:INFO:Defining folds
2023-01-09 00:26:32,249:INFO:Declaring metric variables
2023-01-09 00:26:32,249:INFO:Importing untrained model
2023-01-09 00:26:32,249:INFO:Ada Boost Classifier Imported successfully
2023-01-09 00:26:32,249:INFO:Starting cross validation
2023-01-09 00:26:32,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:32,450:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,454:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,455:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,456:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,458:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,458:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,458:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,459:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,461:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,462:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,463:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,463:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,464:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,464:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,466:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,482:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,484:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,484:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,485:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,485:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,486:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,486:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,488:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,489:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,492:INFO:Calculating mean and std
2023-01-09 00:26:32,492:INFO:Creating metrics dataframe
2023-01-09 00:26:32,495:INFO:Uploading results into container
2023-01-09 00:26:32,496:INFO:Uploading model into container now
2023-01-09 00:26:32,496:INFO:_master_model_container: 9
2023-01-09 00:26:32,496:INFO:_display_container: 2
2023-01-09 00:26:32,496:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8292)
2023-01-09 00:26:32,496:INFO:create_model() successfully completed......................................
2023-01-09 00:26:32,572:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:32,572:INFO:Creating metrics dataframe
2023-01-09 00:26:32,577:INFO:Initializing Gradient Boosting Classifier
2023-01-09 00:26:32,577:INFO:Total runtime is 0.16054768959681195 minutes
2023-01-09 00:26:32,578:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:32,578:INFO:Initializing create_model()
2023-01-09 00:26:32,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:32,578:INFO:Checking exceptions
2023-01-09 00:26:32,578:INFO:Importing libraries
2023-01-09 00:26:32,578:INFO:Copying training dataset
2023-01-09 00:26:32,580:INFO:Defining folds
2023-01-09 00:26:32,580:INFO:Declaring metric variables
2023-01-09 00:26:32,580:INFO:Importing untrained model
2023-01-09 00:26:32,580:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 00:26:32,580:INFO:Starting cross validation
2023-01-09 00:26:32,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:32,981:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,982:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,983:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,983:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,984:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,985:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,986:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,986:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,987:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,988:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,990:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,990:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,993:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:32,995:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,001:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,001:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,004:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,007:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,008:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,009:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,010:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,021:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,023:INFO:Calculating mean and std
2023-01-09 00:26:33,024:INFO:Creating metrics dataframe
2023-01-09 00:26:33,027:INFO:Uploading results into container
2023-01-09 00:26:33,027:INFO:Uploading model into container now
2023-01-09 00:26:33,028:INFO:_master_model_container: 10
2023-01-09 00:26:33,028:INFO:_display_container: 2
2023-01-09 00:26:33,028:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8292, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 00:26:33,028:INFO:create_model() successfully completed......................................
2023-01-09 00:26:33,105:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:33,105:INFO:Creating metrics dataframe
2023-01-09 00:26:33,109:INFO:Initializing Linear Discriminant Analysis
2023-01-09 00:26:33,109:INFO:Total runtime is 0.16942160924275718 minutes
2023-01-09 00:26:33,109:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:33,110:INFO:Initializing create_model()
2023-01-09 00:26:33,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:33,110:INFO:Checking exceptions
2023-01-09 00:26:33,110:INFO:Importing libraries
2023-01-09 00:26:33,110:INFO:Copying training dataset
2023-01-09 00:26:33,111:INFO:Defining folds
2023-01-09 00:26:33,111:INFO:Declaring metric variables
2023-01-09 00:26:33,111:INFO:Importing untrained model
2023-01-09 00:26:33,112:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 00:26:33,112:INFO:Starting cross validation
2023-01-09 00:26:33,112:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:33,171:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,173:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,176:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,176:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,184:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,187:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,189:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,189:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,190:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,192:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,204:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,204:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,210:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,211:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,211:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,212:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,212:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,215:INFO:Calculating mean and std
2023-01-09 00:26:33,216:INFO:Creating metrics dataframe
2023-01-09 00:26:33,219:INFO:Uploading results into container
2023-01-09 00:26:33,220:INFO:Uploading model into container now
2023-01-09 00:26:33,220:INFO:_master_model_container: 11
2023-01-09 00:26:33,220:INFO:_display_container: 2
2023-01-09 00:26:33,221:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:26:33,221:INFO:create_model() successfully completed......................................
2023-01-09 00:26:33,298:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:33,299:INFO:Creating metrics dataframe
2023-01-09 00:26:33,304:INFO:Initializing Extra Trees Classifier
2023-01-09 00:26:33,304:INFO:Total runtime is 0.17267049948374433 minutes
2023-01-09 00:26:33,304:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:33,304:INFO:Initializing create_model()
2023-01-09 00:26:33,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:33,305:INFO:Checking exceptions
2023-01-09 00:26:33,305:INFO:Importing libraries
2023-01-09 00:26:33,305:INFO:Copying training dataset
2023-01-09 00:26:33,307:INFO:Defining folds
2023-01-09 00:26:33,307:INFO:Declaring metric variables
2023-01-09 00:26:33,307:INFO:Importing untrained model
2023-01-09 00:26:33,308:INFO:Extra Trees Classifier Imported successfully
2023-01-09 00:26:33,308:INFO:Starting cross validation
2023-01-09 00:26:33,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:33,616:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,619:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,622:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,625:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,628:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,630:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,634:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,637:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,639:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,639:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,641:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,641:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,642:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,643:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,644:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,647:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,649:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,649:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,651:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,652:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,661:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,661:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,663:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,663:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,677:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,677:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,679:INFO:Calculating mean and std
2023-01-09 00:26:33,680:INFO:Creating metrics dataframe
2023-01-09 00:26:33,683:INFO:Uploading results into container
2023-01-09 00:26:33,684:INFO:Uploading model into container now
2023-01-09 00:26:33,684:INFO:_master_model_container: 12
2023-01-09 00:26:33,684:INFO:_display_container: 2
2023-01-09 00:26:33,684:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8292, verbose=0, warm_start=False)
2023-01-09 00:26:33,684:INFO:create_model() successfully completed......................................
2023-01-09 00:26:33,760:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:33,760:INFO:Creating metrics dataframe
2023-01-09 00:26:33,764:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 00:26:33,764:INFO:Total runtime is 0.18032648166020715 minutes
2023-01-09 00:26:33,764:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:33,764:INFO:Initializing create_model()
2023-01-09 00:26:33,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:33,764:INFO:Checking exceptions
2023-01-09 00:26:33,764:INFO:Importing libraries
2023-01-09 00:26:33,764:INFO:Copying training dataset
2023-01-09 00:26:33,766:INFO:Defining folds
2023-01-09 00:26:33,766:INFO:Declaring metric variables
2023-01-09 00:26:33,766:INFO:Importing untrained model
2023-01-09 00:26:33,766:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 00:26:33,767:INFO:Starting cross validation
2023-01-09 00:26:33,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:33,897:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,900:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,904:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,907:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,909:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,910:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,911:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,920:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,921:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,922:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,923:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,924:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,924:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,925:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,926:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,927:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,927:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,928:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,928:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,928:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,929:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,930:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,937:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,938:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,939:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:33,941:INFO:Calculating mean and std
2023-01-09 00:26:33,942:INFO:Creating metrics dataframe
2023-01-09 00:26:33,944:INFO:Uploading results into container
2023-01-09 00:26:33,944:INFO:Uploading model into container now
2023-01-09 00:26:33,944:INFO:_master_model_container: 13
2023-01-09 00:26:33,944:INFO:_display_container: 2
2023-01-09 00:26:33,945:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8292, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 00:26:33,945:INFO:create_model() successfully completed......................................
2023-01-09 00:26:34,026:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:34,026:INFO:Creating metrics dataframe
2023-01-09 00:26:34,030:INFO:Initializing Dummy Classifier
2023-01-09 00:26:34,030:INFO:Total runtime is 0.18477166891098026 minutes
2023-01-09 00:26:34,030:INFO:SubProcess create_model() called ==================================
2023-01-09 00:26:34,030:INFO:Initializing create_model()
2023-01-09 00:26:34,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B79E9A130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:34,030:INFO:Checking exceptions
2023-01-09 00:26:34,030:INFO:Importing libraries
2023-01-09 00:26:34,031:INFO:Copying training dataset
2023-01-09 00:26:34,032:INFO:Defining folds
2023-01-09 00:26:34,032:INFO:Declaring metric variables
2023-01-09 00:26:34,032:INFO:Importing untrained model
2023-01-09 00:26:34,032:INFO:Dummy Classifier Imported successfully
2023-01-09 00:26:34,033:INFO:Starting cross validation
2023-01-09 00:26:34,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:26:34,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,087:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,088:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:34,089:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,091:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,094:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,095:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:34,096:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,102:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,104:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,105:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,106:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:34,107:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,107:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,107:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,108:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:34,108:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,109:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:34,110:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,114:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,115:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,116:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:34,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,120:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,121:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,122:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:34,123:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,123:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:34,125:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,127:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,128:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,128:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,129:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,129:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:34,129:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:26:34,129:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,130:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:34,132:INFO:Calculating mean and std
2023-01-09 00:26:34,134:INFO:Creating metrics dataframe
2023-01-09 00:26:34,136:INFO:Uploading results into container
2023-01-09 00:26:34,137:INFO:Uploading model into container now
2023-01-09 00:26:34,137:INFO:_master_model_container: 14
2023-01-09 00:26:34,137:INFO:_display_container: 2
2023-01-09 00:26:34,137:INFO:DummyClassifier(constant=None, random_state=8292, strategy='prior')
2023-01-09 00:26:34,137:INFO:create_model() successfully completed......................................
2023-01-09 00:26:34,216:INFO:SubProcess create_model() end ==================================
2023-01-09 00:26:34,216:INFO:Creating metrics dataframe
2023-01-09 00:26:34,221:INFO:Initializing create_model()
2023-01-09 00:26:34,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:26:34,221:INFO:Checking exceptions
2023-01-09 00:26:34,222:INFO:Importing libraries
2023-01-09 00:26:34,222:INFO:Copying training dataset
2023-01-09 00:26:34,224:INFO:Defining folds
2023-01-09 00:26:34,224:INFO:Declaring metric variables
2023-01-09 00:26:34,224:INFO:Importing untrained model
2023-01-09 00:26:34,224:INFO:Declaring custom model
2023-01-09 00:26:34,224:INFO:K Neighbors Classifier Imported successfully
2023-01-09 00:26:34,225:INFO:Cross validation set to False
2023-01-09 00:26:34,225:INFO:Fitting Model
2023-01-09 00:26:34,252:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:26:34,252:INFO:create_model() successfully completed......................................
2023-01-09 00:26:34,345:INFO:_master_model_container: 14
2023-01-09 00:26:34,345:INFO:_display_container: 2
2023-01-09 00:26:34,345:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:26:34,346:INFO:compare_models() successfully completed......................................
2023-01-09 00:26:34,352:INFO:Initializing save_model()
2023-01-09 00:26:34,352:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=best_model, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-09 00:26:34,352:INFO:Adding model into prep_pipe
2023-01-09 00:26:34,357:INFO:best_model.pkl saved in current working directory
2023-01-09 00:26:34,362:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2023-01-09 00:26:34,362:INFO:save_model() successfully completed......................................
2023-01-09 00:26:43,524:INFO:Initializing load_model()
2023-01-09 00:26:43,524:INFO:load_model(model_name=trained_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:26:57,463:INFO:Initializing load_model()
2023-01-09 00:26:57,463:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:26:57,477:INFO:Initializing predict_model()
2023-01-09 00:26:57,477:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000021B79BD5160>)
2023-01-09 00:26:57,477:INFO:Checking exceptions
2023-01-09 00:26:57,477:INFO:Preloading libraries
2023-01-09 00:26:57,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:57,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:57,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:57,533:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:57,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:26:57,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:27:07,030:INFO:Initializing load_model()
2023-01-09 00:27:07,030:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:27:07,044:INFO:Initializing predict_model()
2023-01-09 00:27:07,044:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000021B7A0A4B80>)
2023-01-09 00:27:07,044:INFO:Checking exceptions
2023-01-09 00:27:07,044:INFO:Preloading libraries
2023-01-09 00:27:07,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:27:07,084:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:27:07,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:27:07,085:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:27:07,086:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:27:07,087:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:42,252:INFO:Initializing load_model()
2023-01-09 00:28:42,253:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:28:42,267:INFO:Initializing predict_model()
2023-01-09 00:28:42,268:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000021B7A0A4E50>)
2023-01-09 00:28:42,268:INFO:Checking exceptions
2023-01-09 00:28:42,268:INFO:Preloading libraries
2023-01-09 00:28:42,315:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:42,316:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:42,317:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:42,317:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:42,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:42,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:45,988:INFO:Initializing load_model()
2023-01-09 00:28:45,988:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:28:46,005:INFO:Initializing predict_model()
2023-01-09 00:28:46,005:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000021B7A076D30>)
2023-01-09 00:28:46,005:INFO:Checking exceptions
2023-01-09 00:28:46,005:INFO:Preloading libraries
2023-01-09 00:28:46,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:46,047:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:46,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:46,049:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:46,049:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:28:46,050:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:29:52,887:INFO:Initializing load_model()
2023-01-09 00:29:52,888:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:29:52,903:INFO:Initializing predict_model()
2023-01-09 00:29:52,903:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000021B7A01FF70>)
2023-01-09 00:29:52,903:INFO:Checking exceptions
2023-01-09 00:29:52,903:INFO:Preloading libraries
2023-01-09 00:29:52,942:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:29:52,943:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:29:52,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:29:52,944:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:29:52,945:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:29:52,946:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:32:43,849:INFO:Initializing load_model()
2023-01-09 00:32:43,849:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:32:43,861:INFO:Initializing evaluate_model()
2023-01-09 00:32:43,861:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-01-09 00:32:43,889:INFO:Initializing plot_model()
2023-01-09 00:32:43,889:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, system=True)
2023-01-09 00:32:43,889:INFO:Checking exceptions
2023-01-09 00:32:43,890:INFO:Preloading libraries
2023-01-09 00:32:43,891:INFO:Copying training dataset
2023-01-09 00:32:43,891:INFO:Plot type: pipeline
2023-01-09 00:32:43,994:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:575: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2023-01-09 00:32:43,994:INFO:Visual Rendered Successfully
2023-01-09 00:32:44,071:INFO:plot_model() successfully completed......................................
2023-01-09 00:32:53,344:INFO:Initializing load_model()
2023-01-09 00:32:53,344:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:32:53,359:INFO:Initializing evaluate_model()
2023-01-09 00:32:53,359:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-01-09 00:32:53,371:INFO:Initializing plot_model()
2023-01-09 00:32:53,371:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, system=True)
2023-01-09 00:32:53,371:INFO:Checking exceptions
2023-01-09 00:32:53,373:INFO:Preloading libraries
2023-01-09 00:32:53,374:INFO:Copying training dataset
2023-01-09 00:32:53,374:INFO:Plot type: pipeline
2023-01-09 00:32:53,436:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:575: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2023-01-09 00:32:53,436:INFO:Visual Rendered Successfully
2023-01-09 00:32:53,514:INFO:plot_model() successfully completed......................................
2023-01-09 00:33:37,870:INFO:Initializing load_model()
2023-01-09 00:33:37,870:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:33:37,886:INFO:Initializing evaluate_model()
2023-01-09 00:33:37,886:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-01-09 00:33:37,900:INFO:Initializing plot_model()
2023-01-09 00:33:37,900:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, system=True)
2023-01-09 00:33:37,900:INFO:Checking exceptions
2023-01-09 00:33:37,902:INFO:Preloading libraries
2023-01-09 00:33:37,902:INFO:Copying training dataset
2023-01-09 00:33:37,902:INFO:Plot type: pipeline
2023-01-09 00:33:37,971:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:575: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2023-01-09 00:33:37,972:INFO:Visual Rendered Successfully
2023-01-09 00:33:38,048:INFO:plot_model() successfully completed......................................
2023-01-09 00:36:47,066:INFO:Initializing load_model()
2023-01-09 00:36:47,066:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2023-01-09 00:36:47,084:INFO:Initializing plot_model()
2023-01-09 00:36:47,084:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, system=True)
2023-01-09 00:36:47,084:INFO:Checking exceptions
2023-01-09 00:36:47,085:INFO:Preloading libraries
2023-01-09 00:36:47,086:INFO:Copying training dataset
2023-01-09 00:36:47,086:INFO:Plot type: auc
2023-01-09 00:36:47,126:INFO:Fitting Model
2023-01-09 00:36:47,128:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2023-01-09 00:36:47,128:INFO:Scoring test/hold-out set
2023-01-09 00:36:47,163:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\yellowbrick\base.py:246: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2023-01-09 00:36:47,180:INFO:Visual Rendered Successfully
2023-01-09 00:36:47,256:INFO:plot_model() successfully completed......................................
2023-01-09 00:36:47,262:INFO:Initializing evaluate_model()
2023-01-09 00:36:47,262:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-01-09 00:36:47,275:INFO:Initializing plot_model()
2023-01-09 00:36:47,275:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KNeighborsClassifier(n_jobs=-1))]), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A2CD370>, system=True)
2023-01-09 00:36:47,275:INFO:Checking exceptions
2023-01-09 00:36:47,276:INFO:Preloading libraries
2023-01-09 00:36:47,276:INFO:Copying training dataset
2023-01-09 00:36:47,277:INFO:Plot type: pipeline
2023-01-09 00:36:47,339:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:575: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2023-01-09 00:36:47,339:INFO:Visual Rendered Successfully
2023-01-09 00:36:47,414:INFO:plot_model() successfully completed......................................
2023-01-09 00:41:01,095:INFO:Initializing load_model()
2023-01-09 00:41:01,096:INFO:load_model(model_name=UploadedFile(id=5, name='best_model.pkl', type='application/octet-stream', size=12614), platform=None, authentication=None, verbose=True)
2023-01-09 00:54:28,009:INFO:Initializing load_model()
2023-01-09 00:54:28,009:INFO:load_model(model_name=['Iris-setosa' 'Iris-versicolor' 'Iris-virginica'], platform=None, authentication=None, verbose=True)
2023-01-09 00:56:48,812:INFO:PyCaret ClassificationExperiment
2023-01-09 00:56:48,812:INFO:Logging name: clf-default-name
2023-01-09 00:56:48,813:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 00:56:48,813:INFO:version 3.0.0.rc6
2023-01-09 00:56:48,813:INFO:Initializing setup()
2023-01-09 00:56:48,813:INFO:self.USI: f50f
2023-01-09 00:56:48,813:INFO:self._variable_keys: {'fold_groups_param', 'log_plots_param', 'is_multiclass', 'fold_generator', 'fix_imbalance', 'data', 'idx', 'y_train', 'pipeline', 'memory', 'target_param', 'fold_shuffle_param', 'gpu_param', 'X_test', 'y_test', 'gpu_n_jobs_param', 'USI', 'y', 'logging_param', 'html_param', 'seed', '_ml_usecase', 'X', 'n_jobs_param', '_available_plots', 'exp_name_log', 'exp_id', 'X_train'}
2023-01-09 00:56:48,813:INFO:Checking environment
2023-01-09 00:56:48,813:INFO:python_version: 3.9.15
2023-01-09 00:56:48,813:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-09 00:56:48,814:INFO:machine: AMD64
2023-01-09 00:56:48,814:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-09 00:56:48,814:INFO:Memory: svmem(total=17010110464, available=5076975616, percent=70.2, used=11933134848, free=5076975616)
2023-01-09 00:56:48,814:INFO:Physical Core: 6
2023-01-09 00:56:48,814:INFO:Logical Core: 12
2023-01-09 00:56:48,814:INFO:Checking libraries
2023-01-09 00:56:48,814:INFO:System:
2023-01-09 00:56:48,814:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-09 00:56:48,814:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-09 00:56:48,814:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-09 00:56:48,814:INFO:PyCaret required dependencies:
2023-01-09 00:56:48,814:INFO:                 pip: 22.3.1
2023-01-09 00:56:48,815:INFO:          setuptools: 65.6.3
2023-01-09 00:56:48,815:INFO:             pycaret: 3.0.0rc6
2023-01-09 00:56:48,815:INFO:             IPython: 8.8.0
2023-01-09 00:56:48,815:INFO:          ipywidgets: 8.0.4
2023-01-09 00:56:48,815:INFO:                tqdm: 4.64.1
2023-01-09 00:56:48,815:INFO:               numpy: 1.22.4
2023-01-09 00:56:48,815:INFO:              pandas: 1.5.2
2023-01-09 00:56:48,815:INFO:              jinja2: 3.1.2
2023-01-09 00:56:48,815:INFO:               scipy: 1.9.3
2023-01-09 00:56:48,815:INFO:              joblib: 1.2.0
2023-01-09 00:56:48,815:INFO:             sklearn: 1.1.3
2023-01-09 00:56:48,815:INFO:                pyod: 1.0.7
2023-01-09 00:56:48,815:INFO:            imblearn: 0.10.1
2023-01-09 00:56:48,815:INFO:   category_encoders: 2.5.1.post0
2023-01-09 00:56:48,815:INFO:            lightgbm: 3.3.4
2023-01-09 00:56:48,815:INFO:               numba: 0.56.4
2023-01-09 00:56:48,815:INFO:            requests: 2.28.1
2023-01-09 00:56:48,815:INFO:          matplotlib: 3.6.2
2023-01-09 00:56:48,815:INFO:          scikitplot: 0.3.7
2023-01-09 00:56:48,816:INFO:         yellowbrick: 1.5
2023-01-09 00:56:48,816:INFO:              plotly: 5.11.0
2023-01-09 00:56:48,816:INFO:             kaleido: 0.2.1
2023-01-09 00:56:48,816:INFO:         statsmodels: 0.13.5
2023-01-09 00:56:48,816:INFO:              sktime: 0.14.1
2023-01-09 00:56:48,816:INFO:               tbats: 1.1.2
2023-01-09 00:56:48,816:INFO:            pmdarima: 2.0.2
2023-01-09 00:56:48,816:INFO:              psutil: 5.9.0
2023-01-09 00:56:48,816:INFO:PyCaret optional dependencies:
2023-01-09 00:56:48,816:INFO:                shap: Not installed
2023-01-09 00:56:48,816:INFO:           interpret: Not installed
2023-01-09 00:56:48,816:INFO:                umap: Not installed
2023-01-09 00:56:48,816:INFO:    pandas_profiling: 3.6.2
2023-01-09 00:56:48,816:INFO:  explainerdashboard: Not installed
2023-01-09 00:56:48,816:INFO:             autoviz: Not installed
2023-01-09 00:56:48,816:INFO:           fairlearn: Not installed
2023-01-09 00:56:48,816:INFO:             xgboost: Not installed
2023-01-09 00:56:48,816:INFO:            catboost: Not installed
2023-01-09 00:56:48,816:INFO:              kmodes: Not installed
2023-01-09 00:56:48,817:INFO:             mlxtend: Not installed
2023-01-09 00:56:48,817:INFO:       statsforecast: Not installed
2023-01-09 00:56:48,817:INFO:        tune_sklearn: Not installed
2023-01-09 00:56:48,817:INFO:                 ray: Not installed
2023-01-09 00:56:48,817:INFO:            hyperopt: Not installed
2023-01-09 00:56:48,817:INFO:              optuna: Not installed
2023-01-09 00:56:48,817:INFO:               skopt: Not installed
2023-01-09 00:56:48,817:INFO:              mlflow: Not installed
2023-01-09 00:56:48,817:INFO:              gradio: Not installed
2023-01-09 00:56:48,817:INFO:             fastapi: Not installed
2023-01-09 00:56:48,817:INFO:             uvicorn: Not installed
2023-01-09 00:56:48,817:INFO:              m2cgen: Not installed
2023-01-09 00:56:48,817:INFO:           evidently: Not installed
2023-01-09 00:56:48,817:INFO:                nltk: Not installed
2023-01-09 00:56:48,817:INFO:            pyLDAvis: Not installed
2023-01-09 00:56:48,817:INFO:              gensim: Not installed
2023-01-09 00:56:48,817:INFO:               spacy: Not installed
2023-01-09 00:56:48,817:INFO:           wordcloud: Not installed
2023-01-09 00:56:48,817:INFO:            textblob: Not installed
2023-01-09 00:56:48,818:INFO:               fugue: Not installed
2023-01-09 00:56:48,818:INFO:           streamlit: 1.16.0
2023-01-09 00:56:48,818:INFO:             prophet: Not installed
2023-01-09 00:56:48,818:INFO:None
2023-01-09 00:56:48,818:INFO:Set up data.
2023-01-09 00:56:48,823:INFO:Set up train/test split.
2023-01-09 00:56:48,826:INFO:Set up index.
2023-01-09 00:56:48,826:INFO:Set up folding strategy.
2023-01-09 00:56:48,826:INFO:Assigning column types.
2023-01-09 00:56:48,828:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 00:56:48,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:56:48,875:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:56:48,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:48,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:48,942:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:56:48,943:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:56:48,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:48,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:48,969:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 00:56:49,011:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:56:49,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,077:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:56:49,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,101:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 00:56:49,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,233:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,234:INFO:Preparing preprocessing pipeline...
2023-01-09 00:56:49,235:INFO:Set up label encoding.
2023-01-09 00:56:49,235:INFO:Set up simple imputation.
2023-01-09 00:56:49,271:INFO:Finished creating preprocessing pipeline.
2023-01-09 00:56:49,273:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 00:56:49,273:INFO:Creating final display dataframe.
2023-01-09 00:56:49,447:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               4774
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               f50f
2023-01-09 00:56:49,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:56:49,590:INFO:setup() successfully completed in 0.78s...............
2023-01-09 00:56:49,592:INFO:Initializing compare_models()
2023-01-09 00:56:49,593:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 00:56:49,593:INFO:Checking exceptions
2023-01-09 00:56:49,596:INFO:Preparing display monitor
2023-01-09 00:56:49,599:INFO:Initializing Logistic Regression
2023-01-09 00:56:49,599:INFO:Total runtime is 0.0 minutes
2023-01-09 00:56:49,599:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:49,600:INFO:Initializing create_model()
2023-01-09 00:56:49,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:49,600:INFO:Checking exceptions
2023-01-09 00:56:49,600:INFO:Importing libraries
2023-01-09 00:56:49,600:INFO:Copying training dataset
2023-01-09 00:56:49,602:INFO:Defining folds
2023-01-09 00:56:49,602:INFO:Declaring metric variables
2023-01-09 00:56:49,602:INFO:Importing untrained model
2023-01-09 00:56:49,602:INFO:Logistic Regression Imported successfully
2023-01-09 00:56:49,602:INFO:Starting cross validation
2023-01-09 00:56:49,603:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:55,344:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,347:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,350:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,357:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,359:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,359:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,361:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,362:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,364:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,372:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,375:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,376:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,377:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,379:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,381:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,381:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,381:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,383:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,384:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,385:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,386:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,386:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,388:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,389:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,391:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,391:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,393:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,407:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,409:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,411:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,416:INFO:Calculating mean and std
2023-01-09 00:56:55,417:INFO:Creating metrics dataframe
2023-01-09 00:56:55,424:INFO:Uploading results into container
2023-01-09 00:56:55,425:INFO:Uploading model into container now
2023-01-09 00:56:55,426:INFO:_master_model_container: 1
2023-01-09 00:56:55,426:INFO:_display_container: 2
2023-01-09 00:56:55,427:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4774, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 00:56:55,427:INFO:create_model() successfully completed......................................
2023-01-09 00:56:55,538:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:55,538:INFO:Creating metrics dataframe
2023-01-09 00:56:55,542:INFO:Initializing K Neighbors Classifier
2023-01-09 00:56:55,542:INFO:Total runtime is 0.09904261430104573 minutes
2023-01-09 00:56:55,542:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:55,543:INFO:Initializing create_model()
2023-01-09 00:56:55,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:55,543:INFO:Checking exceptions
2023-01-09 00:56:55,543:INFO:Importing libraries
2023-01-09 00:56:55,543:INFO:Copying training dataset
2023-01-09 00:56:55,545:INFO:Defining folds
2023-01-09 00:56:55,545:INFO:Declaring metric variables
2023-01-09 00:56:55,545:INFO:Importing untrained model
2023-01-09 00:56:55,545:INFO:K Neighbors Classifier Imported successfully
2023-01-09 00:56:55,545:INFO:Starting cross validation
2023-01-09 00:56:55,546:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:55,674:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,678:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,679:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,680:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,683:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,686:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,690:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,698:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,698:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,702:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,703:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,706:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,707:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:55,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,298:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,299:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,300:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,300:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,301:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,303:INFO:Calculating mean and std
2023-01-09 00:56:57,304:INFO:Creating metrics dataframe
2023-01-09 00:56:57,307:INFO:Uploading results into container
2023-01-09 00:56:57,308:INFO:Uploading model into container now
2023-01-09 00:56:57,309:INFO:_master_model_container: 2
2023-01-09 00:56:57,309:INFO:_display_container: 2
2023-01-09 00:56:57,309:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:56:57,309:INFO:create_model() successfully completed......................................
2023-01-09 00:56:57,396:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:57,396:INFO:Creating metrics dataframe
2023-01-09 00:56:57,400:INFO:Initializing Naive Bayes
2023-01-09 00:56:57,400:INFO:Total runtime is 0.13000361124674478 minutes
2023-01-09 00:56:57,400:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:57,400:INFO:Initializing create_model()
2023-01-09 00:56:57,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:57,401:INFO:Checking exceptions
2023-01-09 00:56:57,401:INFO:Importing libraries
2023-01-09 00:56:57,401:INFO:Copying training dataset
2023-01-09 00:56:57,402:INFO:Defining folds
2023-01-09 00:56:57,402:INFO:Declaring metric variables
2023-01-09 00:56:57,402:INFO:Importing untrained model
2023-01-09 00:56:57,403:INFO:Naive Bayes Imported successfully
2023-01-09 00:56:57,403:INFO:Starting cross validation
2023-01-09 00:56:57,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:57,460:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,462:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,465:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,466:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,469:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,472:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,474:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,476:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,479:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,482:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,482:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,484:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,489:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,490:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,491:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,491:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,492:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,492:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,493:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,493:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,494:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,495:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,497:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,498:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,500:INFO:Calculating mean and std
2023-01-09 00:56:57,501:INFO:Creating metrics dataframe
2023-01-09 00:56:57,504:INFO:Uploading results into container
2023-01-09 00:56:57,504:INFO:Uploading model into container now
2023-01-09 00:56:57,504:INFO:_master_model_container: 3
2023-01-09 00:56:57,504:INFO:_display_container: 2
2023-01-09 00:56:57,505:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 00:56:57,505:INFO:create_model() successfully completed......................................
2023-01-09 00:56:57,580:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:57,580:INFO:Creating metrics dataframe
2023-01-09 00:56:57,585:INFO:Initializing Decision Tree Classifier
2023-01-09 00:56:57,585:INFO:Total runtime is 0.13309866587320962 minutes
2023-01-09 00:56:57,585:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:57,585:INFO:Initializing create_model()
2023-01-09 00:56:57,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:57,585:INFO:Checking exceptions
2023-01-09 00:56:57,585:INFO:Importing libraries
2023-01-09 00:56:57,585:INFO:Copying training dataset
2023-01-09 00:56:57,587:INFO:Defining folds
2023-01-09 00:56:57,587:INFO:Declaring metric variables
2023-01-09 00:56:57,588:INFO:Importing untrained model
2023-01-09 00:56:57,588:INFO:Decision Tree Classifier Imported successfully
2023-01-09 00:56:57,588:INFO:Starting cross validation
2023-01-09 00:56:57,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:57,647:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,647:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,649:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,650:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,652:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,652:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,655:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,656:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,656:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,658:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,659:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,661:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,667:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,668:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,669:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,669:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,671:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,672:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,674:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,677:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,678:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,682:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,682:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,683:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,683:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,684:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,686:INFO:Calculating mean and std
2023-01-09 00:56:57,687:INFO:Creating metrics dataframe
2023-01-09 00:56:57,689:INFO:Uploading results into container
2023-01-09 00:56:57,690:INFO:Uploading model into container now
2023-01-09 00:56:57,690:INFO:_master_model_container: 4
2023-01-09 00:56:57,690:INFO:_display_container: 2
2023-01-09 00:56:57,691:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4774, splitter='best')
2023-01-09 00:56:57,691:INFO:create_model() successfully completed......................................
2023-01-09 00:56:57,765:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:57,765:INFO:Creating metrics dataframe
2023-01-09 00:56:57,769:INFO:Initializing SVM - Linear Kernel
2023-01-09 00:56:57,769:INFO:Total runtime is 0.1361612836519877 minutes
2023-01-09 00:56:57,769:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:57,769:INFO:Initializing create_model()
2023-01-09 00:56:57,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:57,769:INFO:Checking exceptions
2023-01-09 00:56:57,770:INFO:Importing libraries
2023-01-09 00:56:57,770:INFO:Copying training dataset
2023-01-09 00:56:57,771:INFO:Defining folds
2023-01-09 00:56:57,771:INFO:Declaring metric variables
2023-01-09 00:56:57,771:INFO:Importing untrained model
2023-01-09 00:56:57,772:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 00:56:57,772:INFO:Starting cross validation
2023-01-09 00:56:57,772:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:57,834:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,834:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,835:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,836:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,837:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,837:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,838:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:56:57,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,840:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,843:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,846:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,851:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,854:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,854:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,860:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,863:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,864:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,864:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,865:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:56:57,865:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,866:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,867:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,868:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,869:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,870:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:57,872:INFO:Calculating mean and std
2023-01-09 00:56:57,873:INFO:Creating metrics dataframe
2023-01-09 00:56:57,876:INFO:Uploading results into container
2023-01-09 00:56:57,876:INFO:Uploading model into container now
2023-01-09 00:56:57,877:INFO:_master_model_container: 5
2023-01-09 00:56:57,877:INFO:_display_container: 2
2023-01-09 00:56:57,877:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4774, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 00:56:57,877:INFO:create_model() successfully completed......................................
2023-01-09 00:56:57,951:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:57,951:INFO:Creating metrics dataframe
2023-01-09 00:56:57,955:INFO:Initializing Ridge Classifier
2023-01-09 00:56:57,956:INFO:Total runtime is 0.1392716964085897 minutes
2023-01-09 00:56:57,956:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:57,956:INFO:Initializing create_model()
2023-01-09 00:56:57,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:57,956:INFO:Checking exceptions
2023-01-09 00:56:57,956:INFO:Importing libraries
2023-01-09 00:56:57,956:INFO:Copying training dataset
2023-01-09 00:56:57,958:INFO:Defining folds
2023-01-09 00:56:57,958:INFO:Declaring metric variables
2023-01-09 00:56:57,958:INFO:Importing untrained model
2023-01-09 00:56:57,958:INFO:Ridge Classifier Imported successfully
2023-01-09 00:56:57,958:INFO:Starting cross validation
2023-01-09 00:56:57,959:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:57,998:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,000:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,001:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,003:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,006:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,011:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,012:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,013:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,014:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,016:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,018:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,021:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,021:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,023:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,024:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,026:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,026:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,027:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,032:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,033:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,034:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,034:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,035:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,035:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,037:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,039:INFO:Calculating mean and std
2023-01-09 00:56:58,040:INFO:Creating metrics dataframe
2023-01-09 00:56:58,044:INFO:Uploading results into container
2023-01-09 00:56:58,044:INFO:Uploading model into container now
2023-01-09 00:56:58,044:INFO:_master_model_container: 6
2023-01-09 00:56:58,044:INFO:_display_container: 2
2023-01-09 00:56:58,045:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4774, solver='auto', tol=0.001)
2023-01-09 00:56:58,045:INFO:create_model() successfully completed......................................
2023-01-09 00:56:58,123:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:58,123:INFO:Creating metrics dataframe
2023-01-09 00:56:58,127:INFO:Initializing Random Forest Classifier
2023-01-09 00:56:58,127:INFO:Total runtime is 0.14211788574854534 minutes
2023-01-09 00:56:58,127:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:58,127:INFO:Initializing create_model()
2023-01-09 00:56:58,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:58,127:INFO:Checking exceptions
2023-01-09 00:56:58,127:INFO:Importing libraries
2023-01-09 00:56:58,127:INFO:Copying training dataset
2023-01-09 00:56:58,129:INFO:Defining folds
2023-01-09 00:56:58,129:INFO:Declaring metric variables
2023-01-09 00:56:58,129:INFO:Importing untrained model
2023-01-09 00:56:58,129:INFO:Random Forest Classifier Imported successfully
2023-01-09 00:56:58,130:INFO:Starting cross validation
2023-01-09 00:56:58,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:58,499:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,502:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,502:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,503:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,505:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,505:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,505:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,507:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,507:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,508:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,510:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,513:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,526:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,527:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,528:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,529:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,533:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,534:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,535:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,537:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,549:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,550:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,551:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,553:INFO:Calculating mean and std
2023-01-09 00:56:58,553:INFO:Creating metrics dataframe
2023-01-09 00:56:58,557:INFO:Uploading results into container
2023-01-09 00:56:58,557:INFO:Uploading model into container now
2023-01-09 00:56:58,557:INFO:_master_model_container: 7
2023-01-09 00:56:58,557:INFO:_display_container: 2
2023-01-09 00:56:58,558:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4774, verbose=0, warm_start=False)
2023-01-09 00:56:58,558:INFO:create_model() successfully completed......................................
2023-01-09 00:56:58,638:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:58,638:INFO:Creating metrics dataframe
2023-01-09 00:56:58,642:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 00:56:58,643:INFO:Total runtime is 0.1507322907447815 minutes
2023-01-09 00:56:58,643:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:58,643:INFO:Initializing create_model()
2023-01-09 00:56:58,643:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:58,643:INFO:Checking exceptions
2023-01-09 00:56:58,643:INFO:Importing libraries
2023-01-09 00:56:58,643:INFO:Copying training dataset
2023-01-09 00:56:58,645:INFO:Defining folds
2023-01-09 00:56:58,645:INFO:Declaring metric variables
2023-01-09 00:56:58,645:INFO:Importing untrained model
2023-01-09 00:56:58,645:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 00:56:58,645:INFO:Starting cross validation
2023-01-09 00:56:58,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:58,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,706:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,708:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,717:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,719:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,719:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,720:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,724:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,729:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,732:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,734:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,736:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,736:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,739:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,740:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,742:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,744:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,745:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,746:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,747:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,748:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,748:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,750:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:58,752:INFO:Calculating mean and std
2023-01-09 00:56:58,753:INFO:Creating metrics dataframe
2023-01-09 00:56:58,755:INFO:Uploading results into container
2023-01-09 00:56:58,756:INFO:Uploading model into container now
2023-01-09 00:56:58,756:INFO:_master_model_container: 8
2023-01-09 00:56:58,756:INFO:_display_container: 2
2023-01-09 00:56:58,757:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:56:58,757:INFO:create_model() successfully completed......................................
2023-01-09 00:56:58,833:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:58,833:INFO:Creating metrics dataframe
2023-01-09 00:56:58,837:INFO:Initializing Ada Boost Classifier
2023-01-09 00:56:58,837:INFO:Total runtime is 0.15396283467610677 minutes
2023-01-09 00:56:58,837:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:58,838:INFO:Initializing create_model()
2023-01-09 00:56:58,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:58,838:INFO:Checking exceptions
2023-01-09 00:56:58,838:INFO:Importing libraries
2023-01-09 00:56:58,838:INFO:Copying training dataset
2023-01-09 00:56:58,839:INFO:Defining folds
2023-01-09 00:56:58,839:INFO:Declaring metric variables
2023-01-09 00:56:58,840:INFO:Importing untrained model
2023-01-09 00:56:58,840:INFO:Ada Boost Classifier Imported successfully
2023-01-09 00:56:58,840:INFO:Starting cross validation
2023-01-09 00:56:58,841:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:59,033:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,035:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,037:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,037:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,037:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,038:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,039:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,040:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,042:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,045:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,048:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,049:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,051:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,059:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,059:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,060:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,061:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,063:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,066:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,067:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,068:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,071:INFO:Calculating mean and std
2023-01-09 00:56:59,071:INFO:Creating metrics dataframe
2023-01-09 00:56:59,074:INFO:Uploading results into container
2023-01-09 00:56:59,075:INFO:Uploading model into container now
2023-01-09 00:56:59,075:INFO:_master_model_container: 9
2023-01-09 00:56:59,075:INFO:_display_container: 2
2023-01-09 00:56:59,075:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4774)
2023-01-09 00:56:59,075:INFO:create_model() successfully completed......................................
2023-01-09 00:56:59,150:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:59,150:INFO:Creating metrics dataframe
2023-01-09 00:56:59,154:INFO:Initializing Gradient Boosting Classifier
2023-01-09 00:56:59,154:INFO:Total runtime is 0.15924892822901407 minutes
2023-01-09 00:56:59,154:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:59,154:INFO:Initializing create_model()
2023-01-09 00:56:59,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:59,154:INFO:Checking exceptions
2023-01-09 00:56:59,154:INFO:Importing libraries
2023-01-09 00:56:59,154:INFO:Copying training dataset
2023-01-09 00:56:59,156:INFO:Defining folds
2023-01-09 00:56:59,156:INFO:Declaring metric variables
2023-01-09 00:56:59,156:INFO:Importing untrained model
2023-01-09 00:56:59,156:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 00:56:59,156:INFO:Starting cross validation
2023-01-09 00:56:59,157:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:59,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,538:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,539:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,540:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,541:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,542:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,559:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,561:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,565:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,567:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,568:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,569:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,569:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,571:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,577:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,577:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,578:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,580:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,581:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,582:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,583:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,592:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,593:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,596:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,598:INFO:Calculating mean and std
2023-01-09 00:56:59,599:INFO:Creating metrics dataframe
2023-01-09 00:56:59,602:INFO:Uploading results into container
2023-01-09 00:56:59,603:INFO:Uploading model into container now
2023-01-09 00:56:59,603:INFO:_master_model_container: 10
2023-01-09 00:56:59,603:INFO:_display_container: 2
2023-01-09 00:56:59,604:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4774, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 00:56:59,604:INFO:create_model() successfully completed......................................
2023-01-09 00:56:59,686:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:59,687:INFO:Creating metrics dataframe
2023-01-09 00:56:59,691:INFO:Initializing Linear Discriminant Analysis
2023-01-09 00:56:59,691:INFO:Total runtime is 0.16819918155670166 minutes
2023-01-09 00:56:59,691:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:59,692:INFO:Initializing create_model()
2023-01-09 00:56:59,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:59,692:INFO:Checking exceptions
2023-01-09 00:56:59,692:INFO:Importing libraries
2023-01-09 00:56:59,692:INFO:Copying training dataset
2023-01-09 00:56:59,693:INFO:Defining folds
2023-01-09 00:56:59,694:INFO:Declaring metric variables
2023-01-09 00:56:59,694:INFO:Importing untrained model
2023-01-09 00:56:59,694:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 00:56:59,694:INFO:Starting cross validation
2023-01-09 00:56:59,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:56:59,747:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,750:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,752:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,760:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,763:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,765:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,767:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,776:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,776:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,778:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,780:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,780:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,781:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,782:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,783:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,783:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,784:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,785:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,791:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,792:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,793:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,793:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,794:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,795:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:56:59,797:INFO:Calculating mean and std
2023-01-09 00:56:59,799:INFO:Creating metrics dataframe
2023-01-09 00:56:59,802:INFO:Uploading results into container
2023-01-09 00:56:59,802:INFO:Uploading model into container now
2023-01-09 00:56:59,802:INFO:_master_model_container: 11
2023-01-09 00:56:59,802:INFO:_display_container: 2
2023-01-09 00:56:59,803:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:56:59,803:INFO:create_model() successfully completed......................................
2023-01-09 00:56:59,879:INFO:SubProcess create_model() end ==================================
2023-01-09 00:56:59,879:INFO:Creating metrics dataframe
2023-01-09 00:56:59,885:INFO:Initializing Extra Trees Classifier
2023-01-09 00:56:59,886:INFO:Total runtime is 0.17144738833109538 minutes
2023-01-09 00:56:59,886:INFO:SubProcess create_model() called ==================================
2023-01-09 00:56:59,886:INFO:Initializing create_model()
2023-01-09 00:56:59,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:56:59,886:INFO:Checking exceptions
2023-01-09 00:56:59,886:INFO:Importing libraries
2023-01-09 00:56:59,886:INFO:Copying training dataset
2023-01-09 00:56:59,889:INFO:Defining folds
2023-01-09 00:56:59,889:INFO:Declaring metric variables
2023-01-09 00:56:59,889:INFO:Importing untrained model
2023-01-09 00:56:59,889:INFO:Extra Trees Classifier Imported successfully
2023-01-09 00:56:59,890:INFO:Starting cross validation
2023-01-09 00:56:59,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:00,209:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,212:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,212:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,214:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,216:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,217:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,218:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,219:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,220:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,222:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,223:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,225:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,227:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,228:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,230:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,230:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,244:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,246:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,247:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,248:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,269:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,270:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,271:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,277:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,278:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,279:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,281:INFO:Calculating mean and std
2023-01-09 00:57:00,281:INFO:Creating metrics dataframe
2023-01-09 00:57:00,284:INFO:Uploading results into container
2023-01-09 00:57:00,285:INFO:Uploading model into container now
2023-01-09 00:57:00,285:INFO:_master_model_container: 12
2023-01-09 00:57:00,285:INFO:_display_container: 2
2023-01-09 00:57:00,285:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4774, verbose=0, warm_start=False)
2023-01-09 00:57:00,286:INFO:create_model() successfully completed......................................
2023-01-09 00:57:00,365:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:00,365:INFO:Creating metrics dataframe
2023-01-09 00:57:00,370:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 00:57:00,370:INFO:Total runtime is 0.17950175205866495 minutes
2023-01-09 00:57:00,370:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:00,370:INFO:Initializing create_model()
2023-01-09 00:57:00,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:00,370:INFO:Checking exceptions
2023-01-09 00:57:00,370:INFO:Importing libraries
2023-01-09 00:57:00,370:INFO:Copying training dataset
2023-01-09 00:57:00,372:INFO:Defining folds
2023-01-09 00:57:00,372:INFO:Declaring metric variables
2023-01-09 00:57:00,372:INFO:Importing untrained model
2023-01-09 00:57:00,373:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 00:57:00,373:INFO:Starting cross validation
2023-01-09 00:57:00,374:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:00,489:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,492:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,495:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,500:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,502:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,505:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,513:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,514:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,514:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,516:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,516:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,519:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,519:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,520:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,521:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,521:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,523:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,524:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,529:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,530:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,531:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,532:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,536:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,537:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,538:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,538:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,539:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,541:INFO:Calculating mean and std
2023-01-09 00:57:00,542:INFO:Creating metrics dataframe
2023-01-09 00:57:00,544:INFO:Uploading results into container
2023-01-09 00:57:00,545:INFO:Uploading model into container now
2023-01-09 00:57:00,545:INFO:_master_model_container: 13
2023-01-09 00:57:00,545:INFO:_display_container: 2
2023-01-09 00:57:00,546:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4774, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 00:57:00,546:INFO:create_model() successfully completed......................................
2023-01-09 00:57:00,620:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:00,620:INFO:Creating metrics dataframe
2023-01-09 00:57:00,624:INFO:Initializing Dummy Classifier
2023-01-09 00:57:00,624:INFO:Total runtime is 0.18373964627583822 minutes
2023-01-09 00:57:00,625:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:00,625:INFO:Initializing create_model()
2023-01-09 00:57:00,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C598FD0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:00,625:INFO:Checking exceptions
2023-01-09 00:57:00,625:INFO:Importing libraries
2023-01-09 00:57:00,625:INFO:Copying training dataset
2023-01-09 00:57:00,627:INFO:Defining folds
2023-01-09 00:57:00,627:INFO:Declaring metric variables
2023-01-09 00:57:00,627:INFO:Importing untrained model
2023-01-09 00:57:00,627:INFO:Dummy Classifier Imported successfully
2023-01-09 00:57:00,627:INFO:Starting cross validation
2023-01-09 00:57:00,628:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:00,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,678:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,680:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:00,681:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,686:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,688:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:00,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:00,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,690:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,691:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,694:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:00,695:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,698:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:00,701:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,703:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:00,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,706:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:00,706:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,707:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,710:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:00,711:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,711:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

art, len(result))

2023-01-09 00:57:00,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,714:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,715:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:00,715:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:00,717:INFO:Calculating mean and std
2023-01-09 00:57:00,718:INFO:Creating metrics dataframe
2023-01-09 00:57:00,721:INFO:Uploading results into container
2023-01-09 00:57:00,721:INFO:Uploading model into container now
2023-01-09 00:57:00,722:INFO:_master_model_container: 14
2023-01-09 00:57:00,722:INFO:_display_container: 2
2023-01-09 00:57:00,722:INFO:DummyClassifier(constant=None, random_state=4774, strategy='prior')
2023-01-09 00:57:00,722:INFO:create_model() successfully completed......................................
2023-01-09 00:57:00,795:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:00,795:INFO:Creating metrics dataframe
2023-01-09 00:57:00,800:INFO:Initializing create_model()
2023-01-09 00:57:00,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:00,800:INFO:Checking exceptions
2023-01-09 00:57:00,801:INFO:Importing libraries
2023-01-09 00:57:00,801:INFO:Copying training dataset
2023-01-09 00:57:00,803:INFO:Defining folds
2023-01-09 00:57:00,803:INFO:Declaring metric variables
2023-01-09 00:57:00,803:INFO:Importing untrained model
2023-01-09 00:57:00,803:INFO:Declaring custom model
2023-01-09 00:57:00,803:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 00:57:00,804:INFO:Cross validation set to False
2023-01-09 00:57:00,804:INFO:Fitting Model
2023-01-09 00:57:00,827:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:57:00,828:INFO:create_model() successfully completed......................................
2023-01-09 00:57:00,915:INFO:_master_model_container: 14
2023-01-09 00:57:00,915:INFO:_display_container: 2
2023-01-09 00:57:00,915:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:57:00,915:INFO:compare_models() successfully completed......................................
2023-01-09 00:57:00,921:INFO:Initializing save_model()
2023-01-09 00:57:00,921:INFO:save_model(model=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), model_name=best_model, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-09 00:57:00,922:INFO:Adding model into prep_pipe
2023-01-09 00:57:00,926:INFO:best_model.pkl saved in current working directory
2023-01-09 00:57:00,931:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2023-01-09 00:57:00,931:INFO:save_model() successfully completed......................................
2023-01-09 00:57:01,025:INFO:Initializing plot_model()
2023-01-09 00:57:01,025:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, system=True)
2023-01-09 00:57:01,025:INFO:Checking exceptions
2023-01-09 00:57:01,026:INFO:Preloading libraries
2023-01-09 00:57:01,027:INFO:Copying training dataset
2023-01-09 00:57:01,027:INFO:Plot type: auc
2023-01-09 00:57:01,058:INFO:Fitting Model
2023-01-09 00:57:01,058:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-01-09 00:57:01,058:INFO:Scoring test/hold-out set
2023-01-09 00:57:01,076:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\yellowbrick\base.py:246: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2023-01-09 00:57:01,093:INFO:Visual Rendered Successfully
2023-01-09 00:57:01,171:INFO:plot_model() successfully completed......................................
2023-01-09 00:57:01,172:INFO:Initializing evaluate_model()
2023-01-09 00:57:01,172:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-01-09 00:57:01,177:INFO:Initializing plot_model()
2023-01-09 00:57:01,177:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B79FC9A30>, system=True)
2023-01-09 00:57:01,177:INFO:Checking exceptions
2023-01-09 00:57:01,178:INFO:Preloading libraries
2023-01-09 00:57:01,178:INFO:Copying training dataset
2023-01-09 00:57:01,178:INFO:Plot type: pipeline
2023-01-09 00:57:01,233:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:575: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2023-01-09 00:57:01,233:INFO:Visual Rendered Successfully
2023-01-09 00:57:01,311:INFO:plot_model() successfully completed......................................
2023-01-09 00:57:49,005:INFO:PyCaret ClassificationExperiment
2023-01-09 00:57:49,005:INFO:Logging name: clf-default-name
2023-01-09 00:57:49,005:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 00:57:49,005:INFO:version 3.0.0.rc6
2023-01-09 00:57:49,005:INFO:Initializing setup()
2023-01-09 00:57:49,006:INFO:self.USI: 48ef
2023-01-09 00:57:49,006:INFO:self._variable_keys: {'fold_groups_param', 'log_plots_param', 'is_multiclass', 'fold_generator', 'fix_imbalance', 'data', 'idx', 'y_train', 'pipeline', 'memory', 'target_param', 'fold_shuffle_param', 'gpu_param', 'X_test', 'y_test', 'gpu_n_jobs_param', 'USI', 'y', 'logging_param', 'html_param', 'seed', '_ml_usecase', 'X', 'n_jobs_param', '_available_plots', 'exp_name_log', 'exp_id', 'X_train'}
2023-01-09 00:57:49,006:INFO:Checking environment
2023-01-09 00:57:49,006:INFO:python_version: 3.9.15
2023-01-09 00:57:49,006:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-09 00:57:49,006:INFO:machine: AMD64
2023-01-09 00:57:49,006:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-09 00:57:49,006:INFO:Memory: svmem(total=17010110464, available=3636137984, percent=78.6, used=13373972480, free=3636137984)
2023-01-09 00:57:49,006:INFO:Physical Core: 6
2023-01-09 00:57:49,006:INFO:Logical Core: 12
2023-01-09 00:57:49,006:INFO:Checking libraries
2023-01-09 00:57:49,006:INFO:System:
2023-01-09 00:57:49,006:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-09 00:57:49,007:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-09 00:57:49,007:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-09 00:57:49,007:INFO:PyCaret required dependencies:
2023-01-09 00:57:49,007:INFO:                 pip: 22.3.1
2023-01-09 00:57:49,007:INFO:          setuptools: 65.6.3
2023-01-09 00:57:49,007:INFO:             pycaret: 3.0.0rc6
2023-01-09 00:57:49,007:INFO:             IPython: 8.8.0
2023-01-09 00:57:49,007:INFO:          ipywidgets: 8.0.4
2023-01-09 00:57:49,007:INFO:                tqdm: 4.64.1
2023-01-09 00:57:49,007:INFO:               numpy: 1.22.4
2023-01-09 00:57:49,007:INFO:              pandas: 1.5.2
2023-01-09 00:57:49,007:INFO:              jinja2: 3.1.2
2023-01-09 00:57:49,007:INFO:               scipy: 1.9.3
2023-01-09 00:57:49,007:INFO:              joblib: 1.2.0
2023-01-09 00:57:49,007:INFO:             sklearn: 1.1.3
2023-01-09 00:57:49,007:INFO:                pyod: 1.0.7
2023-01-09 00:57:49,007:INFO:            imblearn: 0.10.1
2023-01-09 00:57:49,007:INFO:   category_encoders: 2.5.1.post0
2023-01-09 00:57:49,007:INFO:            lightgbm: 3.3.4
2023-01-09 00:57:49,007:INFO:               numba: 0.56.4
2023-01-09 00:57:49,008:INFO:            requests: 2.28.1
2023-01-09 00:57:49,008:INFO:          matplotlib: 3.6.2
2023-01-09 00:57:49,008:INFO:          scikitplot: 0.3.7
2023-01-09 00:57:49,008:INFO:         yellowbrick: 1.5
2023-01-09 00:57:49,008:INFO:              plotly: 5.11.0
2023-01-09 00:57:49,008:INFO:             kaleido: 0.2.1
2023-01-09 00:57:49,008:INFO:         statsmodels: 0.13.5
2023-01-09 00:57:49,008:INFO:              sktime: 0.14.1
2023-01-09 00:57:49,008:INFO:               tbats: 1.1.2
2023-01-09 00:57:49,008:INFO:            pmdarima: 2.0.2
2023-01-09 00:57:49,008:INFO:              psutil: 5.9.0
2023-01-09 00:57:49,008:INFO:PyCaret optional dependencies:
2023-01-09 00:57:49,008:INFO:                shap: Not installed
2023-01-09 00:57:49,008:INFO:           interpret: Not installed
2023-01-09 00:57:49,009:INFO:                umap: Not installed
2023-01-09 00:57:49,009:INFO:    pandas_profiling: 3.6.2
2023-01-09 00:57:49,009:INFO:  explainerdashboard: Not installed
2023-01-09 00:57:49,009:INFO:             autoviz: Not installed
2023-01-09 00:57:49,009:INFO:           fairlearn: Not installed
2023-01-09 00:57:49,009:INFO:             xgboost: Not installed
2023-01-09 00:57:49,009:INFO:            catboost: Not installed
2023-01-09 00:57:49,009:INFO:              kmodes: Not installed
2023-01-09 00:57:49,009:INFO:             mlxtend: Not installed
2023-01-09 00:57:49,009:INFO:       statsforecast: Not installed
2023-01-09 00:57:49,009:INFO:        tune_sklearn: Not installed
2023-01-09 00:57:49,009:INFO:                 ray: Not installed
2023-01-09 00:57:49,009:INFO:            hyperopt: Not installed
2023-01-09 00:57:49,009:INFO:              optuna: Not installed
2023-01-09 00:57:49,009:INFO:               skopt: Not installed
2023-01-09 00:57:49,010:INFO:              mlflow: Not installed
2023-01-09 00:57:49,010:INFO:              gradio: Not installed
2023-01-09 00:57:49,010:INFO:             fastapi: Not installed
2023-01-09 00:57:49,010:INFO:             uvicorn: Not installed
2023-01-09 00:57:49,010:INFO:              m2cgen: Not installed
2023-01-09 00:57:49,010:INFO:           evidently: Not installed
2023-01-09 00:57:49,010:INFO:                nltk: Not installed
2023-01-09 00:57:49,010:INFO:            pyLDAvis: Not installed
2023-01-09 00:57:49,010:INFO:              gensim: Not installed
2023-01-09 00:57:49,010:INFO:               spacy: Not installed
2023-01-09 00:57:49,010:INFO:           wordcloud: Not installed
2023-01-09 00:57:49,010:INFO:            textblob: Not installed
2023-01-09 00:57:49,010:INFO:               fugue: Not installed
2023-01-09 00:57:49,010:INFO:           streamlit: 1.16.0
2023-01-09 00:57:49,010:INFO:             prophet: Not installed
2023-01-09 00:57:49,010:INFO:None
2023-01-09 00:57:49,010:INFO:Set up data.
2023-01-09 00:57:49,015:INFO:Set up train/test split.
2023-01-09 00:57:49,018:INFO:Set up index.
2023-01-09 00:57:49,018:INFO:Set up folding strategy.
2023-01-09 00:57:49,018:INFO:Assigning column types.
2023-01-09 00:57:49,021:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 00:57:49,068:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:57:49,068:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:57:49,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,138:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 00:57:49,139:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:57:49,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,166:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 00:57:49,208:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:57:49,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 00:57:49,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,301:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 00:57:49,370:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,439:INFO:Preparing preprocessing pipeline...
2023-01-09 00:57:49,440:INFO:Set up label encoding.
2023-01-09 00:57:49,440:INFO:Set up simple imputation.
2023-01-09 00:57:49,477:INFO:Finished creating preprocessing pipeline.
2023-01-09 00:57:49,480:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 00:57:49,480:INFO:Creating final display dataframe.
2023-01-09 00:57:49,663:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               3652
1                        Target                                            species
2                   Target type                                         Multiclass
3                Target mapping  Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...
4           Original data shape                                           (150, 5)
5        Transformed data shape                                           (150, 5)
6   Transformed train set shape                                           (105, 5)
7    Transformed test set shape                                            (45, 5)
8              Numeric features                                                  4
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               48ef
2023-01-09 00:57:49,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 00:57:49,814:INFO:setup() successfully completed in 0.81s...............
2023-01-09 00:57:49,817:INFO:Initializing compare_models()
2023-01-09 00:57:49,817:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 00:57:49,818:INFO:Checking exceptions
2023-01-09 00:57:49,820:INFO:Preparing display monitor
2023-01-09 00:57:49,822:INFO:Initializing Logistic Regression
2023-01-09 00:57:49,822:INFO:Total runtime is 0.0 minutes
2023-01-09 00:57:49,823:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:49,823:INFO:Initializing create_model()
2023-01-09 00:57:49,823:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:49,823:INFO:Checking exceptions
2023-01-09 00:57:49,823:INFO:Importing libraries
2023-01-09 00:57:49,823:INFO:Copying training dataset
2023-01-09 00:57:49,825:INFO:Defining folds
2023-01-09 00:57:49,825:INFO:Declaring metric variables
2023-01-09 00:57:49,825:INFO:Importing untrained model
2023-01-09 00:57:49,825:INFO:Logistic Regression Imported successfully
2023-01-09 00:57:49,825:INFO:Starting cross validation
2023-01-09 00:57:49,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:50,175:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,178:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,181:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,193:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,197:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,197:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,199:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,201:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,220:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,222:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,222:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,223:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,226:INFO:Calculating mean and std
2023-01-09 00:57:50,226:INFO:Creating metrics dataframe
2023-01-09 00:57:50,230:INFO:Uploading results into container
2023-01-09 00:57:50,230:INFO:Uploading model into container now
2023-01-09 00:57:50,231:INFO:_master_model_container: 1
2023-01-09 00:57:50,231:INFO:_display_container: 2
2023-01-09 00:57:50,231:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3652, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 00:57:50,231:INFO:create_model() successfully completed......................................
2023-01-09 00:57:50,318:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:50,318:INFO:Creating metrics dataframe
2023-01-09 00:57:50,322:INFO:Initializing K Neighbors Classifier
2023-01-09 00:57:50,322:INFO:Total runtime is 0.008332153161366781 minutes
2023-01-09 00:57:50,322:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:50,322:INFO:Initializing create_model()
2023-01-09 00:57:50,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:50,322:INFO:Checking exceptions
2023-01-09 00:57:50,323:INFO:Importing libraries
2023-01-09 00:57:50,323:INFO:Copying training dataset
2023-01-09 00:57:50,325:INFO:Defining folds
2023-01-09 00:57:50,325:INFO:Declaring metric variables
2023-01-09 00:57:50,326:INFO:Importing untrained model
2023-01-09 00:57:50,326:INFO:K Neighbors Classifier Imported successfully
2023-01-09 00:57:50,326:INFO:Starting cross validation
2023-01-09 00:57:50,327:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:50,444:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,447:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,448:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,450:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,452:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,453:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,459:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,459:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,462:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,465:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,465:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,466:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,468:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,469:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,470:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,471:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,473:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,475:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,476:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,477:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,481:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,483:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,484:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,485:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,485:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,486:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,487:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,490:INFO:Calculating mean and std
2023-01-09 00:57:50,490:INFO:Creating metrics dataframe
2023-01-09 00:57:50,493:INFO:Uploading results into container
2023-01-09 00:57:50,494:INFO:Uploading model into container now
2023-01-09 00:57:50,494:INFO:_master_model_container: 2
2023-01-09 00:57:50,494:INFO:_display_container: 2
2023-01-09 00:57:50,495:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 00:57:50,495:INFO:create_model() successfully completed......................................
2023-01-09 00:57:50,578:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:50,579:INFO:Creating metrics dataframe
2023-01-09 00:57:50,583:INFO:Initializing Naive Bayes
2023-01-09 00:57:50,583:INFO:Total runtime is 0.012687083085378012 minutes
2023-01-09 00:57:50,583:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:50,583:INFO:Initializing create_model()
2023-01-09 00:57:50,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:50,583:INFO:Checking exceptions
2023-01-09 00:57:50,583:INFO:Importing libraries
2023-01-09 00:57:50,583:INFO:Copying training dataset
2023-01-09 00:57:50,585:INFO:Defining folds
2023-01-09 00:57:50,585:INFO:Declaring metric variables
2023-01-09 00:57:50,586:INFO:Importing untrained model
2023-01-09 00:57:50,586:INFO:Naive Bayes Imported successfully
2023-01-09 00:57:50,586:INFO:Starting cross validation
2023-01-09 00:57:50,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:50,643:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,646:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,649:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,651:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,652:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,654:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,658:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,660:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,661:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,665:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,667:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,670:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,673:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,675:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,675:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,676:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,677:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,677:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,677:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,678:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,683:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,685:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,686:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,690:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,691:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,694:INFO:Calculating mean and std
2023-01-09 00:57:50,694:INFO:Creating metrics dataframe
2023-01-09 00:57:50,697:INFO:Uploading results into container
2023-01-09 00:57:50,697:INFO:Uploading model into container now
2023-01-09 00:57:50,698:INFO:_master_model_container: 3
2023-01-09 00:57:50,698:INFO:_display_container: 2
2023-01-09 00:57:50,698:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 00:57:50,698:INFO:create_model() successfully completed......................................
2023-01-09 00:57:50,771:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:50,771:INFO:Creating metrics dataframe
2023-01-09 00:57:50,776:INFO:Initializing Decision Tree Classifier
2023-01-09 00:57:50,776:INFO:Total runtime is 0.015895175933837893 minutes
2023-01-09 00:57:50,777:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:50,777:INFO:Initializing create_model()
2023-01-09 00:57:50,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:50,777:INFO:Checking exceptions
2023-01-09 00:57:50,777:INFO:Importing libraries
2023-01-09 00:57:50,777:INFO:Copying training dataset
2023-01-09 00:57:50,779:INFO:Defining folds
2023-01-09 00:57:50,779:INFO:Declaring metric variables
2023-01-09 00:57:50,779:INFO:Importing untrained model
2023-01-09 00:57:50,779:INFO:Decision Tree Classifier Imported successfully
2023-01-09 00:57:50,779:INFO:Starting cross validation
2023-01-09 00:57:50,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:50,836:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,837:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,838:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,839:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,840:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,840:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,841:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,843:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,844:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,845:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,846:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,848:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,853:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,855:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,856:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,860:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,862:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,863:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,863:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,864:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,864:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,865:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,869:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,870:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,871:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,873:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,874:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,875:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:50,877:INFO:Calculating mean and std
2023-01-09 00:57:50,878:INFO:Creating metrics dataframe
2023-01-09 00:57:50,881:INFO:Uploading results into container
2023-01-09 00:57:50,881:INFO:Uploading model into container now
2023-01-09 00:57:50,881:INFO:_master_model_container: 4
2023-01-09 00:57:50,882:INFO:_display_container: 2
2023-01-09 00:57:50,882:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3652, splitter='best')
2023-01-09 00:57:50,882:INFO:create_model() successfully completed......................................
2023-01-09 00:57:50,956:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:50,956:INFO:Creating metrics dataframe
2023-01-09 00:57:50,960:INFO:Initializing SVM - Linear Kernel
2023-01-09 00:57:50,960:INFO:Total runtime is 0.018970147768656416 minutes
2023-01-09 00:57:50,960:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:50,960:INFO:Initializing create_model()
2023-01-09 00:57:50,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:50,960:INFO:Checking exceptions
2023-01-09 00:57:50,960:INFO:Importing libraries
2023-01-09 00:57:50,960:INFO:Copying training dataset
2023-01-09 00:57:50,962:INFO:Defining folds
2023-01-09 00:57:50,962:INFO:Declaring metric variables
2023-01-09 00:57:50,962:INFO:Importing untrained model
2023-01-09 00:57:50,962:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 00:57:50,962:INFO:Starting cross validation
2023-01-09 00:57:50,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:51,013:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,016:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,018:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,019:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,020:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,022:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,025:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,028:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,029:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:51,030:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,031:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,033:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,034:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,035:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,035:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:51,036:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:51,037:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,037:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,042:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,043:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,043:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,044:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,045:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,046:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,047:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,049:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,049:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:51,050:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,051:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,053:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,054:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,054:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,055:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,056:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:51,057:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,059:INFO:Calculating mean and std
2023-01-09 00:57:51,059:INFO:Creating metrics dataframe
2023-01-09 00:57:51,062:INFO:Uploading results into container
2023-01-09 00:57:51,063:INFO:Uploading model into container now
2023-01-09 00:57:51,063:INFO:_master_model_container: 5
2023-01-09 00:57:51,063:INFO:_display_container: 2
2023-01-09 00:57:51,063:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3652, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 00:57:51,063:INFO:create_model() successfully completed......................................
2023-01-09 00:57:51,137:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:51,137:INFO:Creating metrics dataframe
2023-01-09 00:57:51,141:INFO:Initializing Ridge Classifier
2023-01-09 00:57:51,141:INFO:Total runtime is 0.021976427237192793 minutes
2023-01-09 00:57:51,141:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:51,141:INFO:Initializing create_model()
2023-01-09 00:57:51,141:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:51,141:INFO:Checking exceptions
2023-01-09 00:57:51,142:INFO:Importing libraries
2023-01-09 00:57:51,142:INFO:Copying training dataset
2023-01-09 00:57:51,143:INFO:Defining folds
2023-01-09 00:57:51,143:INFO:Declaring metric variables
2023-01-09 00:57:51,143:INFO:Importing untrained model
2023-01-09 00:57:51,144:INFO:Ridge Classifier Imported successfully
2023-01-09 00:57:51,144:INFO:Starting cross validation
2023-01-09 00:57:51,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:51,184:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,187:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,189:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,191:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,194:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,198:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,205:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,207:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,209:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,211:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,213:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,214:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,214:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,215:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,216:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,221:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,222:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,223:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,226:INFO:Calculating mean and std
2023-01-09 00:57:51,226:INFO:Creating metrics dataframe
2023-01-09 00:57:51,229:INFO:Uploading results into container
2023-01-09 00:57:51,230:INFO:Uploading model into container now
2023-01-09 00:57:51,230:INFO:_master_model_container: 6
2023-01-09 00:57:51,230:INFO:_display_container: 2
2023-01-09 00:57:51,230:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=3652, solver='auto', tol=0.001)
2023-01-09 00:57:51,230:INFO:create_model() successfully completed......................................
2023-01-09 00:57:51,304:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:51,304:INFO:Creating metrics dataframe
2023-01-09 00:57:51,308:INFO:Initializing Random Forest Classifier
2023-01-09 00:57:51,308:INFO:Total runtime is 0.02477368513743083 minutes
2023-01-09 00:57:51,308:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:51,308:INFO:Initializing create_model()
2023-01-09 00:57:51,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:51,309:INFO:Checking exceptions
2023-01-09 00:57:51,309:INFO:Importing libraries
2023-01-09 00:57:51,309:INFO:Copying training dataset
2023-01-09 00:57:51,310:INFO:Defining folds
2023-01-09 00:57:51,310:INFO:Declaring metric variables
2023-01-09 00:57:51,310:INFO:Importing untrained model
2023-01-09 00:57:51,312:INFO:Random Forest Classifier Imported successfully
2023-01-09 00:57:51,312:INFO:Starting cross validation
2023-01-09 00:57:51,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:51,662:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,664:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,666:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,667:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,669:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,689:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,691:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,691:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,693:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,694:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,695:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,698:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,699:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,702:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,703:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,705:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,709:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,710:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,711:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,712:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,714:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,716:INFO:Calculating mean and std
2023-01-09 00:57:51,717:INFO:Creating metrics dataframe
2023-01-09 00:57:51,720:INFO:Uploading results into container
2023-01-09 00:57:51,720:INFO:Uploading model into container now
2023-01-09 00:57:51,721:INFO:_master_model_container: 7
2023-01-09 00:57:51,721:INFO:_display_container: 2
2023-01-09 00:57:51,721:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3652, verbose=0, warm_start=False)
2023-01-09 00:57:51,721:INFO:create_model() successfully completed......................................
2023-01-09 00:57:51,794:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:51,795:INFO:Creating metrics dataframe
2023-01-09 00:57:51,799:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 00:57:51,799:INFO:Total runtime is 0.03295588493347168 minutes
2023-01-09 00:57:51,799:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:51,799:INFO:Initializing create_model()
2023-01-09 00:57:51,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:51,799:INFO:Checking exceptions
2023-01-09 00:57:51,799:INFO:Importing libraries
2023-01-09 00:57:51,799:INFO:Copying training dataset
2023-01-09 00:57:51,801:INFO:Defining folds
2023-01-09 00:57:51,801:INFO:Declaring metric variables
2023-01-09 00:57:51,801:INFO:Importing untrained model
2023-01-09 00:57:51,801:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 00:57:51,801:INFO:Starting cross validation
2023-01-09 00:57:51,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:51,858:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,861:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,863:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,865:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,867:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,869:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,872:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,874:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,875:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,876:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,877:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,877:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,878:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,879:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,880:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,885:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,886:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,886:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,887:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,888:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,888:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,889:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,889:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,889:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,891:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,892:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,893:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,893:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,894:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,894:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:51,896:INFO:Calculating mean and std
2023-01-09 00:57:51,897:INFO:Creating metrics dataframe
2023-01-09 00:57:51,900:INFO:Uploading results into container
2023-01-09 00:57:51,900:INFO:Uploading model into container now
2023-01-09 00:57:51,900:INFO:_master_model_container: 8
2023-01-09 00:57:51,900:INFO:_display_container: 2
2023-01-09 00:57:51,901:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:57:51,901:INFO:create_model() successfully completed......................................
2023-01-09 00:57:51,975:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:51,975:INFO:Creating metrics dataframe
2023-01-09 00:57:51,979:INFO:Initializing Ada Boost Classifier
2023-01-09 00:57:51,979:INFO:Total runtime is 0.03595347801844279 minutes
2023-01-09 00:57:51,979:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:51,979:INFO:Initializing create_model()
2023-01-09 00:57:51,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:51,979:INFO:Checking exceptions
2023-01-09 00:57:51,979:INFO:Importing libraries
2023-01-09 00:57:51,979:INFO:Copying training dataset
2023-01-09 00:57:51,981:INFO:Defining folds
2023-01-09 00:57:51,981:INFO:Declaring metric variables
2023-01-09 00:57:51,981:INFO:Importing untrained model
2023-01-09 00:57:51,982:INFO:Ada Boost Classifier Imported successfully
2023-01-09 00:57:51,982:INFO:Starting cross validation
2023-01-09 00:57:51,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:52,149:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,151:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,152:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,159:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,160:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,162:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,174:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,175:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,176:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,177:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,179:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,180:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,182:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,184:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,187:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,188:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,189:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,189:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,191:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,192:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,195:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,196:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,197:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,200:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,202:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,203:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,206:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,207:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,208:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,209:INFO:Calculating mean and std
2023-01-09 00:57:52,209:INFO:Creating metrics dataframe
2023-01-09 00:57:52,212:INFO:Uploading results into container
2023-01-09 00:57:52,213:INFO:Uploading model into container now
2023-01-09 00:57:52,213:INFO:_master_model_container: 9
2023-01-09 00:57:52,213:INFO:_display_container: 2
2023-01-09 00:57:52,213:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3652)
2023-01-09 00:57:52,213:INFO:create_model() successfully completed......................................
2023-01-09 00:57:52,291:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:52,292:INFO:Creating metrics dataframe
2023-01-09 00:57:52,297:INFO:Initializing Gradient Boosting Classifier
2023-01-09 00:57:52,297:INFO:Total runtime is 0.04125601450602214 minutes
2023-01-09 00:57:52,297:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:52,297:INFO:Initializing create_model()
2023-01-09 00:57:52,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:52,297:INFO:Checking exceptions
2023-01-09 00:57:52,297:INFO:Importing libraries
2023-01-09 00:57:52,297:INFO:Copying training dataset
2023-01-09 00:57:52,300:INFO:Defining folds
2023-01-09 00:57:52,300:INFO:Declaring metric variables
2023-01-09 00:57:52,300:INFO:Importing untrained model
2023-01-09 00:57:52,300:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 00:57:52,300:INFO:Starting cross validation
2023-01-09 00:57:52,301:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:52,653:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,654:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,656:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,668:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,671:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,673:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,692:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,693:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,695:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,695:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,697:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,698:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,699:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,700:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,702:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,702:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,704:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,707:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,714:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,715:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,718:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,719:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,721:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,726:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,728:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,729:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,732:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,733:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,734:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,735:INFO:Calculating mean and std
2023-01-09 00:57:52,736:INFO:Creating metrics dataframe
2023-01-09 00:57:52,739:INFO:Uploading results into container
2023-01-09 00:57:52,740:INFO:Uploading model into container now
2023-01-09 00:57:52,740:INFO:_master_model_container: 10
2023-01-09 00:57:52,740:INFO:_display_container: 2
2023-01-09 00:57:52,740:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3652, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 00:57:52,740:INFO:create_model() successfully completed......................................
2023-01-09 00:57:52,814:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:52,815:INFO:Creating metrics dataframe
2023-01-09 00:57:52,818:INFO:Initializing Linear Discriminant Analysis
2023-01-09 00:57:52,818:INFO:Total runtime is 0.04993922313054403 minutes
2023-01-09 00:57:52,819:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:52,819:INFO:Initializing create_model()
2023-01-09 00:57:52,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:52,819:INFO:Checking exceptions
2023-01-09 00:57:52,819:INFO:Importing libraries
2023-01-09 00:57:52,819:INFO:Copying training dataset
2023-01-09 00:57:52,820:INFO:Defining folds
2023-01-09 00:57:52,820:INFO:Declaring metric variables
2023-01-09 00:57:52,820:INFO:Importing untrained model
2023-01-09 00:57:52,821:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 00:57:52,821:INFO:Starting cross validation
2023-01-09 00:57:52,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:52,879:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,881:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,882:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,884:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,884:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,886:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,888:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,889:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,890:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,890:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,891:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,893:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,895:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,897:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,898:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,899:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,900:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,901:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,902:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,904:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,904:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,905:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,905:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,912:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,913:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,916:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:52,918:INFO:Calculating mean and std
2023-01-09 00:57:52,919:INFO:Creating metrics dataframe
2023-01-09 00:57:52,922:INFO:Uploading results into container
2023-01-09 00:57:52,922:INFO:Uploading model into container now
2023-01-09 00:57:52,923:INFO:_master_model_container: 11
2023-01-09 00:57:52,923:INFO:_display_container: 2
2023-01-09 00:57:52,923:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 00:57:52,923:INFO:create_model() successfully completed......................................
2023-01-09 00:57:52,997:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:52,997:INFO:Creating metrics dataframe
2023-01-09 00:57:53,001:INFO:Initializing Extra Trees Classifier
2023-01-09 00:57:53,001:INFO:Total runtime is 0.052987960974375414 minutes
2023-01-09 00:57:53,001:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:53,002:INFO:Initializing create_model()
2023-01-09 00:57:53,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:53,002:INFO:Checking exceptions
2023-01-09 00:57:53,002:INFO:Importing libraries
2023-01-09 00:57:53,002:INFO:Copying training dataset
2023-01-09 00:57:53,003:INFO:Defining folds
2023-01-09 00:57:53,004:INFO:Declaring metric variables
2023-01-09 00:57:53,004:INFO:Importing untrained model
2023-01-09 00:57:53,004:INFO:Extra Trees Classifier Imported successfully
2023-01-09 00:57:53,004:INFO:Starting cross validation
2023-01-09 00:57:53,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:53,310:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,314:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,316:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,320:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,323:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,324:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,325:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,328:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,328:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,329:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,331:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,343:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,343:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,345:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,345:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,347:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,347:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,350:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,351:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,352:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,353:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,354:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,355:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,365:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,366:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,367:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,369:INFO:Calculating mean and std
2023-01-09 00:57:53,369:INFO:Creating metrics dataframe
2023-01-09 00:57:53,372:INFO:Uploading results into container
2023-01-09 00:57:53,373:INFO:Uploading model into container now
2023-01-09 00:57:53,373:INFO:_master_model_container: 12
2023-01-09 00:57:53,373:INFO:_display_container: 2
2023-01-09 00:57:53,373:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3652, verbose=0, warm_start=False)
2023-01-09 00:57:53,373:INFO:create_model() successfully completed......................................
2023-01-09 00:57:53,449:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:53,449:INFO:Creating metrics dataframe
2023-01-09 00:57:53,453:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 00:57:53,453:INFO:Total runtime is 0.06052042245864869 minutes
2023-01-09 00:57:53,453:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:53,453:INFO:Initializing create_model()
2023-01-09 00:57:53,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:53,454:INFO:Checking exceptions
2023-01-09 00:57:53,454:INFO:Importing libraries
2023-01-09 00:57:53,454:INFO:Copying training dataset
2023-01-09 00:57:53,455:INFO:Defining folds
2023-01-09 00:57:53,455:INFO:Declaring metric variables
2023-01-09 00:57:53,455:INFO:Importing untrained model
2023-01-09 00:57:53,456:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 00:57:53,456:INFO:Starting cross validation
2023-01-09 00:57:53,456:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:53,553:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,555:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,556:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,557:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,558:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,558:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,559:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,560:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,562:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,563:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,564:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,566:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,575:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,576:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,576:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,578:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,578:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,579:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,580:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,582:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,583:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,587:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,588:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,589:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,590:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,594:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,595:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,596:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,598:INFO:Calculating mean and std
2023-01-09 00:57:53,599:INFO:Creating metrics dataframe
2023-01-09 00:57:53,602:INFO:Uploading results into container
2023-01-09 00:57:53,603:INFO:Uploading model into container now
2023-01-09 00:57:53,603:INFO:_master_model_container: 13
2023-01-09 00:57:53,603:INFO:_display_container: 2
2023-01-09 00:57:53,604:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3652, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 00:57:53,604:INFO:create_model() successfully completed......................................
2023-01-09 00:57:53,680:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:53,680:INFO:Creating metrics dataframe
2023-01-09 00:57:53,684:INFO:Initializing Dummy Classifier
2023-01-09 00:57:53,684:INFO:Total runtime is 0.06437431971232098 minutes
2023-01-09 00:57:53,684:INFO:SubProcess create_model() called ==================================
2023-01-09 00:57:53,684:INFO:Initializing create_model()
2023-01-09 00:57:53,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7A045EB0>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:53,684:INFO:Checking exceptions
2023-01-09 00:57:53,684:INFO:Importing libraries
2023-01-09 00:57:53,684:INFO:Copying training dataset
2023-01-09 00:57:53,686:INFO:Defining folds
2023-01-09 00:57:53,686:INFO:Declaring metric variables
2023-01-09 00:57:53,686:INFO:Importing untrained model
2023-01-09 00:57:53,686:INFO:Dummy Classifier Imported successfully
2023-01-09 00:57:53,686:INFO:Starting cross validation
2023-01-09 00:57:53,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 00:57:53,737:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,739:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,739:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:53,741:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,742:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:53,744:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,749:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,751:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,752:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,752:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,753:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,753:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:53,754:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:53,754:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,754:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,755:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:53,757:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,757:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,759:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,760:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:53,761:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,766:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,767:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,768:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:53,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,769:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,770:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,771:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,771:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:53,771:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:53,771:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,771:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,772:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,773:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 00:57:53,774:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 00:57:53,776:INFO:Calculating mean and std
2023-01-09 00:57:53,777:INFO:Creating metrics dataframe
2023-01-09 00:57:53,780:INFO:Uploading results into container
2023-01-09 00:57:53,780:INFO:Uploading model into container now
2023-01-09 00:57:53,781:INFO:_master_model_container: 14
2023-01-09 00:57:53,781:INFO:_display_container: 2
2023-01-09 00:57:53,781:INFO:DummyClassifier(constant=None, random_state=3652, strategy='prior')
2023-01-09 00:57:53,781:INFO:create_model() successfully completed......................................
2023-01-09 00:57:53,856:INFO:SubProcess create_model() end ==================================
2023-01-09 00:57:53,856:INFO:Creating metrics dataframe
2023-01-09 00:57:53,861:INFO:Initializing create_model()
2023-01-09 00:57:53,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 00:57:53,861:INFO:Checking exceptions
2023-01-09 00:57:53,862:INFO:Importing libraries
2023-01-09 00:57:53,862:INFO:Copying training dataset
2023-01-09 00:57:53,863:INFO:Defining folds
2023-01-09 00:57:53,863:INFO:Declaring metric variables
2023-01-09 00:57:53,864:INFO:Importing untrained model
2023-01-09 00:57:53,864:INFO:Declaring custom model
2023-01-09 00:57:53,864:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 00:57:53,864:INFO:Cross validation set to False
2023-01-09 00:57:53,864:INFO:Fitting Model
2023-01-09 00:57:53,887:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:57:53,887:INFO:create_model() successfully completed......................................
2023-01-09 00:57:53,978:INFO:_master_model_container: 14
2023-01-09 00:57:53,979:INFO:_display_container: 2
2023-01-09 00:57:53,979:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 00:57:53,979:INFO:compare_models() successfully completed......................................
2023-01-09 00:57:53,985:INFO:Initializing save_model()
2023-01-09 00:57:53,985:INFO:save_model(model=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), model_name=best_model, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-09 00:57:53,985:INFO:Adding model into prep_pipe
2023-01-09 00:57:53,989:INFO:best_model.pkl saved in current working directory
2023-01-09 00:57:53,993:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2023-01-09 00:57:53,993:INFO:save_model() successfully completed......................................
2023-01-09 00:57:54,087:INFO:Initializing plot_model()
2023-01-09 00:57:54,087:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, system=True)
2023-01-09 00:57:54,087:INFO:Checking exceptions
2023-01-09 00:57:54,088:INFO:Preloading libraries
2023-01-09 00:57:54,088:INFO:Copying training dataset
2023-01-09 00:57:54,088:INFO:Plot type: auc
2023-01-09 00:57:54,117:INFO:Fitting Model
2023-01-09 00:57:54,117:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but QuadraticDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-01-09 00:57:54,118:INFO:Scoring test/hold-out set
2023-01-09 00:57:54,135:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\yellowbrick\base.py:246: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2023-01-09 00:57:54,152:INFO:Visual Rendered Successfully
2023-01-09 00:57:54,228:INFO:plot_model() successfully completed......................................
2023-01-09 00:57:54,228:INFO:Initializing evaluate_model()
2023-01-09 00:57:54,228:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-01-09 00:57:54,233:INFO:Initializing plot_model()
2023-01-09 00:57:54,233:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A297250>, system=True)
2023-01-09 00:57:54,233:INFO:Checking exceptions
2023-01-09 00:57:54,234:INFO:Preloading libraries
2023-01-09 00:57:54,234:INFO:Copying training dataset
2023-01-09 00:57:54,234:INFO:Plot type: pipeline
2023-01-09 00:57:54,294:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:575: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2023-01-09 00:57:54,295:INFO:Visual Rendered Successfully
2023-01-09 00:57:54,371:INFO:plot_model() successfully completed......................................
2023-01-09 01:08:29,440:INFO:PyCaret ClassificationExperiment
2023-01-09 01:08:29,441:INFO:Logging name: clf-default-name
2023-01-09 01:08:29,442:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 01:08:29,442:INFO:version 3.0.0.rc6
2023-01-09 01:08:29,442:INFO:Initializing setup()
2023-01-09 01:08:29,442:INFO:self.USI: 9f68
2023-01-09 01:08:29,442:INFO:self._variable_keys: {'fold_groups_param', 'log_plots_param', 'is_multiclass', 'fold_generator', 'fix_imbalance', 'data', 'idx', 'y_train', 'pipeline', 'memory', 'target_param', 'fold_shuffle_param', 'gpu_param', 'X_test', 'y_test', 'gpu_n_jobs_param', 'USI', 'y', 'logging_param', 'html_param', 'seed', '_ml_usecase', 'X', 'n_jobs_param', '_available_plots', 'exp_name_log', 'exp_id', 'X_train'}
2023-01-09 01:08:29,442:INFO:Checking environment
2023-01-09 01:08:29,442:INFO:python_version: 3.9.15
2023-01-09 01:08:29,442:INFO:python_build: ('main', 'Nov 24 2022 14:39:17')
2023-01-09 01:08:29,442:INFO:machine: AMD64
2023-01-09 01:08:29,442:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-09 01:08:29,442:INFO:Memory: svmem(total=17010110464, available=5253853184, percent=69.1, used=11756257280, free=5253853184)
2023-01-09 01:08:29,442:INFO:Physical Core: 6
2023-01-09 01:08:29,443:INFO:Logical Core: 12
2023-01-09 01:08:29,443:INFO:Checking libraries
2023-01-09 01:08:29,443:INFO:System:
2023-01-09 01:08:29,443:INFO:    python: 3.9.15 (main, Nov 24 2022, 14:39:17) [MSC v.1916 64 bit (AMD64)]
2023-01-09 01:08:29,443:INFO:executable: C:\Users\bayto\anaconda3\envs\automl_project\python.exe
2023-01-09 01:08:29,443:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-09 01:08:29,443:INFO:PyCaret required dependencies:
2023-01-09 01:08:29,443:INFO:                 pip: 22.3.1
2023-01-09 01:08:29,443:INFO:          setuptools: 65.6.3
2023-01-09 01:08:29,443:INFO:             pycaret: 3.0.0rc6
2023-01-09 01:08:29,443:INFO:             IPython: 8.8.0
2023-01-09 01:08:29,443:INFO:          ipywidgets: 8.0.4
2023-01-09 01:08:29,443:INFO:                tqdm: 4.64.1
2023-01-09 01:08:29,443:INFO:               numpy: 1.22.4
2023-01-09 01:08:29,443:INFO:              pandas: 1.5.2
2023-01-09 01:08:29,443:INFO:              jinja2: 3.1.2
2023-01-09 01:08:29,443:INFO:               scipy: 1.9.3
2023-01-09 01:08:29,444:INFO:              joblib: 1.2.0
2023-01-09 01:08:29,444:INFO:             sklearn: 1.1.3
2023-01-09 01:08:29,444:INFO:                pyod: 1.0.7
2023-01-09 01:08:29,444:INFO:            imblearn: 0.10.1
2023-01-09 01:08:29,444:INFO:   category_encoders: 2.5.1.post0
2023-01-09 01:08:29,444:INFO:            lightgbm: 3.3.4
2023-01-09 01:08:29,444:INFO:               numba: 0.56.4
2023-01-09 01:08:29,444:INFO:            requests: 2.28.1
2023-01-09 01:08:29,444:INFO:          matplotlib: 3.6.2
2023-01-09 01:08:29,444:INFO:          scikitplot: 0.3.7
2023-01-09 01:08:29,444:INFO:         yellowbrick: 1.5
2023-01-09 01:08:29,444:INFO:              plotly: 5.11.0
2023-01-09 01:08:29,444:INFO:             kaleido: 0.2.1
2023-01-09 01:08:29,444:INFO:         statsmodels: 0.13.5
2023-01-09 01:08:29,444:INFO:              sktime: 0.14.1
2023-01-09 01:08:29,445:INFO:               tbats: 1.1.2
2023-01-09 01:08:29,445:INFO:            pmdarima: 2.0.2
2023-01-09 01:08:29,445:INFO:              psutil: 5.9.0
2023-01-09 01:08:29,445:INFO:PyCaret optional dependencies:
2023-01-09 01:08:29,445:INFO:                shap: Not installed
2023-01-09 01:08:29,445:INFO:           interpret: Not installed
2023-01-09 01:08:29,445:INFO:                umap: Not installed
2023-01-09 01:08:29,445:INFO:    pandas_profiling: 3.6.2
2023-01-09 01:08:29,445:INFO:  explainerdashboard: Not installed
2023-01-09 01:08:29,445:INFO:             autoviz: Not installed
2023-01-09 01:08:29,445:INFO:           fairlearn: Not installed
2023-01-09 01:08:29,446:INFO:             xgboost: Not installed
2023-01-09 01:08:29,446:INFO:            catboost: Not installed
2023-01-09 01:08:29,446:INFO:              kmodes: Not installed
2023-01-09 01:08:29,446:INFO:             mlxtend: Not installed
2023-01-09 01:08:29,446:INFO:       statsforecast: Not installed
2023-01-09 01:08:29,446:INFO:        tune_sklearn: Not installed
2023-01-09 01:08:29,446:INFO:                 ray: Not installed
2023-01-09 01:08:29,446:INFO:            hyperopt: Not installed
2023-01-09 01:08:29,446:INFO:              optuna: Not installed
2023-01-09 01:08:29,446:INFO:               skopt: Not installed
2023-01-09 01:08:29,446:INFO:              mlflow: Not installed
2023-01-09 01:08:29,446:INFO:              gradio: Not installed
2023-01-09 01:08:29,446:INFO:             fastapi: Not installed
2023-01-09 01:08:29,446:INFO:             uvicorn: Not installed
2023-01-09 01:08:29,446:INFO:              m2cgen: Not installed
2023-01-09 01:08:29,446:INFO:           evidently: Not installed
2023-01-09 01:08:29,447:INFO:                nltk: Not installed
2023-01-09 01:08:29,447:INFO:            pyLDAvis: Not installed
2023-01-09 01:08:29,447:INFO:              gensim: Not installed
2023-01-09 01:08:29,447:INFO:               spacy: Not installed
2023-01-09 01:08:29,447:INFO:           wordcloud: Not installed
2023-01-09 01:08:29,447:INFO:            textblob: Not installed
2023-01-09 01:08:29,447:INFO:               fugue: Not installed
2023-01-09 01:08:29,447:INFO:           streamlit: 1.16.0
2023-01-09 01:08:29,447:INFO:             prophet: Not installed
2023-01-09 01:08:29,447:INFO:None
2023-01-09 01:08:29,447:INFO:Set up data.
2023-01-09 01:08:29,461:INFO:Set up train/test split.
2023-01-09 01:08:29,468:INFO:Set up index.
2023-01-09 01:08:29,468:INFO:Set up folding strategy.
2023-01-09 01:08:29,468:INFO:Assigning column types.
2023-01-09 01:08:29,472:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 01:08:29,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 01:08:29,516:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 01:08:29,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,585:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 01:08:29,585:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 01:08:29,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,611:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 01:08:29,655:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 01:08:29,681:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 01:08:29,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,747:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 01:08:29,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:29,888:INFO:Preparing preprocessing pipeline...
2023-01-09 01:08:29,889:INFO:Set up label encoding.
2023-01-09 01:08:29,889:INFO:Set up simple imputation.
2023-01-09 01:08:29,973:INFO:Finished creating preprocessing pipeline.
2023-01-09 01:08:29,976:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'con...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 01:08:29,977:INFO:Creating final display dataframe.
2023-01-09 01:08:30,311:INFO:Setup _display_container:                     Description             Value
0                    Session id              3260
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 33)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                32
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              9f68
2023-01-09 01:08:30,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:30,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:30,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:30,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 01:08:30,456:INFO:setup() successfully completed in 1.02s...............
2023-01-09 01:08:30,460:INFO:Initializing compare_models()
2023-01-09 01:08:30,460:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 01:08:30,461:INFO:Checking exceptions
2023-01-09 01:08:30,464:INFO:Preparing display monitor
2023-01-09 01:08:30,466:INFO:Initializing Logistic Regression
2023-01-09 01:08:30,466:INFO:Total runtime is 0.0 minutes
2023-01-09 01:08:30,466:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:30,466:INFO:Initializing create_model()
2023-01-09 01:08:30,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:30,466:INFO:Checking exceptions
2023-01-09 01:08:30,466:INFO:Importing libraries
2023-01-09 01:08:30,466:INFO:Copying training dataset
2023-01-09 01:08:30,468:INFO:Defining folds
2023-01-09 01:08:30,468:INFO:Declaring metric variables
2023-01-09 01:08:30,468:INFO:Importing untrained model
2023-01-09 01:08:30,468:INFO:Logistic Regression Imported successfully
2023-01-09 01:08:30,469:INFO:Starting cross validation
2023-01-09 01:08:30,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:36,420:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:36,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:36,586:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:36,593:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:36,613:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:36,625:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:36,626:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:36,628:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:36,636:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:36,638:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:36,646:INFO:Calculating mean and std
2023-01-09 01:08:36,647:INFO:Creating metrics dataframe
2023-01-09 01:08:36,653:INFO:Uploading results into container
2023-01-09 01:08:36,654:INFO:Uploading model into container now
2023-01-09 01:08:36,655:INFO:_master_model_container: 1
2023-01-09 01:08:36,655:INFO:_display_container: 2
2023-01-09 01:08:36,656:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3260, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 01:08:36,656:INFO:create_model() successfully completed......................................
2023-01-09 01:08:36,789:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:36,789:INFO:Creating metrics dataframe
2023-01-09 01:08:36,793:INFO:Initializing K Neighbors Classifier
2023-01-09 01:08:36,793:INFO:Total runtime is 0.10545412699381511 minutes
2023-01-09 01:08:36,793:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:36,793:INFO:Initializing create_model()
2023-01-09 01:08:36,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:36,794:INFO:Checking exceptions
2023-01-09 01:08:36,794:INFO:Importing libraries
2023-01-09 01:08:36,794:INFO:Copying training dataset
2023-01-09 01:08:36,796:INFO:Defining folds
2023-01-09 01:08:36,796:INFO:Declaring metric variables
2023-01-09 01:08:36,796:INFO:Importing untrained model
2023-01-09 01:08:36,797:INFO:K Neighbors Classifier Imported successfully
2023-01-09 01:08:36,797:INFO:Starting cross validation
2023-01-09 01:08:36,798:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:38,719:INFO:Calculating mean and std
2023-01-09 01:08:38,720:INFO:Creating metrics dataframe
2023-01-09 01:08:38,723:INFO:Uploading results into container
2023-01-09 01:08:38,723:INFO:Uploading model into container now
2023-01-09 01:08:38,724:INFO:_master_model_container: 2
2023-01-09 01:08:38,724:INFO:_display_container: 2
2023-01-09 01:08:38,724:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 01:08:38,724:INFO:create_model() successfully completed......................................
2023-01-09 01:08:38,808:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:38,808:INFO:Creating metrics dataframe
2023-01-09 01:08:38,812:INFO:Initializing Naive Bayes
2023-01-09 01:08:38,812:INFO:Total runtime is 0.1391102910041809 minutes
2023-01-09 01:08:38,812:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:38,812:INFO:Initializing create_model()
2023-01-09 01:08:38,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:38,812:INFO:Checking exceptions
2023-01-09 01:08:38,812:INFO:Importing libraries
2023-01-09 01:08:38,813:INFO:Copying training dataset
2023-01-09 01:08:38,814:INFO:Defining folds
2023-01-09 01:08:38,814:INFO:Declaring metric variables
2023-01-09 01:08:38,815:INFO:Importing untrained model
2023-01-09 01:08:38,815:INFO:Naive Bayes Imported successfully
2023-01-09 01:08:38,815:INFO:Starting cross validation
2023-01-09 01:08:38,816:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:38,892:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:38,899:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:38,903:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:38,911:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:38,914:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:38,915:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:38,929:INFO:Calculating mean and std
2023-01-09 01:08:38,930:INFO:Creating metrics dataframe
2023-01-09 01:08:38,933:INFO:Uploading results into container
2023-01-09 01:08:38,933:INFO:Uploading model into container now
2023-01-09 01:08:38,933:INFO:_master_model_container: 3
2023-01-09 01:08:38,933:INFO:_display_container: 2
2023-01-09 01:08:38,934:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 01:08:38,934:INFO:create_model() successfully completed......................................
2023-01-09 01:08:39,013:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:39,014:INFO:Creating metrics dataframe
2023-01-09 01:08:39,022:INFO:Initializing Decision Tree Classifier
2023-01-09 01:08:39,023:INFO:Total runtime is 0.14260276158650714 minutes
2023-01-09 01:08:39,023:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:39,023:INFO:Initializing create_model()
2023-01-09 01:08:39,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:39,023:INFO:Checking exceptions
2023-01-09 01:08:39,023:INFO:Importing libraries
2023-01-09 01:08:39,024:INFO:Copying training dataset
2023-01-09 01:08:39,028:INFO:Defining folds
2023-01-09 01:08:39,028:INFO:Declaring metric variables
2023-01-09 01:08:39,028:INFO:Importing untrained model
2023-01-09 01:08:39,028:INFO:Decision Tree Classifier Imported successfully
2023-01-09 01:08:39,029:INFO:Starting cross validation
2023-01-09 01:08:39,030:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:39,154:INFO:Calculating mean and std
2023-01-09 01:08:39,154:INFO:Creating metrics dataframe
2023-01-09 01:08:39,158:INFO:Uploading results into container
2023-01-09 01:08:39,158:INFO:Uploading model into container now
2023-01-09 01:08:39,159:INFO:_master_model_container: 4
2023-01-09 01:08:39,159:INFO:_display_container: 2
2023-01-09 01:08:39,159:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3260, splitter='best')
2023-01-09 01:08:39,159:INFO:create_model() successfully completed......................................
2023-01-09 01:08:39,237:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:39,237:INFO:Creating metrics dataframe
2023-01-09 01:08:39,241:INFO:Initializing SVM - Linear Kernel
2023-01-09 01:08:39,241:INFO:Total runtime is 0.14625328779220578 minutes
2023-01-09 01:08:39,241:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:39,241:INFO:Initializing create_model()
2023-01-09 01:08:39,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:39,241:INFO:Checking exceptions
2023-01-09 01:08:39,242:INFO:Importing libraries
2023-01-09 01:08:39,242:INFO:Copying training dataset
2023-01-09 01:08:39,244:INFO:Defining folds
2023-01-09 01:08:39,244:INFO:Declaring metric variables
2023-01-09 01:08:39,244:INFO:Importing untrained model
2023-01-09 01:08:39,244:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 01:08:39,245:INFO:Starting cross validation
2023-01-09 01:08:39,245:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:39,303:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:39,313:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:39,318:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:39,319:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:39,326:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:39,327:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:39,330:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:39,335:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:39,338:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:39,341:INFO:Calculating mean and std
2023-01-09 01:08:39,341:INFO:Creating metrics dataframe
2023-01-09 01:08:39,345:INFO:Uploading results into container
2023-01-09 01:08:39,345:INFO:Uploading model into container now
2023-01-09 01:08:39,345:INFO:_master_model_container: 5
2023-01-09 01:08:39,345:INFO:_display_container: 2
2023-01-09 01:08:39,346:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3260, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 01:08:39,346:INFO:create_model() successfully completed......................................
2023-01-09 01:08:39,423:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:39,423:INFO:Creating metrics dataframe
2023-01-09 01:08:39,427:INFO:Initializing Ridge Classifier
2023-01-09 01:08:39,427:INFO:Total runtime is 0.14935987393061317 minutes
2023-01-09 01:08:39,427:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:39,427:INFO:Initializing create_model()
2023-01-09 01:08:39,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:39,427:INFO:Checking exceptions
2023-01-09 01:08:39,427:INFO:Importing libraries
2023-01-09 01:08:39,427:INFO:Copying training dataset
2023-01-09 01:08:39,430:INFO:Defining folds
2023-01-09 01:08:39,430:INFO:Declaring metric variables
2023-01-09 01:08:39,430:INFO:Importing untrained model
2023-01-09 01:08:39,430:INFO:Ridge Classifier Imported successfully
2023-01-09 01:08:39,431:INFO:Starting cross validation
2023-01-09 01:08:39,431:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:39,476:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.93035e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 01:08:39,476:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.63767e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 01:08:39,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.64432e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 01:08:39,480:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.64827e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 01:08:39,485:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.64073e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 01:08:39,496:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.64097e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 01:08:39,502:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.95811e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 01:08:39,506:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.34084e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 01:08:39,512:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.96992e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 01:08:39,514:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=1.9672e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-01-09 01:08:39,536:INFO:Calculating mean and std
2023-01-09 01:08:39,537:INFO:Creating metrics dataframe
2023-01-09 01:08:39,540:INFO:Uploading results into container
2023-01-09 01:08:39,541:INFO:Uploading model into container now
2023-01-09 01:08:39,541:INFO:_master_model_container: 6
2023-01-09 01:08:39,541:INFO:_display_container: 2
2023-01-09 01:08:39,542:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=3260, solver='auto', tol=0.001)
2023-01-09 01:08:39,542:INFO:create_model() successfully completed......................................
2023-01-09 01:08:39,624:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:39,624:INFO:Creating metrics dataframe
2023-01-09 01:08:39,628:INFO:Initializing Random Forest Classifier
2023-01-09 01:08:39,628:INFO:Total runtime is 0.15270114739735918 minutes
2023-01-09 01:08:39,628:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:39,628:INFO:Initializing create_model()
2023-01-09 01:08:39,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:39,629:INFO:Checking exceptions
2023-01-09 01:08:39,629:INFO:Importing libraries
2023-01-09 01:08:39,629:INFO:Copying training dataset
2023-01-09 01:08:39,631:INFO:Defining folds
2023-01-09 01:08:39,631:INFO:Declaring metric variables
2023-01-09 01:08:39,631:INFO:Importing untrained model
2023-01-09 01:08:39,631:INFO:Random Forest Classifier Imported successfully
2023-01-09 01:08:39,631:INFO:Starting cross validation
2023-01-09 01:08:39,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:40,170:INFO:Calculating mean and std
2023-01-09 01:08:40,170:INFO:Creating metrics dataframe
2023-01-09 01:08:40,173:INFO:Uploading results into container
2023-01-09 01:08:40,174:INFO:Uploading model into container now
2023-01-09 01:08:40,174:INFO:_master_model_container: 7
2023-01-09 01:08:40,174:INFO:_display_container: 2
2023-01-09 01:08:40,174:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3260, verbose=0, warm_start=False)
2023-01-09 01:08:40,175:INFO:create_model() successfully completed......................................
2023-01-09 01:08:40,254:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:40,254:INFO:Creating metrics dataframe
2023-01-09 01:08:40,258:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 01:08:40,258:INFO:Total runtime is 0.16321056683858232 minutes
2023-01-09 01:08:40,258:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:40,258:INFO:Initializing create_model()
2023-01-09 01:08:40,258:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:40,258:INFO:Checking exceptions
2023-01-09 01:08:40,258:INFO:Importing libraries
2023-01-09 01:08:40,259:INFO:Copying training dataset
2023-01-09 01:08:40,260:INFO:Defining folds
2023-01-09 01:08:40,260:INFO:Declaring metric variables
2023-01-09 01:08:40,261:INFO:Importing untrained model
2023-01-09 01:08:40,261:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 01:08:40,261:INFO:Starting cross validation
2023-01-09 01:08:40,262:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:40,389:INFO:Calculating mean and std
2023-01-09 01:08:40,390:INFO:Creating metrics dataframe
2023-01-09 01:08:40,393:INFO:Uploading results into container
2023-01-09 01:08:40,393:INFO:Uploading model into container now
2023-01-09 01:08:40,394:INFO:_master_model_container: 8
2023-01-09 01:08:40,394:INFO:_display_container: 2
2023-01-09 01:08:40,394:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 01:08:40,394:INFO:create_model() successfully completed......................................
2023-01-09 01:08:40,473:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:40,473:INFO:Creating metrics dataframe
2023-01-09 01:08:40,477:INFO:Initializing Ada Boost Classifier
2023-01-09 01:08:40,477:INFO:Total runtime is 0.16685886383056636 minutes
2023-01-09 01:08:40,477:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:40,478:INFO:Initializing create_model()
2023-01-09 01:08:40,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:40,478:INFO:Checking exceptions
2023-01-09 01:08:40,478:INFO:Importing libraries
2023-01-09 01:08:40,478:INFO:Copying training dataset
2023-01-09 01:08:40,480:INFO:Defining folds
2023-01-09 01:08:40,480:INFO:Declaring metric variables
2023-01-09 01:08:40,480:INFO:Importing untrained model
2023-01-09 01:08:40,481:INFO:Ada Boost Classifier Imported successfully
2023-01-09 01:08:40,481:INFO:Starting cross validation
2023-01-09 01:08:40,482:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:40,803:INFO:Calculating mean and std
2023-01-09 01:08:40,804:INFO:Creating metrics dataframe
2023-01-09 01:08:40,807:INFO:Uploading results into container
2023-01-09 01:08:40,807:INFO:Uploading model into container now
2023-01-09 01:08:40,807:INFO:_master_model_container: 9
2023-01-09 01:08:40,807:INFO:_display_container: 2
2023-01-09 01:08:40,808:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3260)
2023-01-09 01:08:40,808:INFO:create_model() successfully completed......................................
2023-01-09 01:08:40,881:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:40,881:INFO:Creating metrics dataframe
2023-01-09 01:08:40,885:INFO:Initializing Gradient Boosting Classifier
2023-01-09 01:08:40,886:INFO:Total runtime is 0.1736747543017069 minutes
2023-01-09 01:08:40,886:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:40,886:INFO:Initializing create_model()
2023-01-09 01:08:40,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:40,886:INFO:Checking exceptions
2023-01-09 01:08:40,886:INFO:Importing libraries
2023-01-09 01:08:40,886:INFO:Copying training dataset
2023-01-09 01:08:40,888:INFO:Defining folds
2023-01-09 01:08:40,888:INFO:Declaring metric variables
2023-01-09 01:08:40,888:INFO:Importing untrained model
2023-01-09 01:08:40,888:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 01:08:40,889:INFO:Starting cross validation
2023-01-09 01:08:40,889:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:41,462:INFO:Calculating mean and std
2023-01-09 01:08:41,463:INFO:Creating metrics dataframe
2023-01-09 01:08:41,466:INFO:Uploading results into container
2023-01-09 01:08:41,466:INFO:Uploading model into container now
2023-01-09 01:08:41,466:INFO:_master_model_container: 10
2023-01-09 01:08:41,466:INFO:_display_container: 2
2023-01-09 01:08:41,467:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3260, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 01:08:41,467:INFO:create_model() successfully completed......................................
2023-01-09 01:08:41,547:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:41,547:INFO:Creating metrics dataframe
2023-01-09 01:08:41,551:INFO:Initializing Linear Discriminant Analysis
2023-01-09 01:08:41,551:INFO:Total runtime is 0.18476386864980057 minutes
2023-01-09 01:08:41,551:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:41,551:INFO:Initializing create_model()
2023-01-09 01:08:41,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:41,551:INFO:Checking exceptions
2023-01-09 01:08:41,551:INFO:Importing libraries
2023-01-09 01:08:41,551:INFO:Copying training dataset
2023-01-09 01:08:41,553:INFO:Defining folds
2023-01-09 01:08:41,553:INFO:Declaring metric variables
2023-01-09 01:08:41,553:INFO:Importing untrained model
2023-01-09 01:08:41,554:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 01:08:41,554:INFO:Starting cross validation
2023-01-09 01:08:41,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:41,666:INFO:Calculating mean and std
2023-01-09 01:08:41,666:INFO:Creating metrics dataframe
2023-01-09 01:08:41,669:INFO:Uploading results into container
2023-01-09 01:08:41,670:INFO:Uploading model into container now
2023-01-09 01:08:41,670:INFO:_master_model_container: 11
2023-01-09 01:08:41,670:INFO:_display_container: 2
2023-01-09 01:08:41,670:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 01:08:41,670:INFO:create_model() successfully completed......................................
2023-01-09 01:08:41,746:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:41,746:INFO:Creating metrics dataframe
2023-01-09 01:08:41,750:INFO:Initializing Extra Trees Classifier
2023-01-09 01:08:41,750:INFO:Total runtime is 0.18807481527328487 minutes
2023-01-09 01:08:41,750:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:41,750:INFO:Initializing create_model()
2023-01-09 01:08:41,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:41,750:INFO:Checking exceptions
2023-01-09 01:08:41,750:INFO:Importing libraries
2023-01-09 01:08:41,750:INFO:Copying training dataset
2023-01-09 01:08:41,752:INFO:Defining folds
2023-01-09 01:08:41,752:INFO:Declaring metric variables
2023-01-09 01:08:41,753:INFO:Importing untrained model
2023-01-09 01:08:41,753:INFO:Extra Trees Classifier Imported successfully
2023-01-09 01:08:41,753:INFO:Starting cross validation
2023-01-09 01:08:41,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:42,192:INFO:Calculating mean and std
2023-01-09 01:08:42,193:INFO:Creating metrics dataframe
2023-01-09 01:08:42,196:INFO:Uploading results into container
2023-01-09 01:08:42,196:INFO:Uploading model into container now
2023-01-09 01:08:42,196:INFO:_master_model_container: 12
2023-01-09 01:08:42,197:INFO:_display_container: 2
2023-01-09 01:08:42,197:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3260, verbose=0, warm_start=False)
2023-01-09 01:08:42,197:INFO:create_model() successfully completed......................................
2023-01-09 01:08:42,278:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:42,278:INFO:Creating metrics dataframe
2023-01-09 01:08:42,282:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 01:08:42,282:INFO:Total runtime is 0.19694254398345942 minutes
2023-01-09 01:08:42,282:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:42,282:INFO:Initializing create_model()
2023-01-09 01:08:42,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:42,282:INFO:Checking exceptions
2023-01-09 01:08:42,282:INFO:Importing libraries
2023-01-09 01:08:42,282:INFO:Copying training dataset
2023-01-09 01:08:42,284:INFO:Defining folds
2023-01-09 01:08:42,284:INFO:Declaring metric variables
2023-01-09 01:08:42,285:INFO:Importing untrained model
2023-01-09 01:08:42,285:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 01:08:42,285:INFO:Starting cross validation
2023-01-09 01:08:42,286:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:42,559:INFO:Calculating mean and std
2023-01-09 01:08:42,560:INFO:Creating metrics dataframe
2023-01-09 01:08:42,563:INFO:Uploading results into container
2023-01-09 01:08:42,563:INFO:Uploading model into container now
2023-01-09 01:08:42,564:INFO:_master_model_container: 13
2023-01-09 01:08:42,564:INFO:_display_container: 2
2023-01-09 01:08:42,564:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3260, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 01:08:42,564:INFO:create_model() successfully completed......................................
2023-01-09 01:08:42,642:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:42,642:INFO:Creating metrics dataframe
2023-01-09 01:08:42,646:INFO:Initializing Dummy Classifier
2023-01-09 01:08:42,646:INFO:Total runtime is 0.20300945440928136 minutes
2023-01-09 01:08:42,646:INFO:SubProcess create_model() called ==================================
2023-01-09 01:08:42,647:INFO:Initializing create_model()
2023-01-09 01:08:42,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B7C44AD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:42,647:INFO:Checking exceptions
2023-01-09 01:08:42,647:INFO:Importing libraries
2023-01-09 01:08:42,647:INFO:Copying training dataset
2023-01-09 01:08:42,649:INFO:Defining folds
2023-01-09 01:08:42,649:INFO:Declaring metric variables
2023-01-09 01:08:42,649:INFO:Importing untrained model
2023-01-09 01:08:42,649:INFO:Dummy Classifier Imported successfully
2023-01-09 01:08:42,649:INFO:Starting cross validation
2023-01-09 01:08:42,650:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 01:08:42,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:42,713:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:42,723:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:42,725:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:42,732:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:42,742:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:42,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:42,743:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:42,750:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:42,751:WARNING:C:\Users\bayto\anaconda3\envs\automl_project\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 01:08:42,754:INFO:Calculating mean and std
2023-01-09 01:08:42,755:INFO:Creating metrics dataframe
2023-01-09 01:08:42,758:INFO:Uploading results into container
2023-01-09 01:08:42,758:INFO:Uploading model into container now
2023-01-09 01:08:42,759:INFO:_master_model_container: 14
2023-01-09 01:08:42,759:INFO:_display_container: 2
2023-01-09 01:08:42,759:INFO:DummyClassifier(constant=None, random_state=3260, strategy='prior')
2023-01-09 01:08:42,759:INFO:create_model() successfully completed......................................
2023-01-09 01:08:42,837:INFO:SubProcess create_model() end ==================================
2023-01-09 01:08:42,837:INFO:Creating metrics dataframe
2023-01-09 01:08:42,842:INFO:Initializing create_model()
2023-01-09 01:08:42,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B7A279310>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3260), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 01:08:42,842:INFO:Checking exceptions
2023-01-09 01:08:42,843:INFO:Importing libraries
2023-01-09 01:08:42,843:INFO:Copying training dataset
2023-01-09 01:08:42,845:INFO:Defining folds
2023-01-09 01:08:42,845:INFO:Declaring metric variables
2023-01-09 01:08:42,845:INFO:Importing untrained model
2023-01-09 01:08:42,845:INFO:Declaring custom model
2023-01-09 01:08:42,846:INFO:Ada Boost Classifier Imported successfully
2023-01-09 01:08:42,846:INFO:Cross validation set to False
2023-01-09 01:08:42,846:INFO:Fitting Model
2023-01-09 01:08:42,968:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3260)
2023-01-09 01:08:42,969:INFO:create_model() successfully completed......................................
2023-01-09 01:08:43,066:INFO:_master_model_container: 14
2023-01-09 01:08:43,066:INFO:_display_container: 2
2023-01-09 01:08:43,067:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3260)
2023-01-09 01:08:43,067:INFO:compare_models() successfully completed......................................
2023-01-09 01:08:43,073:INFO:Initializing save_model()
2023-01-09 01:08:43,073:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3260), model_name=best_model, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'con...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-09 01:08:43,074:INFO:Adding model into prep_pipe
2023-01-09 01:08:43,099:INFO:best_model.pkl saved in current working directory
2023-01-09 01:08:43,103:INFO:Pipeline(memory=Memory(location=C:\Users\bayto\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'con...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=3260))],
         verbose=False)
2023-01-09 01:08:43,104:INFO:save_model() successfully completed......................................
